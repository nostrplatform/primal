{"version":3,"file":"FeedMarketPlace-34349272.js","sources":["../../src/components/FeedMarketplace/FeedMarketPlace.tsx"],"sourcesContent":["import { Component, createEffect, For, Match, onMount, Switch } from 'solid-js';\nimport styles from './FeedMarketPlace.module.scss';\n\nimport AdvancedSearchDialog from '../AdvancedSearch/AdvancedSearchDialog';\nimport { subsTo } from '../../sockets';\nimport { APP_ID } from '../../App';\nimport { fetchDVMFeeds } from '../../lib/feed';\nimport { Kind } from '../../constants';\nimport { createStore } from 'solid-js/store';\nimport { DVMMetadata, DVMStats, NostrDVM, NostrNoteActionsContent, NoteActions, PrimalArticleFeed, PrimalDVM, PrimalUser } from '../../types/primal';\nimport { convertToUser } from '../../stores/profile';\nimport FeedMarketItem from './FeedMarketPlaceItem';\nimport ButtonSecondary from '../Buttons/ButtonSecondary';\nimport ButtonPrimary from '../Buttons/ButtonPrimary';\nimport { useNavigate } from '@solidjs/router';\nimport { account, explore } from '../../translations';\nimport { useExploreContext } from '../../contexts/ExploreContext';\nimport { useAccountContext } from '../../contexts/AccountContext';\nimport { readDVMs, saveDVMs } from '../../lib/localStore';\n\nexport type MarketplaceStore = {\n  dvms: PrimalDVM[],\n  dvmStats: Record<string, DVMStats>,\n  users: Record<string, PrimalUser>,\n  previewDvm: PrimalDVM | undefined,\n  dvmMetadata: Record<string, DVMMetadata>\n  dvmActions: Record<string, NoteActions>,\n  dvmCommonPubkeys: Record<string, string[]>,\n}\n\nexport const emptyStore: MarketplaceStore = {\n  dvms: [],\n  dvmStats: {},\n  users: {},\n  previewDvm: undefined,\n  dvmMetadata: {},\n  dvmActions: {},\n  dvmCommonPubkeys: {},\n}\n\nconst FeedMarketPlace: Component<{\n  open?: boolean,\n  type?: 'notes' | 'reads',\n  onAddFeed?: (feed: PrimalArticleFeed) => void,\n}> = (props) => {\n  const account = useAccountContext();\n  const navigate = useNavigate();\n  const explore = useExploreContext();\n\n  const [store, updateStore] = createStore<MarketplaceStore>({ ...emptyStore });\n\n  onMount(() => {\n    if (store.dvms.length === 0) {\n      fetchDVMs();\n    }\n    // else {\n    //   clearDVMs();\n    // }\n  });\n\n  const fetchDVMs = () => {\n    const subId = `explore_feeds_${APP_ID}`;\n\n    const storedDvms = readDVMs(account?.publicKey);\n\n    if (storedDvms && storedDvms.length > 0) {\n      updateStore('dvms', [...storedDvms])\n    }\n\n    let fetchedDVMs: PrimalDVM[] = [];\n\n    const unsub = subsTo(subId, {\n      onEvent: (_, content) => {\n\n        if (content.kind === Kind.DVM) {\n          const dvmData = JSON.parse(content.content);\n\n          const identifier = (content.tags?.find(t => t[0] === 'd') || ['d', ''])[1];\n\n          const dvm: PrimalDVM = {\n            id: content.id,\n            name: dvmData.name || '',\n            about: dvmData.about || '',\n            amount: dvmData.amount || 'free',\n            primalVerifiedRequired: dvmData.primalVerifiedRequired || false,\n            pubkey: content.pubkey,\n            supportedKinds: content.tags?.reduce<string[]>((acc, t: string[]) => t[0] === 'k' ? [...acc, t[1]] : acc, []) || [],\n            identifier,\n            picture: dvmData.picture,\n            image: dvmData.image,\n            coordinate: `${Kind.DVM}:${content.pubkey}:${identifier}`,\n            primal_spec: dvmData.primal_spec,\n          };\n\n          fetchedDVMs.push(dvm);\n\n          return;\n        }\n\n        if (content.kind === Kind.Metadata) {\n          const user = convertToUser(content, content.pubkey);\n\n\n          updateStore('users', user.pubkey, () => ({ ...user }));\n          return;\n        }\n\n        if (content.kind === Kind.NoteStats) {\n          const stats = JSON.parse(content.content);\n\n          if (!stats.event_id) return;\n\n          updateStore('dvmStats', stats.event_id, () => ({\n            likes: stats.likes || 0,\n            satszapped: stats.satszapped || 0,\n          }));\n        }\n\n        if (content.kind === Kind.DVMMetadata) {\n          const metadata = JSON.parse(content.content);\n\n          if (!metadata.event_id) return;\n\n          updateStore('dvmMetadata', metadata.event_id, () => ({ kind: metadata.kind, isPrimal: metadata.is_primal}))\n        }\n\n        if (content.kind === Kind.NoteActions) {\n          const noteActionContent = content as NostrNoteActionsContent;\n          const noteActions = JSON.parse(noteActionContent.content) as NoteActions;\n\n          updateStore('dvmActions', noteActions.event_id, () => ({ ...noteActions }));\n          return;\n        }\n\n        if (content.kind === Kind.DVMFollowsActions) {\n          const followsActions = JSON.parse(content.content);\n\n          updateStore('dvmCommonPubkeys', followsActions.event_id, () => [...followsActions.users])\n        }\n      },\n      onEose: () => {\n\n        updateStore('dvms', () => ({ ...fetchedDVMs }));\n        saveDVMs(account?.publicKey, [...fetchedDVMs]);\n        unsub();\n      }\n    });\n\n    fetchDVMFeeds(account?.publicKey, subId, props.type);\n  }\n\n  const clearDVMs = () => {\n    // delay for close animation\n    setTimeout(() => {\n      updateStore(() => ({\n        dvms: [],\n        dvmStats: {},\n        users: {},\n        previewDvm: undefined,\n      }));\n\n    }, 300);\n  }\n\n  const commonUsers = (id: string) => {\n    const pks = store.dvmCommonPubkeys[id] || [];\n\n    return pks.reduce<PrimalUser[]>((acc, pk) => {\n      const user = store.users[pk];\n\n      return user ?\n        [ ...acc, { ...user }] :\n        acc;\n    }, []);\n  }\n\n\n  return (\n    <Switch>\n      <Match when={!store.previewDvm}>\n        <div class={styles.feedMarketplaceContent}>\n          <div class={styles.boothsPage}>\n            <For each={store.dvms}>\n              {dvm => (\n                <FeedMarketItem\n                  dvm={dvm}\n                  author={store.users[dvm.pubkey]}\n                  stats={store.dvmStats[dvm.id]}\n                  metadata={store.dvmMetadata[dvm.id]}\n                  actions={store.dvmActions[dvm.id]}\n                  commonUsers={commonUsers(dvm.id)}\n                  onClick={() => {\n                    explore?.actions.setPreviewDVM(\n                      dvm,\n                      store.dvmStats[dvm.id],\n                      store.dvmMetadata[dvm.id],\n                      store.users[dvm.pubkey],\n                      store.dvmActions[dvm.id],\n                      store.users,\n                      store.dvmCommonPubkeys[dvm.id],\n                    )\n                    navigate(`/explore/feed/${dvm.identifier}_by_${dvm.pubkey}`)\n                  }}\n                />\n              )}\n            </For>\n          </div>\n        </div>\n      </Match>\n    </Switch>\n  )\n}\n\nexport default FeedMarketPlace;\n"],"names":["emptyStore","dvms","dvmStats","users","previewDvm","undefined","dvmMetadata","dvmActions","dvmCommonPubkeys","FeedMarketPlace","props","account","useAccountContext","navigate","useNavigate","explore","useExploreContext","store","updateStore","createStore","onMount","length","fetchDVMs","subId","APP_ID","storedDvms","readDVMs","publicKey","fetchedDVMs","unsub","subsTo","onEvent","_","content","kind","Kind","DVM","dvmData","JSON","parse","identifier","tags","find","t","dvm","id","name","about","amount","primalVerifiedRequired","pubkey","supportedKinds","reduce","acc","picture","image","coordinate","primal_spec","push","Metadata","user","convertToUser","NoteStats","stats","event_id","likes","satszapped","DVMMetadata","metadata","isPrimal","is_primal","NoteActions","noteActions","DVMFollowsActions","followsActions","onEose","saveDVMs","fetchDVMFeeds","type","commonUsers","pk","_$createComponent","Switch","children","Match","when","_el$","_tmpl$","_el$2","firstChild","_$insert","For","each","FeedMarketItem","author","actions","onClick","setPreviewDVM","_$effect","_p$","_v$","styles","feedMarketplaceContent","_v$2","boothsPage","_$className"],"mappings":"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"}