{"version":3,"file":"textArea-802fec28.js","sources":["../../src/lib/textArea.ts"],"sourcesContent":["  // Taken and slightly adapted from https://github.com/component/textarea-caret-position\n\n  // We'll copy the properties below into the mirror div.\n  // Note that some browsers, such as Firefox, do not concatenate properties\n  // into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n  // so we have to list every single property explicitly.\n  const properties = [\n    'direction',  // RTL support\n    'boxSizing',\n    'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n    'height',\n    'overflowX',\n    'overflowY',  // copy the scrollbar for IE\n\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'borderStyle',\n\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    'fontStyle',\n    'fontVariant',\n    'fontWeight',\n    'fontStretch',\n    'fontSize',\n    'fontSizeAdjust',\n    'lineHeight',\n    'fontFamily',\n\n    'textAlign',\n    'textTransform',\n    'textIndent',\n    'textDecoration',  // might not make a difference, but better be safe\n\n    'letterSpacing',\n    'wordSpacing',\n\n    'tabSize',\n    'MozTabSize'\n\n  ];\n\n  var isBrowser = (typeof window !== 'undefined');\n  // @ts-ignore\n  var isFirefox = (isBrowser && window.mozInnerScreenX != null);\n\n  export const getCaretCoordinates = (element: HTMLTextAreaElement | HTMLInputElement, position: number) => {\n    if (!isBrowser) {\n      throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\n    }\n\n    // The mirror div will replicate the textarea's style\n    var div = document.createElement('div');\n    div.id = 'input-textarea-caret-position-mirror-div';\n    document.body.appendChild(div);\n\n    var style = div.style;\n    // @ts-ignore\n    var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\n    var isInput = element.nodeName === 'INPUT';\n\n    // Default textarea styles\n    style.whiteSpace = 'pre-wrap';\n    if (!isInput)\n      style.wordWrap = 'break-word';  // only for textarea-s\n\n    // Position off-screen\n    style.position = 'absolute';  // required to return coordinates properly\n\n    // Transfer the element's properties to the div\n    properties.forEach(function (prop) {\n      if (isInput && prop === 'lineHeight') {\n        // Special case for <input>s because text is rendered centered and line height may be != height\n        if (computed.boxSizing === \"border-box\") {\n          var height = parseInt(computed.height);\n          var outerHeight =\n            parseInt(computed.paddingTop) +\n            parseInt(computed.paddingBottom) +\n            parseInt(computed.borderTopWidth) +\n            parseInt(computed.borderBottomWidth);\n          var targetHeight = outerHeight + parseInt(computed.lineHeight);\n          if (height > targetHeight) {\n            style.lineHeight = height - outerHeight + \"px\";\n          } else if (height === targetHeight) {\n            style.lineHeight = computed.lineHeight;\n          } else {\n            style.lineHeight = '0';\n          }\n        } else {\n          style.lineHeight = computed.height;\n        }\n      } else {\n        // @ts-ignore\n        style[prop] = computed[prop];\n      }\n    });\n\n    if (isFirefox) {\n      // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n      if (element.scrollHeight > parseInt(computed.height))\n        style.overflowY = 'scroll';\n    } else {\n      style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n    }\n\n    div.textContent = element.value.substring(0, position);\n    // The second special handling for input type=\"text\" vs textarea:\n    // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n    if (isInput)\n      div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\n\n    var span = document.createElement('span');\n    // Wrapping must be replicated *exactly*, including when a long word gets\n    // onto the next line, with whitespace at the end of the line before (#7).\n    // The  *only* reliable way to do that is to copy the *entire* rest of the\n    // textarea's content into the <span> created at the caret position.\n    // For inputs, just '.' would be enough, but no need to bother.\n    span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\n    div.appendChild(span);\n\n    var coordinates = {\n      top: span.offsetTop + parseInt(computed['borderTopWidth']),\n      left: span.offsetLeft + parseInt(computed['borderLeftWidth']),\n      height: parseInt(computed['lineHeight'])\n    };\n\n    document.body.removeChild(div);\n\n    return coordinates;\n  }\n"],"names":["properties","isBrowser","isFirefox","getCaretCoordinates","__name","element","position","div","style","computed","isInput","prop","height","outerHeight","targetHeight","span","coordinates"],"mappings":"+EAME,MAAMA,EAAa,CACjB,YACA,YACA,QACA,SACA,YACA,YAEA,iBACA,mBACA,oBACA,kBACA,cAEA,aACA,eACA,gBACA,cAGA,YACA,cACA,aACA,cACA,WACA,iBACA,aACA,aAEA,YACA,gBACA,aACA,iBAEA,gBACA,cAEA,UACA,YAEF,EAEA,IAAIC,EAAa,OAAO,OAAW,IAE/BC,EAAaD,GAAa,OAAO,iBAAmB,KAE3C,MAAAE,EAAsBC,EAAA,CAACC,EAAiDC,IAAqB,CACxG,GAAI,CAACL,EACG,MAAA,IAAI,MAAM,gFAAgF,EAI9F,IAAAM,EAAM,SAAS,cAAc,KAAK,EACtCA,EAAI,GAAK,2CACA,SAAA,KAAK,YAAYA,CAAG,EAE7B,IAAIC,EAAQD,EAAI,MAEZE,EAAW,OAAO,iBAAmB,OAAO,iBAAiBJ,CAAO,EAAIA,EAAQ,aAChFK,EAAUL,EAAQ,WAAa,QAGnCG,EAAM,WAAa,WACdE,IACHF,EAAM,SAAW,cAGnBA,EAAM,SAAW,WAGNR,EAAA,QAAQ,SAAUW,EAAM,CAC7B,GAAAD,GAAWC,IAAS,aAElB,GAAAF,EAAS,YAAc,aAAc,CACnC,IAAAG,EAAS,SAASH,EAAS,MAAM,EACjCI,EACF,SAASJ,EAAS,UAAU,EAC5B,SAASA,EAAS,aAAa,EAC/B,SAASA,EAAS,cAAc,EAChC,SAASA,EAAS,iBAAiB,EACjCK,EAAeD,EAAc,SAASJ,EAAS,UAAU,EACzDG,EAASE,EACLN,EAAA,WAAaI,EAASC,EAAc,KACjCD,IAAWE,EACpBN,EAAM,WAAaC,EAAS,WAE5BD,EAAM,WAAa,GACrB,MAEAA,EAAM,WAAaC,EAAS,YAIxBD,EAAAG,CAAI,EAAIF,EAASE,CAAI,CAC7B,CACD,EAEGT,EAEEG,EAAQ,aAAe,SAASI,EAAS,MAAM,IACjDD,EAAM,UAAY,UAEpBA,EAAM,SAAW,SAGnBD,EAAI,YAAcF,EAAQ,MAAM,UAAU,EAAGC,CAAQ,EAGjDI,IACFH,EAAI,YAAcA,EAAI,YAAY,QAAQ,MAAO,GAAQ,GAEvD,IAAAQ,EAAO,SAAS,cAAc,MAAM,EAMxCA,EAAK,YAAcV,EAAQ,MAAM,UAAUC,CAAQ,GAAK,IACxDC,EAAI,YAAYQ,CAAI,EAEpB,IAAIC,EAAc,CAChB,IAAKD,EAAK,UAAY,SAASN,EAAS,cAAiB,EACzD,KAAMM,EAAK,WAAa,SAASN,EAAS,eAAkB,EAC5D,OAAQ,SAASA,EAAS,UAAa,CAAA,EAGhC,gBAAA,KAAK,YAAYF,CAAG,EAEtBS,CACT,EAnFmC"}