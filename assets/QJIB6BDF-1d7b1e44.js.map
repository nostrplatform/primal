{"version":3,"file":"QJIB6BDF-1d7b1e44.js","sources":["../../node_modules/@kobalte/core/dist/chunk/PFCXKQPV.jsx","../../node_modules/@kobalte/core/dist/chunk/GIFDQEXV.jsx","../../node_modules/@kobalte/core/dist/chunk/QJIB6BDF.jsx"],"sourcesContent":["import {\n  createRegisterId\n} from \"./JNCCF6MP.jsx\";\nimport {\n  createTagName\n} from \"./CWCB447F.jsx\";\nimport {\n  Polymorphic\n} from \"./E73PKFB3.jsx\";\n\n// src/form-control/create-form-control.tsx\nimport {\n  access,\n  createGenerateId,\n  mergeDefaultProps\n} from \"@kobalte/utils\";\nimport { createMemo, createSignal, createUniqueId } from \"solid-js\";\nvar FORM_CONTROL_PROP_NAMES = [\n  \"id\",\n  \"name\",\n  \"validationState\",\n  \"required\",\n  \"disabled\",\n  \"readOnly\"\n];\nfunction createFormControl(props) {\n  const defaultId = `form-control-${createUniqueId()}`;\n  const mergedProps = mergeDefaultProps({ id: defaultId }, props);\n  const [labelId, setLabelId] = createSignal();\n  const [fieldId, setFieldId] = createSignal();\n  const [descriptionId, setDescriptionId] = createSignal();\n  const [errorMessageId, setErrorMessageId] = createSignal();\n  const getAriaLabelledBy = (fieldId2, fieldAriaLabel, fieldAriaLabelledBy) => {\n    const hasAriaLabelledBy = fieldAriaLabelledBy != null || labelId() != null;\n    return [\n      fieldAriaLabelledBy,\n      labelId(),\n      // If there is both an aria-label and aria-labelledby, add the field itself has an aria-labelledby\n      hasAriaLabelledBy && fieldAriaLabel != null ? fieldId2 : void 0\n    ].filter(Boolean).join(\" \") || void 0;\n  };\n  const getAriaDescribedBy = (fieldAriaDescribedBy) => {\n    return [\n      descriptionId(),\n      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA.\n      // See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268\n      errorMessageId(),\n      fieldAriaDescribedBy\n    ].filter(Boolean).join(\" \") || void 0;\n  };\n  const dataset = createMemo(() => ({\n    \"data-valid\": access(mergedProps.validationState) === \"valid\" ? \"\" : void 0,\n    \"data-invalid\": access(mergedProps.validationState) === \"invalid\" ? \"\" : void 0,\n    \"data-required\": access(mergedProps.required) ? \"\" : void 0,\n    \"data-disabled\": access(mergedProps.disabled) ? \"\" : void 0,\n    \"data-readonly\": access(mergedProps.readOnly) ? \"\" : void 0\n  }));\n  const formControlContext = {\n    name: () => access(mergedProps.name) ?? access(mergedProps.id),\n    dataset,\n    validationState: () => access(mergedProps.validationState),\n    isRequired: () => access(mergedProps.required),\n    isDisabled: () => access(mergedProps.disabled),\n    isReadOnly: () => access(mergedProps.readOnly),\n    labelId,\n    fieldId,\n    descriptionId,\n    errorMessageId,\n    getAriaLabelledBy,\n    getAriaDescribedBy,\n    generateId: createGenerateId(() => access(mergedProps.id)),\n    registerLabel: createRegisterId(setLabelId),\n    registerField: createRegisterId(setFieldId),\n    registerDescription: createRegisterId(setDescriptionId),\n    registerErrorMessage: createRegisterId(setErrorMessageId)\n  };\n  return { formControlContext };\n}\n\n// src/form-control/form-control-context.tsx\nimport { createContext, useContext } from \"solid-js\";\nvar FormControlContext = createContext();\nfunction useFormControlContext() {\n  const context = useContext(FormControlContext);\n  if (context === void 0) {\n    throw new Error(\n      \"[kobalte]: `useFormControlContext` must be used within a `FormControlContext.Provider` component\"\n    );\n  }\n  return context;\n}\n\n// src/form-control/form-control-description.tsx\nimport { mergeDefaultProps as mergeDefaultProps2 } from \"@kobalte/utils\";\nimport { createEffect, onCleanup } from \"solid-js\";\nfunction FormControlDescription(props) {\n  const context = useFormControlContext();\n  const mergedProps = mergeDefaultProps2(\n    {\n      id: context.generateId(\"description\")\n    },\n    props\n  );\n  createEffect(() => onCleanup(context.registerDescription(mergedProps.id)));\n  return <Polymorphic\n    as=\"div\"\n    {...context.dataset()}\n    {...mergedProps}\n  />;\n}\n\n// src/form-control/form-control-error-message.tsx\nimport { mergeDefaultProps as mergeDefaultProps3 } from \"@kobalte/utils\";\nimport {\n  Show,\n  createEffect as createEffect2,\n  onCleanup as onCleanup2,\n  splitProps\n} from \"solid-js\";\nfunction FormControlErrorMessage(props) {\n  const context = useFormControlContext();\n  const mergedProps = mergeDefaultProps3(\n    {\n      id: context.generateId(\"error-message\")\n    },\n    props\n  );\n  const [local, others] = splitProps(mergedProps, [\"forceMount\"]);\n  const isInvalid = () => context.validationState() === \"invalid\";\n  createEffect2(() => {\n    if (!isInvalid()) {\n      return;\n    }\n    onCleanup2(context.registerErrorMessage(others.id));\n  });\n  return <Show when={local.forceMount || isInvalid()}><Polymorphic\n    as=\"div\"\n    {...context.dataset()}\n    {...others}\n  /></Show>;\n}\n\n// src/form-control/form-control-label.tsx\nimport {\n  mergeDefaultProps as mergeDefaultProps4,\n  mergeRefs\n} from \"@kobalte/utils\";\nimport { createEffect as createEffect3, onCleanup as onCleanup3, splitProps as splitProps2 } from \"solid-js\";\nfunction FormControlLabel(props) {\n  let ref;\n  const context = useFormControlContext();\n  const mergedProps = mergeDefaultProps4(\n    {\n      id: context.generateId(\"label\")\n    },\n    props\n  );\n  const [local, others] = splitProps2(mergedProps, [\"ref\"]);\n  const tagName = createTagName(\n    () => ref,\n    () => \"label\"\n  );\n  createEffect3(() => onCleanup3(context.registerLabel(others.id)));\n  return <Polymorphic\n    as=\"label\"\n    ref={mergeRefs((el) => ref = el, local.ref)}\n    for={tagName() === \"label\" ? context.fieldId() : void 0}\n    {...context.dataset()}\n    {...others}\n  />;\n}\n\nexport {\n  FORM_CONTROL_PROP_NAMES,\n  createFormControl,\n  FormControlContext,\n  useFormControlContext,\n  FormControlDescription,\n  FormControlErrorMessage,\n  FormControlLabel\n};\n","import {\n  useFormControlContext\n} from \"./PFCXKQPV.jsx\";\n\n// src/form-control/create-form-control-field.tsx\nimport { access, mergeDefaultProps } from \"@kobalte/utils\";\nimport { createEffect, onCleanup } from \"solid-js\";\nvar FORM_CONTROL_FIELD_PROP_NAMES = [\n  \"id\",\n  \"aria-label\",\n  \"aria-labelledby\",\n  \"aria-describedby\"\n];\nfunction createFormControlField(props) {\n  const context = useFormControlContext();\n  const mergedProps = mergeDefaultProps(\n    { id: context.generateId(\"field\") },\n    props\n  );\n  createEffect(() => onCleanup(context.registerField(access(mergedProps.id))));\n  return {\n    fieldProps: {\n      id: () => access(mergedProps.id),\n      ariaLabel: () => access(mergedProps[\"aria-label\"]),\n      ariaLabelledBy: () => context.getAriaLabelledBy(\n        access(mergedProps.id),\n        access(mergedProps[\"aria-label\"]),\n        access(mergedProps[\"aria-labelledby\"])\n      ),\n      ariaDescribedBy: () => context.getAriaDescribedBy(access(mergedProps[\"aria-describedby\"]))\n    }\n  };\n}\n\nexport {\n  FORM_CONTROL_FIELD_PROP_NAMES,\n  createFormControlField\n};\n","// src/primitives/create-form-reset-listener/create-form-reset-listener.ts\nimport { createEffect, on, onCleanup } from \"solid-js\";\nfunction createFormResetListener(element, handler) {\n  createEffect(\n    on(element, (element2) => {\n      if (element2 == null) {\n        return;\n      }\n      const form = getClosestForm(element2);\n      if (form == null) {\n        return;\n      }\n      form.addEventListener(\"reset\", handler, { passive: true });\n      onCleanup(() => {\n        form.removeEventListener(\"reset\", handler);\n      });\n    })\n  );\n}\nfunction getClosestForm(element) {\n  return isFormElement(element) ? element.form : element.closest(\"form\");\n}\nfunction isFormElement(element) {\n  return element.matches(\"textarea, input, select, button\");\n}\n\nexport {\n  createFormResetListener\n};\n"],"names":["FORM_CONTROL_PROP_NAMES","createFormControl","props","defaultId","createUniqueId","mergedProps","mergeDefaultProps","id","labelId","setLabelId","createSignal","fieldId","setFieldId","descriptionId","setDescriptionId","errorMessageId","setErrorMessageId","getAriaLabelledBy","fieldId2","fieldAriaLabel","fieldAriaLabelledBy","hasAriaLabelledBy","filter","Boolean","join","getAriaDescribedBy","fieldAriaDescribedBy","dataset","createMemo","access","validationState","required","disabled","readOnly","formControlContext","name","isRequired","isDisabled","isReadOnly","generateId","createGenerateId","registerLabel","createRegisterId","registerField","registerDescription","registerErrorMessage","FormControlContext","createContext","useFormControlContext","context","useContext","Error","FormControlDescription","mergeDefaultProps2","createEffect","onCleanup","_$createComponent","Polymorphic","_$mergeProps","as","FormControlErrorMessage","mergeDefaultProps3","local","others","splitProps","isInvalid","createEffect2","onCleanup2","Show","when","forceMount","children","FormControlLabel","ref","mergeDefaultProps4","splitProps2","tagName","createTagName","createEffect3","onCleanup3","r$","_ref$","mergeRefs","el","_$memo","FORM_CONTROL_FIELD_PROP_NAMES","createFormControlField","fieldProps","ariaLabel","ariaLabelledBy","ariaDescribedBy","createFormResetListener","element","handler","on","element2","form","getClosestForm","addEventListener","passive","removeEventListener","isFormElement","closest","matches"],"mappings":"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","x_google_ignoreList":[0,1,2]}