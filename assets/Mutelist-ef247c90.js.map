{"version":3,"file":"Mutelist-ef247c90.js","sources":["../../src/pages/Mutelist.tsx"],"sourcesContent":["import { A, useParams } from '@solidjs/router';\nimport { Component, createEffect, createSignal, For, Match, Show, Switch } from 'solid-js';\nimport { createStore } from 'solid-js/store';\nimport { APP_ID } from '../App';\nimport Avatar from '../components/Avatar/Avatar';\nimport PageCaption from '../components/PageCaption/PageCaption';\nimport { algoNpub, Kind, specialAlgos } from '../constants';\nimport { hexToNpub, npubToHex } from '../lib/keys';\nimport { getCategorizedList, getProfileMuteList, getUserProfileInfo } from '../lib/profile';\nimport { subsTo } from '../sockets';\nimport { convertToUser, nip05Verification, userName } from '../stores/profile';\nimport { PrimalUser } from '../types/primal';\n\nimport { settings as t } from '../translations';\n\nimport styles from './Settings/Settings.module.scss';\nimport { useIntl } from '@cookbook/solid-intl';\nimport { useToastContext } from '../components/Toaster/Toaster';\nimport PageTitle from '../components/PageTitle/PageTitle';\nimport { useAppContext } from '../contexts/AppContext';\n\nconst lists: Record<string, string> = {\n  primal_nsfw: 'nsfw_list',\n  primal_spam: 'spam_list',\n};\n\nconst Mutelist: Component = () => {\n  const params = useParams();\n\n  const intl = useIntl();\n  const toast = useToastContext();\n  const app = useAppContext();\n\n  const [mutedUsers, setMutedUsers] = createStore<Record<string,PrimalUser>>({});\n  const [mutedPubkeys, setMutedPubkeys] = createStore<string[]>([]);\n  const [author, setAuthor] = createSignal<PrimalUser>();\n\n  const [isFetching, setIsFetching] = createSignal(true);\n\n  const getMutelist = (id: string) => {\n    const npub = specialAlgos.includes(id) ? algoNpub : id;\n    const pubkey = npub.startsWith('npub') ? npubToHex(npub) : npub;\n    const random = Math.floor(Math.random() * 10_000);\n    const subId = `prl_${random}_${APP_ID}`;\n    let pubkeys: string[] = [];\n    let users: Record<string, PrimalUser> = {};\n\n    const unsub = subsTo(subId, {\n      onEvent: (_, content) => {\n        if (content && [Kind.CategorizedPeople, Kind.MuteList].includes(content?.kind || 0)) {\n          // @ts-ignore\n          pubkeys = content.tags.reduce((acc, t) => t[0] === 'p' ? [...acc, t[1]] : acc, []);\n        }\n        if (content?.kind === Kind.Metadata) {\n          users[content.pubkey] = convertToUser(content, content.pubkey);\n        }\n      },\n      onEose: () => {\n        setMutedPubkeys(() => [...pubkeys]);\n        setMutedUsers(() => ({ ...users }));\n        setIsFetching(false);\n        unsub();\n      },\n    });\n\n    if (specialAlgos.includes(id)) {\n      getCategorizedList(pubkey, lists[id], subId);\n      return;\n    }\n\n    getProfileMuteList(pubkey, subId);\n  };\n\n  const getAuthor = (id: string) => {\n    const npub = specialAlgos.includes(id) ? algoNpub : id;\n    const pubkey = npub.startsWith('npub') ? npubToHex(npub) : npub;\n    const random = Math.floor(Math.random() * 10_000);\n    const subId = `profile_${random}_${APP_ID}`;\n    let user: PrimalUser | undefined;\n\n    const unsub = subsTo(subId, {\n      onEvent: (_, content) => {\n        if (content?.kind === Kind.Metadata) {\n          user = convertToUser(content, content.pubkey);\n        }\n      },\n      onEose: () => {\n        setAuthor(user);\n        unsub();\n      }\n    });\n\n    getUserProfileInfo(pubkey, undefined, subId);\n  };\n\n  const user = (pubkey: string) => mutedUsers[pubkey];\n\n  createEffect(() => {\n    if (params.npub) {\n      getMutelist(params.npub);\n      getAuthor(params.npub);\n    }\n  });\n\n  return (\n    <div class={styles.settingsContainer}>\n      <PageTitle title={\n        specialAlgos.includes(params.npub) ?\n          // @ts-ignore\n          intl.formatMessage(t.moderation.algos[params.npub]) :\n          intl.formatMessage(t.moderation.moderationItem, { name: userName(author()) })\n        }\n      />\n\n      <PageCaption>\n        <div style=\"display: flex; align-items: center; justify-content: space-between; width: 100%;\">\n          <div style=\"display: flex; align-items: center;\">\n            <Switch>\n              <Match when={author() && specialAlgos.includes(params.npub)}>\n                <div style=\"height: 44px;\">\n                  {\n                    // @ts-ignore\n                    intl.formatMessage(t.moderation.algos[params.npub])\n                  }\n                </div>\n              </Match>\n              <Match when={author()}>\n                <div style=\"height: 44px;\">\n                  {intl.formatMessage(t.moderation.moderationItem, { name: userName(author()) })}\n                </div>\n              </Match>\n            </Switch>\n          </div>\n          <button\n            class={styles.clearButton}\n            onClick={() => {\n              window.navigator.clipboard.writeText(mutedPubkeys.map(hexToNpub).join());\n              toast?.sendSuccess('Mute list copied to clipboard')\n            }}\n            title=\"copy mutelist to clipboard\"\n          >\n            <div class={styles.copyIcon}></div>\n          </button>\n        </div>\n      </PageCaption>\n\n      <div>\n        <For\n          each={mutedPubkeys}\n          fallback={\n            <Show when={!isFetching()}>\n              <div class={styles.emptyListBanner}>\n                {intl.formatMessage(t.muted.emptyOther)}\n              </div>\n            </Show>\n          }\n        >\n          {pubkey => (\n            <div class={styles.mutedUser}>\n              <Show\n                when={user(pubkey)}\n                fallback={\n                  <A class={styles.userInfo} href={app?.actions.profileLink(pubkey) || ''}>\n                    <div class={styles.userName}>\n                      <div class={styles.verification}>{hexToNpub(pubkey)}</div>\n                    </div>\n                  </A>\n                }\n              >\n                <A class={styles.userInfo} href={app?.actions.profileLink(pubkey) || ''}>\n                  <Avatar user={user(pubkey)} size='sm' />\n                  <div class={styles.userName}>\n                    <div class={styles.title}>{userName(user(pubkey))}</div>\n                    <div class={styles.verification}>{nip05Verification(user(pubkey))}</div>\n                  </div>\n                </A>\n              </Show>\n            </div>\n          )}\n        </For>\n      </div>\n    </div>\n  );\n}\n\nexport default Mutelist;\n"],"names":["lists","primal_nsfw","primal_spam","Mutelist","params","useParams","intl","useIntl","toast","useToastContext","app","useAppContext","mutedUsers","setMutedUsers","createStore","mutedPubkeys","setMutedPubkeys","author","setAuthor","createSignal","isFetching","setIsFetching","getMutelist","id","npub","specialAlgos","includes","algoNpub","pubkey","startsWith","npubToHex","subId","Math","floor","random","APP_ID","pubkeys","users","unsub","subsTo","onEvent","_","content","Kind","CategorizedPeople","MuteList","kind","tags","reduce","acc","t","Metadata","convertToUser","onEose","getCategorizedList","getProfileMuteList","getAuthor","user","getUserProfileInfo","undefined","createEffect","_el$","_tmpl$3","_el$8","firstChild","_$insert","_$createComponent","PageTitle","title","_$memo","formatMessage","moderation","algos","moderationItem","name","userName","PageCaption","children","_el$2","_tmpl$2","_el$3","_el$6","nextSibling","_el$7","Switch","Match","when","_el$4","_tmpl$","_el$5","$$click","window","navigator","clipboard","writeText","map","hexToNpub","join","sendSuccess","_$effect","_p$","_v$","styles","clearButton","_v$2","copyIcon","_$className","For","each","fallback","Show","_el$9","_tmpl$4","muted","emptyOther","emptyListBanner","_el$10","A","userInfo","href","actions","profileLink","_el$14","_el$15","_v$6","_v$7","verification","Avatar","size","_el$11","_tmpl$5","_el$12","_el$13","nip05Verification","_v$3","_v$4","_v$5","mutedUser","settingsContainer","_$delegateEvents"],"mappings":"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"}