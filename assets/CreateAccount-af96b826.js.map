{"version":3,"file":"CreateAccount-af96b826.js","sources":["../../src/pages/CreateAccount.tsx"],"sourcesContent":["import { useIntl } from '@cookbook/solid-intl';\nimport { useNavigate } from '@solidjs/router';\nimport { Component, createEffect, createSignal, For, Match, onCleanup, onMount, Show, Switch } from 'solid-js';\nimport { APP_ID } from '../App';\nimport Avatar from '../components/Avatar/Avatar';\nimport PageCaption from '../components/PageCaption/PageCaption';\nimport PageTitle from '../components/PageTitle/PageTitle';\nimport { useToastContext } from '../components/Toaster/Toaster';\nimport { usernameRegex, Kind } from '../constants';\nimport { useAccountContext } from '../contexts/AccountContext';\nimport { useMediaContext } from '../contexts/MediaContext';\nimport { useProfileContext } from '../contexts/ProfileContext';\nimport { getProfileContactList, getRelays, getSuggestions, getUserProfiles, sendProfile, sendRelays } from '../lib/profile';\nimport {\n  actions as tActions,\n  account as tAccount,\n  settings as tSettings,\n  toast as tToast,\n  upload as tUpload,\n} from '../translations';\nimport { NostrRelays, NostrUserContent, PrimalUser } from '../types/primal';\n\nimport styles from './CreateAccount.module.scss';\nimport { createStore, reconcile } from 'solid-js/store';\nimport { generateKeys, setTempNsec } from '../lib/PrimalNostr';\nimport { hexToNsec } from '../lib/keys';\nimport { storeSec } from '../lib/localStore';\nimport CreatePinModal from '../components/CreatePinModal/CreatePinModal';\nimport { useSearchContext } from '../contexts/SearchContext';\nimport { sendContacts, triggerImportEvents } from '../lib/notes';\nimport ButtonSecondary from '../components/Buttons/ButtonSecondary';\nimport { convertToUser, nip05Verification, userName } from '../stores/profile';\nimport { subsTo } from '../sockets';\nimport ButtonPrimary from '../components/Buttons/ButtonPrimary';\nimport ButtonFlip from '../components/Buttons/ButtonFlip';\nimport Uploader from '../components/Uploader/Uploader';\nimport { useSettingsContext } from '../contexts/SettingsContext';\n\ntype AutoSizedTextArea = HTMLTextAreaElement & { _baseScrollHeight: number };\n\nconst CreateAccount: Component = () => {  const intl = useIntl();\n  const profile = useProfileContext();\n  const media = useMediaContext();\n  const account = useAccountContext();\n  const search = useSearchContext();\n  const toast = useToastContext();\n  const settings = useSettingsContext();\n  const navigate = useNavigate();\n\n  let textArea: HTMLTextAreaElement | undefined;\n  let fileUploadAvatar: HTMLInputElement | undefined;\n  let fileUploadBanner: HTMLInputElement | undefined;\n  let nameInput: HTMLInputElement | undefined;\n\n  const [isBannerCached, setIsBannerCached] = createSignal(false);\n  const [isMoreVisible, setIsMoreVisible] = createSignal(false);\n\n  const [avatarPreview, setAvatarPreview] = createSignal<string>();\n  const [bannerPreview, setBannerPreview] = createSignal<string>();\n\n  const [accountName, setAccountName] = createSignal('');\n  const [isNameValid, setIsNameValid] = createSignal<boolean>(false);\n\n  const [fileToUpload, setFileToUpload] = createSignal<File | undefined>();\n  const [uploadTarget, setUploadTarget] = createSignal<'picture' | 'banner' | 'none'>('none');\n  const [openSockets, setOpenSockets] = createSignal(false);\n\n  createEffect(() => {\n    setOpenSockets(() => currentStep() === 'name');\n  });\n\n  onCleanup(() => {\n    setOpenSockets(false);\n  });\n\n  const flagBannerForWarning = () => {\n    const dev = localStorage.getItem('devMode') === 'true';\n\n    // @ts-ignore\n    if (isBannerCached() || !dev) {\n      return '';\n    }\n\n    return styles.cacheFlag;\n  }\n\n  const imgError = (event: any) => {\n    const banner = document.getElementById('profile_banner');\n\n    if (banner) {\n      banner.innerHTML = `<div class=\"${styles.bannerPlaceholder}\"></div>`;\n    }\n\n    return true;\n  }\n\n  const banner = () => {\n    const src = bannerPreview();\n    const url = media?.actions.getMediaUrl(src, 'm', true);\n\n    setIsBannerCached(!!url);\n\n    return url ?? src;\n  }\n\n  const getScrollHeight = (elm: AutoSizedTextArea) => {\n    var savedValue = elm.value\n    elm.value = ''\n    elm._baseScrollHeight = elm.scrollHeight\n    elm.value = savedValue\n  }\n\n  const onExpandableTextareaInput: () => void = () => {\n    const maxHeight = document.documentElement.clientHeight || window.innerHeight || 0;\n\n    const elm = textArea as AutoSizedTextArea;\n\n    const minRows = parseInt(elm.getAttribute('data-min-rows') || '0');\n\n    !elm._baseScrollHeight && getScrollHeight(elm);\n\n    if (elm.scrollHeight >= (maxHeight / 3)) {\n      return;\n    }\n\n    elm.rows = minRows;\n    const rows = Math.ceil((elm.scrollHeight - elm._baseScrollHeight) / 20);\n    elm.rows = minRows + rows;\n  }\n\n  const onNameInput = () => {\n    const value = nameInput?.value || '';\n\n    setAccountName(() => value);\n    setIsNameValid(usernameRegex.test(value))\n  };\n\n  const resetUpload = () => {\n    if (fileUploadAvatar) {\n      fileUploadAvatar.value = '';\n    }\n\n    if (fileUploadBanner) {\n      fileUploadBanner.value = '';\n    }\n\n    setFileToUpload(undefined);\n    setUploadTarget('none');\n  };\n\n  const onUpload = (target: 'picture' | 'banner', fileUpload: HTMLInputElement | undefined) => {\n\n    if (!fileUpload) {\n      return;\n    }\n\n    const file = fileUpload.files ? fileUpload.files[0] : null;\n\n    if (file) {\n      setUploadTarget(target);\n      setFileToUpload(file);\n    }\n  }\n\n  const onSubmit = async (e: SubmitEvent) => {\n    e.preventDefault();\n\n    if (!e.target || !account) {\n      return false;\n    }\n\n    const pubkey = account.publicKey;\n\n    const form = e.target as HTMLFormElement;\n\n    const data = new FormData(form);\n\n    const name = data.get('name')?.toString() || '';\n\n    if (!usernameRegex.test(name)) {\n      toast?.sendWarning(intl.formatMessage(tSettings.profile.name.formError));\n      return false;\n    }\n\n    let relaySettings = account.defaultRelays.reduce<NostrRelays>((acc, r) => ({ ...acc, [r]: { write: true, read: true }}), {});\n\n    let metadata: Record<string, string> = {};\n\n    [ 'displayName',\n      'name',\n      'website',\n      'about',\n      'lud16',\n      'nip05',\n      'picture',\n      'banner',\n    ].forEach(key => {\n      if (data.get(key)) {\n        metadata[key] = data.get(key) as string;\n\n        if (key === 'displayName') {\n          metadata['display_name'] = data.get(key) as string;\n        }\n      }\n    });\n\n    const { success } = await sendProfile({ ...metadata }, account?.proxyThroughPrimal || false, account.relays, relaySettings);\n\n    if (success) {\n      await (new Promise((res) => setTimeout(() => res(true), 100)));\n\n      toast?.sendSuccess(intl.formatMessage(tToast.updateProfileSuccess));\n      pubkey && account.actions.updateAccountProfile(pubkey);\n      // pubkey && getUserProfiles([pubkey], `user_profile_${APP_ID}`);\n\n      let tags = followed.map(pk => ['p', pk]);\n      const date = Math.floor((new Date()).getTime() / 1000);\n\n      if (pubkey) {\n        // Follow himself\n        tags.push(['p', pubkey]);\n      }\n\n      const sendResult = await sendContacts(tags, date, '', account.proxyThroughPrimal, account.relays, relaySettings);\n\n      if (sendResult.success && sendResult.note) {\n        triggerImportEvents([sendResult.note], `import_contacts_${APP_ID}`, () => {\n          account.actions.updateContactsList()\n          // getProfileContactList(pubkey, `user_contacts_${APP_ID}`);\n        });\n      }\n\n      const relayResult = await sendRelays(account.relays, relaySettings, account.proxyThroughPrimal);\n\n      if (relayResult.success && relayResult.note) {\n        triggerImportEvents([relayResult.note], `import_relays_${APP_ID}`, () => {\n          // getRelays(pubkey, `user_relays_${APP_ID}`);\n          account.actions.updateRelays()\n        });\n      }\n\n      form.reset();\n\n      setShowCreatePin(true);\n\n      return false;\n    }\n\n    toast?.sendWarning(intl.formatMessage(tToast.updateProfileFail))\n\n    return false;\n  };\n\n  const [createdAccount, setCreatedAccount] = createStore<{ sec?: string, pubkey?: string, relays?: NostrRelays }>({});\n  const [currentStep, setCurrentStep] = createSignal<'name' | 'info' | 'follow'>('name');\n  const [showCreatePin, setShowCreatePin] = createSignal(false);\n\n  const toNext = () => {\n    switch(currentStep()) {\n      case 'name':\n        setCurrentStep('info');\n        break;\n      case 'info':\n        setCurrentStep('follow');\n        break;\n      default:\n        break;\n    }\n  };\n\n  const toPrevious = () => {\n    switch(currentStep()) {\n      case 'info':\n        setCurrentStep('name');\n        break;\n      case 'follow':\n        setCurrentStep('info');\n        break;\n      default:\n        break;\n    }\n  };\n\n  type SuggestedUserData = {\n    users: Record<string, PrimalUser>,\n    groupNames: string[],\n    groups: Record<string, string[]>,\n  }\n\n  const [suggestedData, setSuggestedData] = createStore<SuggestedUserData>({\n    users: {},\n    groupNames: [],\n    groups: {},\n  });\n\n  const getSugestedUsers = () => {\n    const subId = `get_suggested_users_${APP_ID}`;\n\n    const unsub = subsTo(subId, {\n      onEvent: (_, content) => {\n        if (content?.kind === Kind.SuggestedUsersByCategory) {\n          const list = JSON.parse(content.content);\n          let groups: Record<string, string[]> = {};\n\n          for(let i=0; i<list.length; i++) {\n            const item = list[i];\n\n            groups[item.group] = [ ...item.members.map((u: { pubkey: string }) => u.pubkey) ];\n          }\n\n          setSuggestedData('groups', () => ({...groups}));\n          setSuggestedData('groupNames', () => Object.keys(groups));\n        }\n\n        if (content?.kind === Kind.Metadata) {\n          const userData = content as NostrUserContent;\n          const user = convertToUser(userData, content.pubkey);\n\n          !followed.includes(user.pubkey) && setFollowed(followed.length, user.pubkey);\n          setSuggestedData('users', () => ({ [user.pubkey]: { ...user }}))\n        }\n      },\n      onEose: () => {\n        unsub();\n      },\n    });\n\n    getSuggestions(subId);\n  };\n\n  onMount(() => {\n    const { sec, pubkey } = generateKeys(true);\n\n    // @ts-ignore\n    const nsec = hexToNsec(sec);\n\n    account?.actions.setSec(nsec);\n    setTempNsec(nsec);\n\n    setCreatedAccount(() => ({ sec: nsec, pubkey }));\n    getSugestedUsers();\n  });\n\n\n  const onStoreSec = (sec: string | undefined) => {\n    storeSec(sec);\n    setTempNsec(undefined);\n    setCreatedAccount(reconcile({}));\n    onAbort();\n    navigate('/home');\n  }\n\n  const onAbort = () => {\n    setShowCreatePin(false);\n  }\n\n  const clearNewAccount = () => {\n    account?.actions.setSec(undefined);\n    setTempNsec(undefined);\n    setCreatedAccount(reconcile({}));\n    navigate('/home');\n  }\n\n  const [followed, setFollowed] = createStore<string[]>([])\n\n  const isFollowingAllInGroup = (group: string) => {\n    const pubkeys = suggestedData.groups[group] || [];\n    return !pubkeys.some((p) => !followed.includes(p));\n  };\n\n  const toggleFollowGroup = (group: string) => {\n    if (isFollowingAllInGroup(group)) {\n      onUnfollowGroup(group);\n    }\n    else {\n      onFollowGroup(group)\n    }\n  };\n\n  const onFollowGroup = (group: string) => {\n    const pubkeys = suggestedData.groups[group] || [];\n    let newFollows = pubkeys.filter(p => !followed.includes(p));\n    setFollowed((fs) => [ ...fs, ...newFollows ]);\n  };\n\n  const onUnfollowGroup = (group: string) => {\n    const pubkeys = suggestedData.groups[group] || [];\n\n    const newFollows = followed.filter(p => !pubkeys.includes(p));\n\n    setFollowed(() => [ ...newFollows ]);\n  };\n\n  const toggleFollowAccount = (pubkey: string) => {\n    if (followed.includes(pubkey)) {\n      onUnfollow(pubkey);\n    }\n    else {\n      onFollow(pubkey);\n    }\n  }\n\n  const onFollow = (pubkey: string) => {\n    setFollowed(followed.length, () => pubkey);\n  }\n\n  const onUnfollow = (pubkey: string) => {\n    const follows = followed.filter(f => f !== pubkey);\n    setFollowed(() => [...follows]);\n  }\n\n  const suggestedUser = (pubkey: string) => suggestedData.users[pubkey];\n\n  return (\n\n    <div class={styles.container}>\n      <PageTitle title={intl.formatMessage(tAccount.create.title)} />\n\n      <PageCaption title={intl.formatMessage(tAccount.create.title)} />\n\n      <div class={styles.creationContent}>\n        <div class={styles.stepIndicator}>\n          <div class={`${styles.indicate} ${styles.light}`}></div>\n          <div class={`${styles.indicate} ${currentStep() !== 'name' ? styles.light : styles.dark}`}></div>\n          <div class={`${styles.indicate} ${currentStep() === 'follow' ? styles.light : styles.dark}`}></div>\n        </div>\n        <div class={['name', 'info'].includes(currentStep()) ? '' : 'invisible'}>\n          <div id=\"central_header\" class={styles.fullHeader}>\n            <Switch>\n              <Match when={currentStep() === 'name'}>\n                <div class={styles.stepIntro}>\n                  {intl.formatMessage(tAccount.create.descriptions.step_one)}\n                </div>\n              </Match>\n              <Match when={currentStep() === 'info'}>\n                <div class={styles.stepIntro}>\n                  {intl.formatMessage(tAccount.create.descriptions.step_two)}\n                </div>\n              </Match>\n            </Switch>\n            <div id=\"profile_banner\" class={`${styles.banner} ${flagBannerForWarning()}`}>\n              <Show when={fileToUpload() !== undefined}>\n                <div class={styles.uploadingOverlay}></div>\n              </Show>\n              <Show\n                when={banner()}\n                fallback={\n                  <div class={styles.bannerPlaceholder}>\n                    <label for=\"upload-banner\">\n                      <div>{intl.formatMessage(tSettings.profile.uploadBanner)}</div>\n                    </label>\n                  </div>\n                }\n              >\n                <label for=\"upload-banner\">\n                  <img\n                    src={banner()}\n                    onerror={imgError}\n                  />\n                  <div>{intl.formatMessage(tSettings.profile.uploadBanner)}</div>\n                </label>\n              </Show>\n            </div>\n\n            <div class={styles.userImage}>\n              <div class={styles.avatar}>\n                <Show when={fileToUpload() !== undefined}>\n                  <div class={styles.uploadingOverlay}></div>\n                </Show>\n                <label for=\"upload-avatar\">\n                  <div class={styles.desktopAvatar}>\n                    <Avatar src={avatarPreview()} size=\"xxl\" />\n                    <div class={styles.uploadAction}>\n                      {intl.formatMessage(tSettings.profile.uploadAvatar)}\n                    </div>\n                  </div>\n\n                  <div class={styles.phoneAvatar}>\n                    <Avatar src={avatarPreview()} size=\"lg\" />\n                    <div class={styles.uploadAction}>\n                      {intl.formatMessage(tSettings.profile.uploadAvatar)}\n                    </div>\n                  </div>\n                </label>\n              </div>\n            </div>\n\n            <Show\n              when={currentStep() === 'name'}\n              fallback={\n                <div class={styles.blankActions}></div>\n              }\n            >\n              <div class={styles.uploadActions}>\n                <div class={styles.uploader}>\n                  <Uploader\n                    hideLabel={true}\n                    publicKey={account?.publicKey}\n                    openSockets={openSockets()}\n                    file={fileToUpload()}\n                    onFail={() => {\n                      toast?.sendWarning(intl.formatMessage(tUpload.fail, {\n                        file: fileToUpload()?.name,\n                      }));\n                      resetUpload();\n                    }}\n                    onRefuse={(reason: string) => {\n                      if (reason === 'file_too_big_100') {\n                        toast?.sendWarning(intl.formatMessage(tUpload.fileTooBigRegular));\n                      }\n                      if (reason === 'file_too_big_1024') {\n                        toast?.sendWarning(intl.formatMessage(tUpload.fileTooBigPremium));\n                      }\n                      resetUpload();\n                    }}\n                    onCancel={() => {\n                      resetUpload();\n                    }}\n                    onSuccsess={(url:string) => {\n                      if (uploadTarget() === 'picture') {\n                        setAvatarPreview(url);\n                      }\n\n                      if (uploadTarget() === 'banner') {\n                        setBannerPreview(url);\n                      }\n\n                      resetUpload();\n                    }}\n                  />\n                </div>\n                <div>\n                  <div class={styles.uploadButton}>\n                    <input\n                      id=\"upload-avatar\"\n                      type=\"file\"\n                      onChange={() => onUpload('picture', fileUploadAvatar)}\n                      ref={fileUploadAvatar}\n                      hidden={true}\n                      accept=\"image/*\"\n                    />\n                    <label for=\"upload-avatar\">\n                    {intl.formatMessage(tSettings.profile.uploadAvatar)}\n                    </label>\n                  </div>\n\n                  <div class={styles.uploadButton}>\n                    <input\n                      id=\"upload-banner\"\n                      type=\"file\"\n                      onchange={() => onUpload('banner', fileUploadBanner)}\n                      ref={fileUploadBanner}\n                      hidden={true}\n                      accept=\"image/*\"\n                    />\n                    <label for=\"upload-banner\">\n                    {intl.formatMessage(tSettings.profile.uploadBanner)}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </Show>\n          </div>\n        </div>\n\n        <form onSubmit={onSubmit}>\n          <div class={currentStep() === 'name' ? '' : 'invisible'}>\n            <div class={styles.inputLabel}>\n              <label for='name'>\n                {intl.formatMessage(tSettings.profile.name.label)}\n                <span class={styles.help}>\n                  {intl.formatMessage(tSettings.profile.name.help)}\n                </span>\n              </label>\n              <span class={styles.required}>\n                <span class={styles.star}>*</span>\n                {intl.formatMessage(tSettings.profile.required)}\n              </span>\n            </div>\n            <div class={styles.inputWithPrefix}>\n              <div class={styles.inputPrefix}>\n                @\n              </div>\n              <input\n                name='name'\n                type='text'\n                ref={nameInput}\n                class={styles.inputWithPrefix}\n                placeholder={intl.formatMessage(tSettings.profile.name.placeholder)}\n                onInput={onNameInput}\n              />\n            </div>\n            <Show when={accountName().length > 0 && !isNameValid()}>\n              <div class={styles.inputError}>\n                {intl.formatMessage(tSettings.profile.name.error)}\n              </div>\n            </Show>\n\n            <div class={styles.inputLabel}>\n              <label for='displayName'>\n                {intl.formatMessage(tSettings.profile.displayName.label)}\n                <span class={styles.help}>\n                  {intl.formatMessage(tSettings.profile.displayName.help)}\n                </span>\n              </label>\n            </div>\n            <input\n              name='displayName'\n              type='text'\n              placeholder={intl.formatMessage(tSettings.profile.displayName.placeholder)}\n            />\n\n            <div class={`${styles.moreInputs} ${isMoreVisible() ? styles.show : styles.hide}`}>\n              <div class={styles.inputLabel}>\n                <label for='picture'>{intl.formatMessage(tSettings.profile.picture.label)}</label>\n              </div>\n              <input\n                name='picture'\n                type='text'\n                placeholder={intl.formatMessage(tSettings.profile.picture.placeholder)}\n                value={avatarPreview() || ''}\n                onChange={(e: Event) => {\n                  const target = e.target as HTMLInputElement;\n                  target.value && setAvatarPreview(target.value);\n                }}\n              />\n\n              <div class={styles.inputLabel}>\n                <label for='banner'>{intl.formatMessage(tSettings.profile.banner.label)}</label>\n              </div>\n              <input\n                name='banner'\n                type='text'\n                placeholder={intl.formatMessage(tSettings.profile.banner.placeholder)}\n                value={bannerPreview() || ''}\n                onChange={(e: Event) => {\n                  const target = e.target as HTMLInputElement;\n                  target.value && setBannerPreview(target.value);\n                }}\n              />\n            </div>\n          </div>\n\n          <div class={currentStep() === 'info' ? '' : 'invisible'}>\n            <div class={styles.inputLabel}>\n              <label for='website'>{intl.formatMessage(tSettings.profile.website.label)}</label>\n            </div>\n            <input\n              name='website'\n              type='text'\n              placeholder={intl.formatMessage(tSettings.profile.website.placeholder)}\n            />\n\n            <div class={styles.inputLabel}>\n              <label for='about'>{intl.formatMessage(tSettings.profile.about.label)}</label>\n            </div>\n            <textarea\n              name='about'\n              placeholder={intl.formatMessage(tSettings.profile.about.placeholder)}\n              ref={textArea}\n              rows={1}\n              data-min-rows={1}\n              onInput={onExpandableTextareaInput}\n            />\n\n            <div class={styles.inputLabel}>\n              <label for='lud16'>{intl.formatMessage(tSettings.profile.lud16.label)}</label>\n            </div>\n            <input\n              name='lud16'\n              type='text'\n            />\n\n            <div class={styles.inputLabel}>\n              <label for='nip05'>{intl.formatMessage(tSettings.profile.nip05.label)}</label>\n            </div>\n            <input\n              name='nip05'\n              type='text'\n            />\n          </div>\n\n\n          <div class={currentStep() === 'follow' ? '' : 'invisible'}>\n            <div class={styles.stepIntro}>\n              {intl.formatMessage(tAccount.create.descriptions.step_three)}\n            </div>\n            <div class={styles.suggestions}>\n              <For each={suggestedData.groupNames}>\n                {(groupName) => (\n                  <>\n                    <div class={styles.recomendedFollowsCaption}>\n                      <div class={styles.caption}>\n                        {groupName}\n                      </div>\n                      <div class={styles.action}>\n                        <ButtonFlip\n                          when={isFollowingAllInGroup(groupName)}\n                          fallback={intl.formatMessage(tAccount.followAll)}\n                          onClick={() => toggleFollowGroup(groupName)}\n                        >\n                          {intl.formatMessage(tAccount.unfollowAll)}\n                        </ButtonFlip>\n                      </div>\n                    </div>\n\n                    <div class={styles.suggestedUsers}>\n                      <For each={suggestedData.groups[groupName]}>\n                        {pubkey => (\n                          <div class={styles.userToFollow}>\n                            <div class={styles.info}>\n                              <Avatar user={suggestedUser(pubkey)} />\n                              <div class={styles.nameAndNip05}>\n                                <div class={styles.name}>\n                                  {userName(suggestedUser(pubkey))}\n                                </div>\n                                <div class={styles.nip05}>\n                                  {nip05Verification(suggestedUser(pubkey))}\n                                </div>\n                              </div>\n                            </div>\n                            <div class={styles.action}>\n                              <ButtonFlip\n                                when={followed.includes(pubkey)}\n                                fallback={intl.formatMessage(tAccount.follow)}\n                                onClick={() => toggleFollowAccount(pubkey)}\n                              >\n                                {intl.formatMessage(tAccount.unfollow)}\n                              </ButtonFlip>\n                            </div>\n                          </div>\n                        )}\n                      </For>\n                    </div>\n                  </>\n                )}\n\n              </For>\n            </div>\n          </div>\n\n          <div class={styles.formSubmit}>\n            <Show when={currentStep() === 'info'}>\n              <ButtonSecondary\n                onClick={toPrevious}\n              >\n                {intl.formatMessage(tActions.previous)}\n              </ButtonSecondary>\n            </Show>\n            <Show\n              when={currentStep() === 'follow'}\n              fallback={\n                <ButtonPrimary\n                  disabled={currentStep() === 'name' && !isNameValid()}\n                  onClick={toNext}\n                >\n                  {intl.formatMessage(tActions.next)}\n                </ButtonPrimary>\n              }\n            >\n              <ButtonPrimary\n                type=\"submit\"\n                disabled={!isNameValid()}\n              >\n                {intl.formatMessage(tActions.finish)}\n              </ButtonPrimary>\n            </Show>\n            <Show when={currentStep() !== 'follow'}>\n              <ButtonSecondary\n                onClick={clearNewAccount}\n              >\n                {intl.formatMessage(tActions.cancel)}\n              </ButtonSecondary>\n            </Show>\n          </div>\n        </form>\n\n      </div>\n\n\n      <CreatePinModal\n        open={showCreatePin()}\n        onAbort={() => {\n          onStoreSec(createdAccount.sec);\n        }}\n        valueToEncrypt={createdAccount.sec}\n        onPinApplied={onStoreSec}\n      />\n    </div>\n  );\n}\n\nexport default CreateAccount;\n"],"names":["CreateAccount","intl","useIntl","useProfileContext","media","useMediaContext","account","useAccountContext","useSearchContext","toast","useToastContext","useSettingsContext","navigate","useNavigate","textArea","fileUploadAvatar","fileUploadBanner","nameInput","isBannerCached","setIsBannerCached","createSignal","isMoreVisible","setIsMoreVisible","avatarPreview","setAvatarPreview","bannerPreview","setBannerPreview","accountName","setAccountName","isNameValid","setIsNameValid","fileToUpload","setFileToUpload","uploadTarget","setUploadTarget","openSockets","setOpenSockets","createEffect","currentStep","onCleanup","flagBannerForWarning","dev","localStorage","getItem","styles","cacheFlag","imgError","event","banner","document","getElementById","innerHTML","bannerPlaceholder","src","url","actions","getMediaUrl","getScrollHeight","elm","savedValue","value","_baseScrollHeight","scrollHeight","onExpandableTextareaInput","maxHeight","documentElement","clientHeight","window","innerHeight","minRows","parseInt","getAttribute","rows","Math","ceil","onNameInput","usernameRegex","test","resetUpload","undefined","onUpload","target","fileUpload","file","files","onSubmit","__name","e","preventDefault","pubkey","publicKey","form","data","FormData","name","get","toString","sendWarning","formatMessage","tSettings","profile","formError","relaySettings","defaultRelays","reduce","acc","r","write","read","metadata","forEach","key","success","sendProfile","proxyThroughPrimal","relays","Promise","res","setTimeout","sendSuccess","tToast","updateProfileSuccess","updateAccountProfile","tags","followed","map","pk","date","floor","Date","getTime","push","sendResult","sendContacts","note","triggerImportEvents","APP_ID","updateContactsList","relayResult","sendRelays","updateRelays","reset","setShowCreatePin","updateProfileFail","createdAccount","setCreatedAccount","createStore","setCurrentStep","showCreatePin","toNext","toPrevious","suggestedData","setSuggestedData","users","groupNames","groups","getSugestedUsers","subId","unsub","subsTo","onEvent","_","content","kind","Kind","SuggestedUsersByCategory","list","JSON","parse","i","length","item","group","members","u","Object","keys","Metadata","user","convertToUser","includes","setFollowed","onEose","getSuggestions","onMount","sec","generateKeys","nsec","hexToNsec","setSec","setTempNsec","onStoreSec","storeSec","reconcile","onAbort","clearNewAccount","isFollowingAllInGroup","some","p","toggleFollowGroup","onUnfollowGroup","onFollowGroup","newFollows","filter","fs","pubkeys","toggleFollowAccount","onUnfollow","onFollow","follows","f","suggestedUser","_el$","_tmpl$4","_el$2","firstChild","_el$3","_el$4","_el$5","nextSibling","_el$6","_el$7","_el$8","_el$11","_el$16","_el$17","_el$19","_el$20","_el$21","_el$22","_el$23","_el$33","_el$34","_el$35","_el$36","_el$37","_el$38","_el$39","_el$40","_el$41","_el$42","_el$44","_el$45","_el$46","_el$47","_el$48","_el$49","_el$50","_el$51","_el$52","_el$53","_el$54","_el$55","_el$56","_el$57","_el$58","_el$59","_el$60","_el$61","_el$62","_el$63","_el$64","_el$65","_el$66","_el$67","_el$68","_el$69","_el$70","_$insert","_$createComponent","PageTitle","title","tAccount","create","PageCaption","Switch","children","Match","when","_el$9","_tmpl$","descriptions","step_one","_$effect","_$className","stepIntro","_el$10","step_two","Show","_el$12","uploadingOverlay","fallback","_el$71","_tmpl$5","_el$72","_el$73","uploadBanner","_el$13","_tmpl$2","_el$14","_el$15","addEventListener","_$setAttribute","_el$18","Avatar","size","uploadAvatar","_el$74","blankActions","_el$24","_tmpl$3","_el$25","_el$26","_el$27","_el$28","_el$29","_el$30","_el$31","_el$32","Uploader","hideLabel","onFail","tUpload","fail","onRefuse","reason","fileTooBigRegular","fileTooBigPremium","onCancel","onSuccsess","_ref$","_$use","hidden","_ref$2","_p$","_v$","uploadActions","_v$2","uploader","_v$3","uploadButton","_v$4","label","help","required","$$input","_ref$3","_$memo","_el$43","error","inputError","displayName","picture","website","about","_ref$4","lud16","nip05","step_three","For","each","groupName","_el$75","_tmpl$6","_el$76","_el$77","ButtonFlip","followAll","onClick","unfollowAll","_v$48","recomendedFollowsCaption","_v$49","caption","_v$50","action","_el$78","_el$79","_tmpl$7","_el$80","_el$81","_el$82","_el$83","_el$84","userName","nip05Verification","follow","unfollow","_v$51","userToFollow","_v$52","info","_v$53","nameAndNip05","_v$54","_v$55","_v$56","suggestedUsers","ButtonSecondary","tActions","previous","ButtonPrimary","disabled","next","type","finish","cancel","CreatePinModal","open","valueToEncrypt","onPinApplied","_v$5","container","_v$6","creationContent","_v$7","stepIndicator","_v$8","indicate","light","_v$9","dark","_v$10","_v$11","_v$12","fullHeader","_v$13","_v$14","userImage","_v$15","avatar","_v$16","desktopAvatar","_v$17","uploadAction","_v$18","phoneAvatar","_v$19","_v$20","_v$21","inputLabel","_v$22","_v$23","_v$24","star","_v$25","inputWithPrefix","_v$26","inputPrefix","_v$27","_v$28","placeholder","_v$29","_v$30","_v$31","_v$32","moreInputs","show","hide","_v$33","_v$34","_v$35","_v$36","_v$37","_v$38","_v$39","_v$40","_v$41","_v$42","_v$43","_v$44","_v$45","_v$46","suggestions","_v$47","formSubmit","_$delegateEvents"],"mappings":"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"}