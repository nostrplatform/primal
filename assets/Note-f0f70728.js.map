{"version":3,"file":"Note-f0f70728.js","sources":["../../src/components/Note/NoteAuthorInfo.tsx","../../src/components/Note/NoteRepostHeader.tsx","../../src/components/Note/NoteReplyToHeader.tsx","../../src/components/Note/NoteHeader/NoteHeader.tsx","../../src/components/Note/NoteContextTrigger.tsx","../../src/components/Note/NoteTopZaps.tsx","../../src/components/Note/NoteTopZapsCompact.tsx","../../src/components/Note/Note.tsx"],"sourcesContent":["import { Component, Show } from 'solid-js';\nimport { PrimalUser } from '../../types/primal';\n\nimport styles from './Note.module.scss';\nimport { useThreadContext } from '../../contexts/ThreadContext';\nimport { useIntl } from '@cookbook/solid-intl';\nimport { authorName, nip05Verification } from '../../stores/profile';\nimport { hookForDev } from '../../lib/devTools';\nimport { date } from '../../lib/dates';\nimport VerificationCheck from '../VerificationCheck/VerificationCheck';\n\nconst NoteAuthorInfo: Component<{\n  author: PrimalUser,\n  time: number,\n  id?: string,\n}> = (props) => {\n\n  const threadContext = useThreadContext();\n  const intl = useIntl();\n\n  return (\n    <div class={styles.authorInfo}>\n\n      <span class={styles.userName}>\n        {authorName(props.author)}\n      </span>\n\n      <VerificationCheck user={props.author} fallback={\n        <div class={styles.verificationFailed}></div>\n      } />\n\n      <Show\n        when={props.author.nip05}\n      >\n        <span\n          class={styles.verification}\n          title={props.author.nip05}\n        >\n          {nip05Verification(props.author)}\n        </span>\n      </Show>\n\n      <span\n        class={styles.time}\n        title={date(props.time).date.toLocaleString()}\n      >\n        <div class={styles.ellipsisIcon}></div>\n        {date(props.time).label}\n      </span>\n    </div>\n  )\n}\n\nexport default hookForDev(NoteAuthorInfo);\n","import { A } from '@solidjs/router';\nimport { Component, Show } from 'solid-js';\nimport { PrimalNote } from '../../types/primal';\n\nimport styles from './Note.module.scss';\nimport { useIntl } from '@cookbook/solid-intl';\nimport { authorName } from '../../stores/profile';\nimport { note as t } from '../../translations';\nimport { hookForDev } from '../../lib/devTools';\nimport { useAppContext } from '../../contexts/AppContext';\n\n\nconst NoteRepostHeader: Component<{\n  note?: PrimalNote,\n  id?: string,\n}> = (props) => {\n  const intl = useIntl();\n  const app = useAppContext();\n\n  const repost = () => props.note?.repost;\n\n  const reposterName = () =>  authorName(repost()?.user);\n\n  const others = () => {\n    const reposts = props.note?.post.reposts || 0;\n\n    return reposts > 0 ? reposts - 1 : 0;\n  }\n\n  return (\n    <div class={styles.repostedBy}>\n      <div class={styles.repostIcon}></div>\n      <span>\n        <A href={app?.actions.profileLink(repost()?.user.npub) || ''} >\n          {reposterName()}\n          {intl.formatMessage(\n            t.repostedOthers,\n            {\n              number: others(),\n            },\n          )}\n        </A>\n        <span>\n          {intl.formatMessage(t.reposted)}\n        </span>\n      </span>\n    </div>\n  )\n}\n\nexport default hookForDev(NoteRepostHeader);\n","import { Component, createMemo, Show } from 'solid-js';\nimport { PrimalNote } from '../../types/primal';\n\n\nimport styles from './Note.module.scss';\nimport { useIntl } from '@cookbook/solid-intl';\nimport { note as t } from '../../translations';\nimport { hookForDev } from '../../lib/devTools';\nimport MentionedUserLink from './MentionedUserLink/MentionedUserLink';\n\nconst NoteReplyHeader: Component<{\n  note: PrimalNote,\n  id?: string,\n}> = (props) => {\n  const intl = useIntl();\n\n  const rootAuthor = createMemo(() => {\n    const replyTo = props.note.replyTo;\n    const mentions = props.note.mentionedNotes;\n\n    if (replyTo && mentions && mentions[replyTo]) {\n      return mentions[replyTo].user;\n    }\n  });\n\n  return (\n    <Show when={props.note.replyTo}>\n      <span class={styles.replyingTo}>\n        <span class={styles.label}>\n          {intl.formatMessage(t.reply)}\n        </span>&nbsp;\n        <MentionedUserLink user={rootAuthor()} />\n      </span>\n    </Show>\n  )\n}\n\nexport default hookForDev(NoteReplyHeader);\n","import { Component, createEffect, createSignal, Show } from 'solid-js';\nimport { MenuItem, NostrRelaySignedEvent, PrimalNote } from '../../../types/primal';\n\nimport styles from './NoteHeader.module.scss';\nimport { date, longDate, shortDate } from '../../../lib/dates';\nimport { nip05Verification, truncateNpub, userName } from '../../../stores/profile';\nimport { useIntl } from '@cookbook/solid-intl';\nimport { useToastContext } from '../../Toaster/Toaster';\nimport VerificationCheck from '../../VerificationCheck/VerificationCheck';\nimport Avatar from '../../Avatar/Avatar';\nimport { A } from '@solidjs/router';\nimport { toast as tToast, actions as tActions } from '../../../translations';\nimport PrimalMenu from '../../PrimalMenu/PrimalMenu';\nimport CustomZap from '../../CustomZap/CustomZap';\nimport { broadcastEvent } from '../../../lib/notes';\nimport { useAccountContext } from '../../../contexts/AccountContext';\nimport { isAccountVerified, reportUser } from '../../../lib/profile';\nimport { APP_ID } from '../../../App';\nimport ConfirmModal from '../../ConfirmModal/ConfirmModal';\nimport { hexToNpub } from '../../../lib/keys';\nimport { hookForDev } from '../../../lib/devTools';\nimport { useAppContext } from '../../../contexts/AppContext';\n\nconst NoteHeader: Component<{\n  note: PrimalNote,\n  openCustomZap?: () => void,\n  id?: string,\n  primary?: boolean,\n}> = (props) => {\n\n  const intl = useIntl();\n  const toaster = useToastContext();\n  const account = useAccountContext();\n  const app = useAppContext();\n\n  const [showContext, setContext] = createSignal(false);\n  const [confirmReportUser, setConfirmReportUser] = createSignal(false);\n  const [confirmMuteUser, setConfirmMuteUser] = createSignal(false);\n\n  const authorName = () => {\n    if (!props.note.user) {\n      return hexToNpub(props.note.post.pubkey);\n    }\n    return props.note.user?.displayName ||\n      props.note.user?.name ||\n      truncateNpub(props.note.user.npub);\n  };\n\n  const openContextMenu = (e: MouseEvent) => {\n    e.preventDefault();\n    setContext(true);\n  };\n\n  const doMuteUser = () => {\n    account?.actions.addToMuteList(props.note.post.pubkey);\n  };\n\n  const doUnmuteUser = () => {\n    account?.actions.removeFromMuteList(props.note.post.pubkey);\n  };\n\n  const doReportUser = () => {\n    reportUser(props.note.user.pubkey, `report_user_${APP_ID}`, props.note.user);\n    setContext(false);\n    toaster?.sendSuccess(intl.formatMessage(tToast.noteAuthorReported, { name: userName(props.note.user)}));\n  };\n\n  const copyNoteLink = () => {\n    navigator.clipboard.writeText(`${window.location.origin}/e/${props.note.post.noteId}`);\n    setContext(false);\n    toaster?.sendSuccess(intl.formatMessage(tToast.notePrimalLinkCoppied));\n  };\n\n  const copyNoteText = () => {\n    navigator.clipboard.writeText(`${props.note.post.content}`);\n    setContext(false);\n    toaster?.sendSuccess(intl.formatMessage(tToast.notePrimalTextCoppied));\n  };\n\n  const copyNoteId = () => {\n    navigator.clipboard.writeText(`${props.note.post.noteId}`);\n    setContext(false);\n    toaster?.sendSuccess(intl.formatMessage(tToast.noteIdCoppied));\n  };\n\n  const copyRawData = () => {\n    navigator.clipboard.writeText(`${JSON.stringify(props.note.msg)}`);\n    setContext(false);\n    toaster?.sendSuccess(intl.formatMessage(tToast.noteRawDataCoppied));\n  };\n\n  const copyUserNpub = () => {\n    navigator.clipboard.writeText(`${props.note.user.npub}`);\n    setContext(false);\n    toaster?.sendSuccess(intl.formatMessage(tToast.noteAuthorNpubCoppied));\n  };\n\n  const broadcastNote = async () => {\n    if (!account) {\n      return;\n    }\n\n    const { success } = await broadcastEvent(props.note.msg as NostrRelaySignedEvent, account.proxyThroughPrimal, account.activeRelays, account.relaySettings);\n    setContext(false);\n\n    if (success) {\n      toaster?.sendSuccess(intl.formatMessage(tToast.noteBroadcastSuccess));\n      return;\n    }\n    toaster?.sendWarning(intl.formatMessage(tToast.noteBroadcastFail));\n  };\n\n  const onClickOutside = (e: MouseEvent) => {\n    if (\n      !document?.getElementById(`note_context_${props.note.post.id}`)?.contains(e.target as Node)\n    ) {\n      setContext(false);\n    }\n  }\n\n  createEffect(() => {\n    if (showContext()) {\n      document.addEventListener('click', onClickOutside);\n    }\n    else {\n      document.removeEventListener('click', onClickOutside);\n    }\n  });\n\n  const isVerifiedByPrimal = () => {\n    return !!props.note.user.nip05 &&\n      props.note.user.nip05.endsWith('primal.net');\n  }\n\n  const noteContextForEveryone: MenuItem[] = [\n    {\n      label: intl.formatMessage(tActions.noteContext.zap),\n      action: () => {\n        props.openCustomZap && props.openCustomZap();\n        setContext(false);\n      },\n      icon: 'feed_zap',\n    },\n    {\n      label: intl.formatMessage(tActions.noteContext.copyLink),\n      action: copyNoteLink,\n      icon: 'copy_note_link',\n    },\n    {\n      label: intl.formatMessage(tActions.noteContext.copyText),\n      action: copyNoteText,\n      icon: 'copy_note_text',\n    },\n    {\n      label: intl.formatMessage(tActions.noteContext.copyId),\n      action: copyNoteId,\n      icon: 'copy_note_id',\n    },\n    {\n      label: intl.formatMessage(tActions.noteContext.copyRaw),\n      action: copyRawData,\n      icon: 'copy_raw_data',\n    },\n    {\n      label: intl.formatMessage(tActions.noteContext.breadcast),\n      action: broadcastNote,\n      icon: 'broadcast',\n    },\n    {\n      label: intl.formatMessage(tActions.noteContext.copyPubkey),\n      action: copyUserNpub,\n      icon: 'copy_pubkey',\n    },\n  ];\n\n  const noteContextForOtherPeople: MenuItem[] = [\n    {\n      label: intl.formatMessage(tActions.noteContext.muteAuthor),\n      action: () => {\n        setConfirmMuteUser(true);\n        setContext(false);\n      },\n      icon: 'mute_user',\n      warning: true,\n    },\n    {\n      label: intl.formatMessage(tActions.noteContext.reportAuthor),\n      action: () => {\n        setConfirmReportUser(true);\n        setContext(false);\n      },\n      icon: 'report',\n      warning: true,\n    },\n  ];\n\n  const noteContext = account?.publicKey !== props.note.post.pubkey ?\n      [ ...noteContextForEveryone, ...noteContextForOtherPeople] :\n      noteContextForEveryone;\n\n  return (\n    <div id={props.id} class={styles.header}>\n      <div class={styles.headerInfo}>\n        <div\n            class={styles.avatar}\n            title={props.note?.user?.npub}\n          >\n            <A\n              href={app?.actions.profileLink(props.note.user.npub) || ''}\n            >\n              <Avatar\n                user={props.note?.user}\n                size=\"vs\"\n                highlightBorder={isVerifiedByPrimal()}\n              />\n            </A>\n          </div>\n        <div class={styles.postInfo}>\n          <div class={styles.userInfo}>\n\n            <span class={`${styles.userName} ${props.primary ? styles.primary : ''}`}>\n              {authorName()}\n            </span>\n\n            <VerificationCheck\n              user={props.note.user}\n            />\n          </div>\n          <Show\n            when={props.note.user?.nip05}\n          >\n            <span\n              class={styles.verification}\n              title={props.note.user?.nip05}\n            >\n              {nip05Verification(props.note.user)}\n            </span>\n          </Show>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default hookForDev(NoteHeader);\n","import { Component } from 'solid-js';\nimport { hookForDev } from '../../lib/devTools';\n\nimport styles from './Note.module.scss';\n\n\nconst NoteContextTrigger: Component<{\n  ref: HTMLDivElement | undefined,\n  id?: string,\n  onClick?: () => void,\n}> = (props) => {\n  return (\n    <div ref={props.ref} class={styles.context}>\n      <button\n        class={styles.contextButton}\n        onClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          props.onClick && props.onClick();\n        }}\n      >\n        <div class={styles.contextIcon} ></div>\n      </button>\n    </div>\n  )\n}\n\nexport default hookForDev(NoteContextTrigger);\n","import { Component, createMemo, createSignal, For, Show } from \"solid-js\";\nimport { hookForDev } from \"../../lib/devTools\";\nimport { useThreadContext } from \"../../contexts/ThreadContext\";\nimport Avatar from \"../Avatar/Avatar\";\nimport { TransitionGroup } from 'solid-transition-group';\nimport styles from  \"./Note.module.scss\";\nimport { PrimalUser, TopZap } from \"../../types/primal\";\n\nconst NoteTopZaps: Component<{\n  topZaps: TopZap[],\n  zapCount: number,\n  action: () => void,\n  id?: string,\n  users?: PrimalUser[],\n  doZap?: () => void,\n}> = (props) => {\n\n  const threadContext = useThreadContext();\n\n  const [hasMoreZaps, setHasMoreZaps] = createSignal(false);\n\n  const topZaps = () => {\n    const zaps = [...(props.topZaps || [])];\n\n    let limit = 5;\n    // let digits = 0;\n\n    // for (let i=0; i< zaps.length; i++) {\n    //   const amount = zaps[i].amount || 0;\n    //   const length = Math.log(amount) * Math.LOG10E + 1 | 0;\n\n    //   digits += length;\n\n    //   if (digits > 25 || limit > 6) break;\n\n    //   limit++;\n    // }\n\n    const highlights = zaps.slice(0, limit);\n\n    // setHasMoreZaps(() => highlights.length < props.zapCount - 1);\n\n    return highlights;\n  }\n\n  const zapSender = (zap: TopZap) => {\n    return (props.users || threadContext?.users || []).find(u => u.pubkey === zap.pubkey);\n  };\n\n  return (\n    <Show\n      when={!threadContext?.isFetchingTopZaps}\n      fallback={\n        <div class={styles.topZapsLoading}>\n          <div class={styles.firstZap}></div>\n          <div class={styles.topZaps}>\n            <div class={styles.zapList}>\n              <div class={styles.topZap}></div>\n              <div class={styles.topZap}></div>\n              <div class={styles.topZap}></div>\n              <div class={styles.topZap}></div>\n              <div class={styles.topZap}></div>\n            </div>\n          </div>\n        </div>\n      }\n    >\n      <div class={`${styles.zapHighlights}`}>\n        <TransitionGroup\n          name=\"top-zaps\"\n          enterClass={styles.topZapEnterTransition}\n          exitClass={styles.topZapExitTransition}\n        >\n          <For each={topZaps()}>\n            {(zap, index) => (\n              <>\n                <button\n                  class={`${styles.topZap}`}\n                  onClick={() => props.action()}\n                  style={`z-index: ${12 - index()};`}\n                >\n                  <Avatar user={zapSender(zap)} size=\"xss\" />\n                  <Show when={index() === 0}>\n                    <div class={styles.topZapIcon}></div>\n                  </Show>\n                  <div class={styles.amount}>\n                    {zap.amount.toLocaleString()}\n                  </div>\n                  <Show when={index() === 0}>\n                    <div class={styles.description}>\n                      {zap.message}\n                    </div>\n                  </Show>\n                </button>\n\n                <Show when={index() === 0 && props.topZaps.length > 3}>\n                  <div class={styles.break}></div>\n                </Show>\n              </>\n            )}\n          </For>\n\n          <Show when={hasMoreZaps()}>\n            <button\n              class={styles.moreZaps}\n              onClick={() => props.action()}\n            >\n              <div class={styles.contextIcon}></div>\n            </button>\n          </Show>\n\n          <Show when={props.doZap}>\n            <button\n              class={styles.doZaps}\n              onClick={props.doZap}\n            >\n              <div class={styles.zapIcon}></div>\n              <div class={styles.zapText}>Zap</div>\n            </button>\n          </Show>\n        </TransitionGroup>\n      </div>\n    </Show>\n  );\n}\n\nexport default hookForDev(NoteTopZaps);\n","import { Component, createEffect, createMemo, createSignal, For, Match, onMount, Show, Switch } from \"solid-js\";\nimport { hookForDev } from \"../../lib/devTools\";\nimport { useThreadContext } from \"../../contexts/ThreadContext\";\nimport Avatar from \"../Avatar/Avatar\";\nimport { TransitionGroup } from 'solid-transition-group';\nimport styles from  \"./Note.module.scss\";\nimport { PrimalNote, PrimalUser, TopZap } from \"../../types/primal\";\nimport { useAccountContext } from \"../../contexts/AccountContext\";\n\nconst NoteTopZapsCompact: Component<{\n  note: PrimalNote,\n  action: () => void,\n  topZaps: TopZap[],\n  topZapLimit: number,\n  id?: string,\n  hideMessage?: boolean,\n}> = (props) => {\n  const account = useAccountContext();\n\n  const [dontAnimate, setDontAnimate] = createSignal(true);\n\n  const topZaps = () => {\n    const zaps = props.topZaps ? [...props.topZaps] : [ ...props.note.topZaps ];\n\n    const highlights = zaps.slice(0, 4);\n\n    return highlights;\n  }\n\n  const zapSender = (zap: TopZap) => {\n    if (zap.pubkey === account?.publicKey) return account.activeUser;\n\n    return (props.note.mentionedUsers || {})[zap.pubkey];\n  };\n\n  onMount(() => {\n    setTimeout(() => {\n      setDontAnimate(() => false);\n    }, 600)\n  });\n\n  return (\n    <Show when={topZaps().length > 0}>\n      <div class={`${styles.zapHighlightsCompact}`}>\n        <TransitionGroup\n          name=\"top-zaps-feed\"\n          enterClass={styles.topZapEnterTransition}\n          exitClass={styles.topZapExitTransition}\n        >\n          <For each={topZaps()}>\n            {(zap, index) => (\n              <div\n                class={`${styles.zapWrap} ${dontAnimate() ? styles.noAnimation : '' }`}\n                style={`z-index: ${12 - index()};`}\n                data-index={index()}\n              >\n                <button\n                  class={`${styles.topZap} ${index() > 0 ? styles.compact : ''}`}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    props.action();\n                  }}\n                  style={`z-index: ${12 - index()};`}\n                >\n                  <Avatar user={zapSender(zap)} size=\"micro\" />\n                  <Show when={!props.hideMessage && index() === 0}>\n                    <div class={styles.topZapIcon}></div>\n                    <div class={styles.amount}>\n                      {zap.amount.toLocaleString()}\n                    </div>\n                    <div class={styles.description}>\n                      {zap.message}\n                    </div>\n                  </Show>\n                </button>\n              </div>\n            )}\n          </For>\n        </TransitionGroup>\n      </div>\n    </Show>\n  );\n}\n\nexport default hookForDev(NoteTopZapsCompact);\n","import { A } from '@solidjs/router';\nimport { batch, Component, createEffect, Match, onMount, Show, Switch } from 'solid-js';\nimport { PrimalNote, TopZap, ZapOption } from '../../types/primal';\nimport ParsedNote from '../ParsedNote/ParsedNote';\nimport NoteFooter from './NoteFooter/NoteFooter';\n\nimport styles from './Note.module.scss';\nimport { useThreadContext } from '../../contexts/ThreadContext';\nimport { useIntl } from '@cookbook/solid-intl';\nimport { hookForDev } from '../../lib/devTools';\nimport Avatar from '../Avatar/Avatar';\nimport NoteAuthorInfo from './NoteAuthorInfo';\nimport NoteRepostHeader from './NoteRepostHeader';\nimport NoteReplyToHeader from './NoteReplyToHeader';\nimport NoteHeader from './NoteHeader/NoteHeader';\nimport { createStore } from 'solid-js/store';\nimport { CustomZapInfo, useAppContext } from '../../contexts/AppContext';\nimport NoteContextTrigger from './NoteContextTrigger';\nimport { date, veryLongDate } from '../../lib/dates';\nimport { useAccountContext } from '../../contexts/AccountContext';\nimport { uuidv4 } from '../../utils';\nimport NoteTopZaps from './NoteTopZaps';\nimport NoteTopZapsCompact from './NoteTopZapsCompact';\nimport { addrRegex, addrRegexG, imageRegex, imageRegexEnd, imageRegexG, linebreakRegex, noteRegex, noteRegexLocal, profileRegexG, urlRegex, urlRegexG } from '../../constants';\n\nexport type NoteReactionsState = {\n  likes: number,\n  liked: boolean,\n  reposts: number,\n  reposted: boolean,\n  replies: number,\n  replied: boolean,\n  zapCount: number,\n  satsZapped: number,\n  zappedAmount: number,\n  zapped: boolean,\n  zappedNow: boolean,\n  isZapping: boolean,\n  showZapAnim: boolean,\n  hideZapIcon: boolean,\n  moreZapsAvailable: boolean,\n  isRepostMenuVisible: boolean,\n  topZaps: TopZap[],\n  topZapsFeed: TopZap[],\n  quoteCount: number,\n};\n\nconst Note: Component<{\n  note: PrimalNote,\n  id?: string,\n  parent?: boolean,\n  shorten?: boolean,\n  noteType?: 'feed' | 'primary' | 'notification' | 'reaction' | 'thread'\n  onClick?: () => void,\n  quoteCount?: number,\n  size?: 'xwide' | 'wide' | 'normal' | 'short',\n}> = (props) => {\n\n  const threadContext = useThreadContext();\n  const app = useAppContext();\n  const account = useAccountContext();\n  const intl = useIntl();\n\n  createEffect(() => {\n    if (props.quoteCount) {\n      updateReactionsState('quoteCount', () => props.quoteCount || 0);\n    }\n  })\n\n  const noteType = () => props.noteType || 'feed';\n\n  const repost = () => props.note.repost;\n\n  const navToThread = (note: PrimalNote) => {\n    props.onClick && props.onClick();\n    threadContext?.actions.setPrimaryNote(note);\n  };\n\n  const [reactionsState, updateReactionsState] = createStore<NoteReactionsState>({\n    likes: props.note.post.likes,\n    liked: props.note.post.noteActions.liked,\n    reposts: props.note.post.reposts,\n    reposted: props.note.post.noteActions.reposted,\n    replies: props.note.post.replies,\n    replied: props.note.post.noteActions.replied,\n    zapCount: props.note.post.zaps,\n    satsZapped: props.note.post.satszapped,\n    zapped: props.note.post.noteActions.zapped,\n    zappedAmount: 0,\n    zappedNow: false,\n    isZapping: false,\n    showZapAnim: false,\n    hideZapIcon: false,\n    moreZapsAvailable: false,\n    isRepostMenuVisible: false,\n    topZaps: [],\n    topZapsFeed: [],\n    quoteCount: props.quoteCount || 0,\n  });\n\n  let noteContextMenu: HTMLDivElement | undefined;\n\n  let latestTopZap: string = '';\n  let latestTopZapFeed: string = '';\n\n  const onConfirmZap = (zapOption: ZapOption) => {\n    app?.actions.closeCustomZapModal();\n    batch(() => {\n      updateReactionsState('zappedAmount', () => zapOption.amount || 0);\n      updateReactionsState('satsZapped', (z) => z + (zapOption.amount || 0));\n      updateReactionsState('zapped', () => true);\n      updateReactionsState('showZapAnim', () => true)\n    });\n\n    addTopZap(zapOption);\n    addTopZapFeed(zapOption)\n  };\n\n  onMount(() => {\n    updateReactionsState('topZapsFeed', () => [ ...(props.note.topZaps || [])]);\n  })\n\n  const addTopZapFeed = (zapOption: ZapOption) => {\n    const pubkey = account?.publicKey;\n\n    if (!pubkey) return;\n\n    const oldZaps = [ ...reactionsState.topZapsFeed ];\n\n    latestTopZapFeed = uuidv4() as string;\n\n    const newZap = {\n      amount: zapOption.amount || 0,\n      message: zapOption.message || '',\n      pubkey,\n      eventId: props.note.post.id,\n      id: latestTopZapFeed,\n    };\n\n    const zaps = [ ...oldZaps, { ...newZap }].sort((a, b) => b.amount - a.amount).slice(0, 4);\n    updateReactionsState('topZapsFeed', () => [...zaps]);\n  }\n\n  const removeTopZapFeed = (zapOption: ZapOption) => {\n    const zaps = reactionsState.topZapsFeed.filter(z => z.id !== latestTopZapFeed);\n    updateReactionsState('topZapsFeed', () => [...zaps]);\n  };\n\n  const addTopZap = (zapOption: ZapOption) => {\n    const pubkey = account?.publicKey;\n\n    if (!pubkey) return;\n\n    const oldZaps = [ ...reactionsState.topZaps ];\n\n    latestTopZap = uuidv4() as string;\n\n    const newZap = {\n      amount: zapOption.amount || 0,\n      message: zapOption.message || '',\n      pubkey,\n      eventId: props.note.post.id,\n      id: latestTopZap,\n    };\n\n    if (!threadContext?.users.find((u) => u.pubkey === pubkey)) {\n      threadContext?.actions.fetchUsers([pubkey])\n    }\n\n    const zaps = [ ...oldZaps, { ...newZap }].sort((a, b) => b.amount - a.amount);\n    updateReactionsState('topZaps', () => [...zaps]);\n  };\n\n  const removeTopZap = (zapOption: ZapOption) => {\n    const zaps = reactionsState.topZaps.filter(z => z.id !== latestTopZap);\n    updateReactionsState('topZaps', () => [...zaps]);\n  };\n\n  const onSuccessZap = (zapOption: ZapOption) => {\n    app?.actions.closeCustomZapModal();\n    app?.actions.resetCustomZap();\n\n    const pubkey = account?.publicKey;\n\n    if (!pubkey) return;\n\n    batch(() => {\n      updateReactionsState('zapCount', (z) => z + 1);\n      updateReactionsState('isZapping', () => false);\n      updateReactionsState('showZapAnim', () => false);\n      updateReactionsState('hideZapIcon', () => false);\n      updateReactionsState('zapped', () => true);\n    });\n  };\n\n  const onFailZap = (zapOption: ZapOption) => {\n    app?.actions.closeCustomZapModal();\n    app?.actions.resetCustomZap();\n    batch(() => {\n      updateReactionsState('zappedAmount', () => -(zapOption.amount || 0));\n      updateReactionsState('satsZapped', (z) => z - (zapOption.amount || 0));\n      updateReactionsState('isZapping', () => false);\n      updateReactionsState('showZapAnim', () => false);\n      updateReactionsState('hideZapIcon', () => false);\n      updateReactionsState('zapped', () => props.note.post.noteActions.zapped);\n    });\n\n    removeTopZap(zapOption);\n    removeTopZapFeed(zapOption);\n  };\n\n  const onCancelZap = (zapOption: ZapOption) => {\n    app?.actions.closeCustomZapModal();\n    app?.actions.resetCustomZap();\n    batch(() => {\n      updateReactionsState('zappedAmount', () => -(zapOption.amount || 0));\n      updateReactionsState('satsZapped', (z) => z - (zapOption.amount || 0));\n      updateReactionsState('isZapping', () => false);\n      updateReactionsState('showZapAnim', () => false);\n      updateReactionsState('hideZapIcon', () => false);\n      updateReactionsState('zapped', () => props.note.post.noteActions.zapped);\n    });\n\n    removeTopZap(zapOption);\n    removeTopZapFeed(zapOption);\n  };\n\n  const customZapInfo: () => CustomZapInfo = () => ({\n    note: props.note,\n    onConfirm: onConfirmZap,\n    onSuccess: onSuccessZap,\n    onFail: onFailZap,\n    onCancel: onCancelZap,\n  });\n\n  const openReactionModal = (openOn = 'default') =>  {\n    app?.actions.openReactionModal(props.note.post.id, {\n      likes: reactionsState.likes,\n      zaps: reactionsState.zapCount,\n      reposts: reactionsState.reposts,\n      quotes: reactionsState.quoteCount,\n      openOn,\n    });\n  };\n\n  const onContextMenuTrigger = () => {\n    app?.actions.openContextMenu(\n      props.note,\n      noteContextMenu?.getBoundingClientRect(),\n      () => {\n        app?.actions.openCustomZapModal(customZapInfo());\n      },\n      openReactionModal,\n    );\n  }\n\n  const reactionSum = () => {\n    const { likes, zapCount, reposts, quoteCount } = reactionsState;\n\n    return (likes || 0) + (zapCount || 0) + (reposts || 0) + (quoteCount || 0);\n  };\n\n  createEffect(() => {\n    updateReactionsState('topZaps', () =>  [ ...(threadContext?.topZaps[props.note.post.id] || []) ]);\n  });\n\n  const size = () => props.size ?? 'normal';\n\n  const bigMessageFont = () => {\n    // const hasImage = imageRegexG.test(props.note.content);\n    // const hasNoteMention = noteRegex.test(props.note.content);\n    // const hasAddrMention = addrRegexG.test(props.note.content);\n    // const hasLinks = urlRegexG.test(props.note.content);\n\n    const lnCount = props.note.content.match(linebreakRegex)?.length || 0;\n\n    if (lnCount > 0) return false;\n\n    let strippedContent = props.note.content\n      .replace(imageRegexG, '__PRIMAL_REPLACEMENT__')\n      .replace(noteRegex, '__PRIMAL_REPLACEMENT__')\n      .replace(addrRegexG, '__PRIMAL_REPLACEMENT__')\n      // .replace(profileRegexG, '__PRIMAL_REPLACEMENT__')\n      .replace(urlRegexG, '__PRIMAL_REPLACEMENT__')\n      .trim();\n\n    const splitContent = strippedContent.replace(/\\s+/g, '').split('__PRIMAL_REPLACEMENT__');\n\n    if (splitContent.length > 1 && splitContent[1].length > 0) return false;\n\n    strippedContent.replaceAll('__PRIMAL_REPLACEMENT__', '');\n\n    const isShort = strippedContent.length < 42;\n    const isReply = props.note.replyTo;\n\n    // return !hasImage && !hasLinks && !hasNoteMention && !hasAddrMention && isShort;\n    return isShort && !isReply;\n  }\n\n  return (\n    <Switch>\n      <Match when={noteType() === 'notification'}>\n        <A\n          id={props.id}\n          class={styles.noteNotificationLink}\n          href={`/e/${props.note?.post.noteId}`}\n          onClick={() => navToThread(props.note)}\n          data-event={props.note.post.id}\n          data-event-bech32={props.note.post.noteId}\n        >\n          <div class={styles.noteNotifications}>\n            <div class={styles.content}>\n              <div class={styles.message}>\n                <ParsedNote\n                  note={props.note}\n                  shorten={true}\n                />\n              </div>\n\n              <div class={styles.footer}>\n                <NoteFooter\n                  note={props.note}\n                  state={reactionsState}\n                  updateState={updateReactionsState}\n                  customZapInfo={customZapInfo()}\n                  size=\"short\"\n                />\n              </div>\n            </div>\n          </div>\n        </A>\n      </Match>\n\n      <Match when={noteType() === 'primary'}>\n        <div\n          id={props.id}\n          class={styles.notePrimary}\n          data-event={props.note.post.id}\n          data-event-bech32={props.note.post.noteId}\n        >\n          <div class={styles.border}></div>\n\n          <div class={styles.header}>\n            <NoteHeader note={props.note} primary={true} />\n          </div>\n\n          <div class={styles.upRightFloater}>\n            <NoteContextTrigger\n              ref={noteContextMenu}\n              onClick={onContextMenuTrigger}\n            />\n          </div>\n\n          <div class={styles.content}>\n\n            <div class={`${styles.message} ${bigMessageFont() ? styles.bigFont : ''}`}>\n              <ParsedNote\n                note={props.note}\n                width={Math.min(640, window.innerWidth)}\n                margins={42}\n              />\n            </div>\n\n            <div class={styles.topZaps}>\n              <NoteTopZaps\n                topZaps={reactionsState.topZaps}\n                zapCount={reactionsState.zapCount}\n                action={() => openReactionModal('zaps')}\n                // doZap={() => app?.actions.openCustomZapModal(customZapInfo())}\n              />\n            </div>\n\n            <div\n              class={styles.time}\n              title={date(props.note.post?.created_at).date.toLocaleString()}\n            >\n              <span>\n                {veryLongDate(props.note.post?.created_at).replace('at', '·')}\n              </span>\n              <button\n                class={styles.reactSummary}\n                onClick={() => openReactionModal()}\n              >\n                <span class={styles.number}>{reactionSum()}</span> Reactions\n              </button>\n            </div>\n\n            <div class={styles.footer}>\n              <NoteFooter\n                note={props.note}\n                state={reactionsState}\n                updateState={updateReactionsState}\n                customZapInfo={customZapInfo()}\n                size=\"wide\"\n                large={true}\n                onZapAnim={addTopZap}\n              />\n            </div>\n          </div>\n        </div>\n      </Match>\n\n      {/* <Match when={noteType() === 'feed'}>\n        <A\n          id={props.id}\n          class={`${styles.note} ${props.parent ? styles.parent : ''}`}\n          href={`/e/${props.note?.post.noteId}`}\n          onClick={() => navToThread(props.note)}\n          data-event={props.note.post.id}\n          data-event-bech32={props.note.post.noteId}\n          draggable={false}\n        >\n          <div class={styles.header}>\n            <Show when={repost()}>\n              <NoteRepostHeader note={props.note} />\n            </Show>\n          </div>\n          <div class={styles.userHeader}>\n            <A href={app?.actions.profileLink(props.note.user.npub) || ''}>\n              <Avatar user={props.note.user} size=\"xs\" />\n            </A>\n\n            <NoteAuthorInfo\n              author={props.note.user}\n              time={props.note.post.created_at}\n            />\n\n            <div class={styles.upRightFloater}>\n              <NoteContextTrigger\n                ref={noteContextMenu}\n                onClick={onContextMenuTrigger}\n              />\n            </div>\n          </div>\n\n          <NoteReplyToHeader note={props.note} />\n\n          <div class={`${styles.message} ${bigMessageFont() ? styles.bigFont : ''}`}>\n            <ParsedNote\n              note={props.note}\n              shorten={props.shorten}\n              width={Math.min(640, window.innerWidth - 72)}\n              margins={20}\n            />\n          </div>\n\n          <NoteTopZapsCompact\n            note={props.note}\n            action={() => openReactionModal('zaps')}\n            topZaps={reactionsState.topZapsFeed}\n            topZapLimit={4}\n          />\n\n          <NoteFooter\n            note={props.note}\n            state={reactionsState}\n            updateState={updateReactionsState}\n            customZapInfo={customZapInfo()}\n            onZapAnim={addTopZapFeed}\n            size={size()}\n          />\n        </A>\n      </Match> */}\n\n      <Match when={noteType() === 'thread' || noteType() === 'feed'}>\n        <A\n          id={props.id}\n          class={`${styles.noteThread} ${props.parent ? styles.parent : ''}`}\n          href={`/e/${props.note?.post.noteId}`}\n          onClick={() => navToThread(props.note)}\n          data-event={props.note.post.id}\n          data-event-bech32={props.note.post.noteId}\n          draggable={false}\n        >\n          <div class={styles.header}>\n            <Show when={repost()}>\n              <NoteRepostHeader note={props.note} />\n            </Show>\n          </div>\n          <div class={styles.content}>\n            <div class={styles.leftSide}>\n              <A href={app?.actions.profileLink(props.note.user.npub) || ''}>\n                <Avatar user={props.note.user} size=\"vs\" />\n              </A>\n              <Show\n                when={props.parent}\n              >\n                <div class={styles.ancestorLine}></div>\n              </Show>\n            </div>\n\n            <div class={styles.rightSide}>\n              <NoteAuthorInfo\n                author={props.note.user}\n                time={props.note.post.created_at}\n              />\n\n              <div class={styles.upRightFloater}>\n                <NoteContextTrigger\n                  ref={noteContextMenu}\n                  onClick={onContextMenuTrigger}\n                />\n              </div>\n\n              <NoteReplyToHeader note={props.note} />\n\n              <div class={styles.message}>\n                <ParsedNote\n                  note={props.note}\n                  shorten={props.shorten}\n                  width={Math.min(566, window.innerWidth - 72)}\n                  margins={16}\n                  footerSize=\"short\"\n                />\n              </div>\n\n              <NoteTopZapsCompact\n                note={props.note}\n                action={() => openReactionModal('zaps')}\n                topZaps={reactionsState.topZapsFeed}\n                topZapLimit={4}\n              />\n\n              <div class={styles.footer}>\n                <NoteFooter\n                  note={props.note}\n                  state={reactionsState}\n                  updateState={updateReactionsState}\n                  customZapInfo={customZapInfo()}\n                  onZapAnim={addTopZapFeed}\n                  size=\"short\"\n                />\n              </div>\n            </div>\n          </div>\n        </A>\n      </Match>\n\n      <Match when={noteType() === 'reaction'}>\n        <A\n          id={props.id}\n          class={`${styles.note} ${styles.reactionNote}`}\n          href={`/e/${props.note?.post.noteId}`}\n          onClick={() => navToThread(props.note)}\n          data-event={props.note.post.id}\n          data-event-bech32={props.note.post.noteId}\n          draggable={false}\n        >\n          <div class={styles.content}>\n            <div class={styles.leftSide}>\n              <A href={app?.actions.profileLink(props.note.user.npub) || ''}>\n                <Avatar user={props.note.user} size=\"vs\" />\n              </A>\n              <Show\n                when={props.parent}\n              >\n                <div class={styles.ancestorLine}></div>\n              </Show>\n            </div>\n\n            <div class={styles.rightSide}>\n              <NoteAuthorInfo\n                author={props.note.user}\n                time={props.note.post.created_at}\n              />\n\n              <NoteReplyToHeader note={props.note} />\n\n              <div class={styles.message}>\n                <ParsedNote\n                  note={props.note}\n                  shorten={props.shorten}\n                  width={Math.min(528, window.innerWidth - 72)}\n                  margins={12}\n                  noLightbox={true}\n                  altEmbeds={true}\n                />\n              </div>\n            </div>\n          </div>\n        </A>\n      </Match>\n    </Switch>\n  );\n}\n\nexport default hookForDev(Note);\n"],"names":["NoteAuthorInfo","props","useThreadContext","useIntl","_el$","_tmpl$2","_el$2","firstChild","_el$4","nextSibling","_el$5","_$insert","authorName","author","_$createComponent","VerificationCheck","user","fallback","_el$6","_tmpl$3","_$effect","_$className","styles","verificationFailed","Show","when","nip05","children","_el$3","_tmpl$","nip05Verification","_p$","_v$","verification","_v$2","_$setAttribute","undefined","date","time","label","_v$3","authorInfo","_v$4","userName","_v$5","_v$6","toLocaleString","_v$7","ellipsisIcon","hookForDev","NoteRepostHeader","intl","app","useAppContext","repost","note","reposterName","others","reposts","post","A","href","actions","profileLink","npub","_$memo","formatMessage","t","repostedOthers","number","reposted","repostedBy","repostIcon","NoteReplyHeader","rootAuthor","createMemo","replyTo","mentions","mentionedNotes","reply","MentionedUserLink","replyingTo","NoteHeader","toaster","useToastContext","account","useAccountContext","showContext","setContext","createSignal","confirmReportUser","setConfirmReportUser","confirmMuteUser","setConfirmMuteUser","displayName","name","truncateNpub","hexToNpub","pubkey","copyNoteLink","navigator","clipboard","writeText","window","location","origin","noteId","sendSuccess","tToast","notePrimalLinkCoppied","copyNoteText","content","notePrimalTextCoppied","copyNoteId","noteIdCoppied","copyRawData","JSON","stringify","msg","noteRawDataCoppied","copyUserNpub","noteAuthorNpubCoppied","broadcastNote","__name","success","broadcastEvent","proxyThroughPrimal","activeRelays","relaySettings","noteBroadcastSuccess","sendWarning","noteBroadcastFail","onClickOutside","e","document","getElementById","id","contains","target","createEffect","addEventListener","removeEventListener","isVerifiedByPrimal","endsWith","noteContextForEveryone","tActions","noteContext","zap","action","openCustomZap","icon","copyLink","copyText","copyId","copyRaw","breadcast","copyPubkey","noteContextForOtherPeople","muteAuthor","warning","reportAuthor","publicKey","Avatar","size","highlightBorder","_el$7","header","headerInfo","avatar","_v$8","postInfo","_v$9","userInfo","_v$10","primary","NoteContextTrigger","_ref$","ref","_$use","$$click","preventDefault","stopPropagation","onClick","context","contextButton","contextIcon","NoteContextTrigger$1","_$delegateEvents","NoteTopZaps","threadContext","hasMoreZaps","setHasMoreZaps","topZaps","zaps","limit","slice","zapSender","users","find","u","isFetchingTopZaps","_tmpl$4","_el$8","_el$9","_el$10","_el$11","_el$12","_el$13","_el$14","_el$15","topZapsLoading","firstZap","zapList","topZap","_v$11","_v$12","_v$13","_v$14","TransitionGroup","enterClass","topZapEnterTransition","exitClass","topZapExitTransition","For","each","index","_el$16","_el$18","_el$17","topZapIcon","amount","_el$19","message","description","_v$15","_v$16","_v$17","_$style","length","_el$20","break","moreZaps","doZap","_$addEventListener","doZaps","zapIcon","zapText","zapHighlights","NoteTopZaps$1","NoteTopZapsCompact","dontAnimate","setDontAnimate","activeUser","mentionedUsers","onMount","setTimeout","hideMessage","zapWrap","noAnimation","compact","zapHighlightsCompact","NoteTopZapsCompact$1","Note","quoteCount","updateReactionsState","noteType","navToThread","setPrimaryNote","reactionsState","createStore","likes","liked","noteActions","replies","replied","zapCount","satsZapped","satszapped","zapped","zappedAmount","zappedNow","isZapping","showZapAnim","hideZapIcon","moreZapsAvailable","isRepostMenuVisible","topZapsFeed","noteContextMenu","latestTopZap","latestTopZapFeed","onConfirmZap","zapOption","closeCustomZapModal","batch","z","addTopZap","addTopZapFeed","oldZaps","uuidv4","newZap","eventId","sort","a","b","removeTopZapFeed","filter","fetchUsers","removeTopZap","onSuccessZap","resetCustomZap","onFailZap","onCancelZap","customZapInfo","onConfirm","onSuccess","onFail","onCancel","openReactionModal","openOn","quotes","onContextMenuTrigger","openContextMenu","getBoundingClientRect","openCustomZapModal","reactionSum","bigMessageFont","match","linebreakRegex","strippedContent","replace","imageRegexG","noteRegex","addrRegexG","urlRegexG","trim","splitContent","split","replaceAll","isShort","isReply","Switch","Match","noteNotificationLink","ParsedNote","shorten","NoteFooter","state","updateState","noteNotifications","footer","r$","width","Math","min","innerWidth","margins","veryLongDate","created_at","large","onZapAnim","notePrimary","border","upRightFloater","bigFont","reactSummary","_v$18","_v$19","noteThread","parent","draggable","_el$21","_el$22","_el$23","_el$24","ancestorLine","_ref$2","NoteReplyToHeader","footerSize","topZapLimit","_v$20","_v$21","leftSide","_v$22","rightSide","_v$23","_v$24","_v$25","reactionNote","_el$25","_tmpl$5","_el$26","_el$28","_el$29","_el$27","noLightbox","altEmbeds","_v$26","_v$27","_v$28","_v$29","Note$1"],"mappings":"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"}