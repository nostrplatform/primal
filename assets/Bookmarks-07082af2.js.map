{"version":3,"file":"Bookmarks-07082af2.js","sources":["../../src/components/SelectionBox/SelectionBox.tsx","../../src/components/FeedSelect/BookmarksSelect.tsx","../../src/components/HomeHeader/BookmarksHeader.tsx","../../src/pages/Bookmarks.tsx"],"sourcesContent":["import { useIntl } from \"@cookbook/solid-intl\";\nimport { Select } from \"@kobalte/core/select\";\n\n// Import default styles. (All examples use this via a global import)\nimport \"@thisbeyond/solid-select/style.css\";\nimport { Component } from \"solid-js\";\nimport { hookForDev } from \"../../lib/devTools\";\nimport { placeholders } from \"../../translations\";\nimport { SelectionOption } from \"../../types/primal\";\n\nimport SelectionItem from \"./SelectionItem\";\n\n// Apply custom styling. See stylesheet below.\nimport styles from  \"./SelectionBox.module.scss\";\nimport { A } from \"@solidjs/router\";\n\n\nconst SelectionBox: Component<{\n  options: SelectionOption[],\n  onChange: (option: any) => void,\n  initialValue?: string | SelectionOption,\n  big?: boolean,\n  value?: string | SelectionOption,\n  id?: string,\n}> = (props) => {\n\n  const defaultValue = () => {\n    if (typeof props.initialValue === 'string') {\n      return props.options.find(o => o.value === props.initialValue);\n    }\n\n    return props.initialValue;\n  }\n  const value = () => {\n    if (!props.value) {\n      return defaultValue();\n    }\n\n    if (typeof props.value === 'string') {\n      return { label: props.value, value: props.value };\n    }\n\n    return props.value;\n  }\n\n  return (\n    <Select\n      id={props.id}\n      class={styles.selectionBox}\n      options={props.options}\n      optionValue=\"value\"\n      optionTextValue=\"label\"\n      optionDisabled=\"disabled\"\n      itemComponent={(prps) => SelectionItem(prps)}\n      defaultValue={defaultValue()}\n      value={value()}\n      onChange={props.onChange}\n    >\n      <Select.Trigger class={props.big ? styles.triggerBig : styles.trigger}>\n        <Select.Value<SelectionOption>>\n          {state => state.selectedOption()?.label || ''}\n        </Select.Value>\n        <Select.Icon>\n          <div class={props.big ? styles.selectionIconBig : styles.selectionIcon}></div>\n        </Select.Icon>\n      </Select.Trigger>\n      <Select.Content class={styles.selectionContent}>\n        <div class={styles.caption}>\n          <div class={styles.title}>\n            Note Feeds:\n          </div>\n        </div>\n        <Select.Listbox class={styles.listbox}/>\n      </Select.Content>\n    </Select>\n  );\n}\n\nexport default hookForDev(SelectionBox);\n","import { Component } from 'solid-js';\nimport { useAccountContext } from '../../contexts/AccountContext';\nimport { useHomeContext } from '../../contexts/HomeContext';\nimport { useReadsContext } from '../../contexts/ReadsContext';\nimport { useSettingsContext } from '../../contexts/SettingsContext';\nimport { hookForDev } from '../../lib/devTools';\nimport { fetchStoredFeed } from '../../lib/localStore';\nimport { FeedOption, PrimalFeed, SelectionOption } from '../../types/primal';\nimport SelectBox from '../SelectBox/SelectBox';\nimport SelectionBox from '../SelectionBox/SelectionBox';\n\nconst BookmarksSelect: Component<{\n  isPhone?: boolean,\n  id?: string,\n  big?: boolean,\n  inital: string,\n  selected?: string,\n  onSelect: (kind: string) => void,\n}> = (props) => {\n\n  const reeds = useReadsContext();\n\n  const selectOption = (option: FeedOption) => {\n    props.onSelect(option.value || '');\n  };\n\n  const isSelected = (option: FeedOption) => {\n    const selected = reeds?.selectedFeed;\n\n\n    if (selected?.hex && option.value) {\n      const t = option.value.split('_');\n\n      const isHex = encodeURI(selected.hex) == t[0];\n      const isOpt = t[1] === 'undefined' ?\n        selected.includeReplies === undefined :\n        selected.includeReplies?.toString() === t[1];\n\n      return isHex && isOpt;\n    }\n\n    return false;\n  }\n\n  const options:() => SelectionOption[] = () => {\n    let opts = [];\n\n    opts.push(\n      {\n        label: 'Bookmarked Notes',\n        value: 'notes',\n      }\n    );\n\n    opts.push(\n      {\n        label: 'Bookmarked Reads',\n        value: 'reads',\n      }\n    );\n\n    return [ ...opts ];\n  };\n\n  const initialValue = () => {\n    return options().find(o => o.value === props.inital)\n  }\n\n  const selectedValue = () => {\n    if (!props.selected)\n      return initialValue();\n\n    return options().find(o => o.value === props.selected);\n  };\n\n  return (\n    <SelectionBox\n      options={options()}\n      onChange={selectOption}\n      initialValue={initialValue()}\n      value={selectedValue()}\n      isSelected={isSelected}\n      isPhone={props.isPhone}\n      big={props.big}\n    />\n  );\n}\n\nexport default hookForDev(BookmarksSelect);\n","import { Component } from 'solid-js';\n\nimport styles from './HomeHeader.module.scss';\nimport { hookForDev } from '../../lib/devTools';\nimport BookmarksSelect from '../FeedSelect/BookmarksSelect';\n\nconst BookmarksHeader: Component< {\n  id?: string,\n  kind: string,\n  onSelect: (kind: string) => void,\n} > = (props) => {\n\n  return (\n    <div id={props.id}>\n      <div class={`${styles.bigFeedSelect} ${styles.readsFeed}`}>\n        <BookmarksSelect big={true} initial={props.kind} selected={props.kind} onSelect={props.onSelect} />\n      </div>\n    </div>\n  );\n}\n\nexport default hookForDev(BookmarksHeader);\n","import { useIntl } from '@cookbook/solid-intl';\nimport { Component, createEffect, For, Match, on, onCleanup, onMount, Show, Switch } from 'solid-js';\nimport { createStore } from 'solid-js/store';\nimport { Transition } from 'solid-transition-group';\nimport { APP_ID } from '../App';\nimport ArticlePreview from '../components/ArticlePreview/ArticlePreview';\nimport BookmarksHeader from '../components/HomeHeader/BookmarksHeader';\nimport Note from '../components/Note/Note';\nimport PageCaption from '../components/PageCaption/PageCaption';\nimport PageTitle from '../components/PageTitle/PageTitle';\nimport Paginator from '../components/Paginator/Paginator';\nimport { Kind } from '../constants';\nimport { useAccountContext } from '../contexts/AccountContext';\nimport { getEvents, getUserFeed } from '../lib/feed';\nimport { setLinkPreviews } from '../lib/notes';\nimport { subsTo } from '../sockets';\nimport { convertToArticles, convertToNotes, parseEmptyReposts } from '../stores/note';\nimport { bookmarks as tBookmarks } from '../translations';\nimport { NostrEventContent, NostrUserContent, NostrNoteContent, NostrStatsContent, NostrMentionContent, NostrNoteActionsContent, NoteActions, FeedPage, PrimalNote, NostrFeedRange, PageRange, TopZap, PrimalArticle } from '../types/primal';\nimport { calculateNotesOffset, calculateReadsOffset, parseBolt11 } from '../utils';\nimport styles from './Bookmarks.module.scss';\nimport { fetchBookmarksFeed, saveBookmarksFeed } from '../lib/localStore';\nimport { emptyPaging, fetchMegaFeed, filterAndSortNotes, filterAndSortReads, PaginationInfo } from '../megaFeeds';\n\nexport type BookmarkStore = {\n  fetchingInProgress: boolean,\n  notes: PrimalNote[],\n  reads: PrimalArticle[],\n  paging: PaginationInfo,\n  kind: string,\n}\n\nconst emptyStore: BookmarkStore = {\n  fetchingInProgress: false,\n  notes: [],\n  reads: [],\n  paging: { ...emptyPaging() },\n  kind: 'notes',\n};\n\nlet since: number = 0;\n\nconst Bookmarks: Component = () => {\n  const account = useAccountContext();\n  const intl = useIntl();\n\n  const pageSize = 20;\n\n  const [store, updateStore] = createStore<BookmarkStore>({ ...emptyStore });\n\n  createEffect(on(() => account?.isKeyLookupDone, (v) => {\n    if (v && account?.publicKey) {\n      const k = fetchBookmarksFeed(account?.publicKey);\n\n      if (k && k !== store.kind) {\n        updateStore('kind', () => k);\n      }\n\n      if (\n        (k==='notes' && store.notes.length === 0) ||\n        (k==='reads' && store.reads.length === 0)\n      )\n        updateStore('fetchingInProgress', () => true);\n        fetchBookmarks(account?.publicKey);\n      }\n  }));\n\n  onCleanup(() => {\n    updateStore(() => ({ ...emptyStore }));\n  });\n\n  const kind = () => store.kind || 'notes';\n\n  const fetchBookmarks = async (pubkey: string | undefined, until = 0) => {\n    if (!pubkey) return;\n\n    const subId = `bookmark_feed_${until}_${APP_ID}`;\n\n    const k = kind() === 'reads' ? Kind.LongForm : Kind.Text;\n\n    const spec = JSON.stringify({\n      id: 'feed',\n      kind: 'notes',\n      kinds: [k],\n      notes: 'bookmarks',\n      pubkey,\n    });\n\n    let offset = 0;\n\n    if (kind() === 'reads') {\n      offset = calculateReadsOffset(store.reads, store.paging);\n    } else if (kind() === 'notes') {\n      offset = calculateNotesOffset(store.notes, store.paging);\n    }\n\n    const { notes, reads, paging } = await fetchMegaFeed(\n      account?.publicKey,\n      spec,\n      subId,\n      {\n        until,\n        limit: pageSize,\n        offset,\n      }\n    );\n\n    if (kind() === 'notes') {\n      const sortedNotes = filterAndSortNotes(notes, paging);\n      updateStore('notes', (nts) => [...nts, ...sortedNotes]);\n    }\n\n    if (kind() === 'reads') {\n      const sortedReads = filterAndSortReads(reads, paging);\n      updateStore('reads', (nts) => [...nts, ...sortedReads]);\n    }\n\n    updateStore('paging', () => ({ ...paging }));\n\n    updateStore('fetchingInProgress', () => false);\n  }\n\n  const fetchNextPage = () => {\n    const until = store.paging.since || 0;\n\n    if (until > 0) {\n      fetchBookmarks(account?.publicKey, until)\n    }\n  };\n\n  const onChangeKind = (newKind: string) => {\n    updateStore(() => ({ ...emptyStore }));\n    updateStore('fetchingInProgress', () => true);\n    updateStore('kind', () => newKind);\n    saveBookmarksFeed(account?.publicKey, newKind);\n    fetchBookmarks(account?.publicKey);\n  }\n\n  return (\n    <>\n      <PageTitle title={intl.formatMessage(tBookmarks.pageTitle)} />\n\n      <PageCaption title={intl.formatMessage(tBookmarks.pageTitle)}>\n        <Show\n          when={kind()}\n          fallback={\n            <div>\n              <span>\n                Bookmarks\n              </span>\n            </div>\n          }\n        >\n          <BookmarksHeader\n            kind={kind()}\n            onSelect={onChangeKind}\n          />\n        </Show>\n      </PageCaption>\n\n      <div class={styles.bookmarkFeed}>\n\n        <Show when={!store.fetchingInProgress && store.notes.length === 0 && store.reads.length === 0}>\n          <div class={styles.noBookmarks}>\n            {intl.formatMessage(tBookmarks.noBookmarks)}\n          </div>\n        </Show>\n\n        <Transition name=\"slide-fade\">\n          <Show\n            when={!store.fetchingInProgress}\n          >\n            <div>\n              <Switch>\n                <Match when={kind() === 'notes'}>\n                  <For each={store.notes}>\n                    {(note) =>\n                      <div class=\"animated\"><Note note={note} /></div>\n                    }\n                  </For>\n                </Match>\n\n                <Match when={kind() === 'reads'}>\n                  <For each={store.reads}>\n                    {(read) =>\n                      <div class=\"animated\"><ArticlePreview article={read} /></div>\n                    }\n                  </For>\n                </Match>\n              </Switch>\n            </div>\n          </Show>\n        </Transition>\n\n        <Paginator loadNextPage={fetchNextPage} />\n      </div>\n    </>\n  );\n}\n\nexport default Bookmarks;\n"],"names":["SelectionBox","props","defaultValue","initialValue","options","find","o","value","label","_$createComponent","Select","id","styles","selectionBox","optionValue","optionTextValue","optionDisabled","itemComponent","prps","SelectionItem","onChange","children","Trigger","big","triggerBig","trigger","Value","state","selectedOption","Icon","_el$","_tmpl$","_$effect","_$className","selectionIconBig","selectionIcon","Content","selectionContent","_el$2","_tmpl$2","_el$3","firstChild","_p$","_v$","caption","_v$2","title","undefined","Listbox","listbox","hookForDev","BookmarksSelect","reeds","useReadsContext","selectOption","option","onSelect","isSelected","selected","selectedFeed","hex","t","split","isHex","encodeURI","isOpt","includeReplies","toString","opts","push","inital","selectedValue","isPhone","BookmarksHeader","_$insert","initial","kind","bigFeedSelect","readsFeed","_$setAttribute","emptyStore","fetchingInProgress","notes","reads","paging","emptyPaging","Bookmarks","account","useAccountContext","intl","useIntl","pageSize","store","updateStore","createStore","createEffect","on","isKeyLookupDone","v","publicKey","k","fetchBookmarksFeed","length","fetchBookmarks","onCleanup","__name","pubkey","until","subId","APP_ID","Kind","LongForm","Text","spec","JSON","stringify","kinds","offset","calculateReadsOffset","calculateNotesOffset","fetchMegaFeed","limit","sortedNotes","filterAndSortNotes","nts","sortedReads","filterAndSortReads","fetchNextPage","since","onChangeKind","newKind","saveBookmarksFeed","PageTitle","formatMessage","tBookmarks","pageTitle","PageCaption","Show","when","fallback","noBookmarks","Transition","name","Switch","Match","For","each","note","_el$5","_tmpl$3","Note","read","_el$6","ArticlePreview","article","Paginator","loadNextPage","bookmarkFeed"],"mappings":"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"}