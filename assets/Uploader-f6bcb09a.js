var ne=Object.defineProperty;var u=(n,$)=>ne(n,"name",{value:$,configurable:!0});import{u as re,D as oe,dd as L,de as le,E as z,n as ae,df as ie,dg as ue,bk as ce,c as f,S as x,j as K,l as I,m as T,t as de,dh as pe,a2 as ge,di as fe,dj as he}from"./index-64dc6460.js";import{P as E}from"./EMOXVTIZ-81fa338a.js";import{B as me}from"./ButtonGhost-a0fa1826.js";const ke="_uploadProgress_n52s7_1",_e="_progressLabelContainer_n52s7_7",Ce="_progressLabel_n52s7_7",be="_progressValue_n52s7_12",Se="_progressTrackContainer_n52s7_18",Le="_iconClose_n52s7_23",ze="_iconCheck_n52s7_32",Ie="_progressTrack_n52s7_18",Te="_progressFill_n52s7_48",c={uploadProgress:ke,progressLabelContainer:_e,progressLabel:Ce,progressValue:be,progressTrackContainer:Se,iconClose:Le,iconCheck:ze,progressTrack:Ie,progressFill:Te};let J=localStorage.getItem("uploadServer")||"wss://uploads.primal.net/v1";const U=de("<div>"),d=1024*1024,h=5;let q=h;const H=5,ve=u(n=>{const $=re(),[t,a]=oe({isUploading:!1,progress:0,offset:0,chunkSize:d,chunkMap:[],uploadedChunks:0,chunkIndex:-1,fileSize:"small",uploadLimit:L.regular});let p=[],b=[],k=Array(h).fill(-1),Q=le(n.publicKey),O=0,N=0,w="up_comp_",S,y=!1;z(()=>{n.file!==void 0?Z(n.file):_()}),z(()=>{if(n.openSockets){y=!1;for(let e=0;e<h;e++){const s=new WebSocket(J);s.addEventListener("close",()=>{if(y)return;const o=new WebSocket(J);p[e]=o;const r=b[e];r>0&&M(r)}),p.push(s)}}else y=!0,p.forEach(e=>e.close()),p=[]}),z(()=>{X($?.membershipStatus.tier)}),ae(()=>{p.forEach(e=>e.close()),p=[]}),z(()=>{t.isUploading&&t.chunkIndex>=0&&M(t.chunkIndex)});const X=u(e=>{if(e==="premium"){a("uploadLimit",()=>L.premium);return}if(e==="premium-legend"){a("uploadLimit",()=>L.premiumLegend);return}a("uploadLimit",()=>L.regular)},"calcUploadLimit"),R=u((e,s,o)=>{const r=u(l=>{const i=JSON.parse(l.data),[g,m,C]=i;s===m&&o(g,m,C)},"listener");return e.addEventListener("message",r),()=>{e.removeEventListener("message",r)}},"subTo"),_=u(e=>{if(!e&&t.id){const s=p[0];ie(n.publicKey,`up_c_${t.id}`,t.id||"",s)}a(()=>({isUploading:!1,file:void 0,id:void 0,progress:0,offset:0,chunkSize:d,chunkMap:[],uploadedChunks:0,chunkIndex:-1,fileSize:"small"})),k=Array(h).fill(H)},"resetUpload"),D=u(()=>{_(!0),n.onFail&&n.onFail("")},"failUpload"),Y=u(async(e,s)=>{const o=await pe(s),r=R(e,w,(l,i,g)=>{if(l==="NOTICE"){r(),D();return}if(l==="EVENT"){if(!g)return;if(g.kind===ge.Uploaded){const m=g;N=Date.now();const C=(N-O)/t.uploadedChunks;fe(n.publicKey,{[t.fileSize]:C}),S?.style.setProperty("--progress-rate","100ms"),setTimeout(()=>{a("progress",()=>100)},10),setTimeout(()=>{n.onSuccsess&&n.onSuccsess(m.content),_(!0)},500);return}}if(l==="EOSE"){r();return}});he(n.publicKey,w,t.id||"",s.size,o,e)},"onUploadCompleted"),M=u(e=>{const{file:s,chunkSize:o,id:r,chunkMap:l}=t,i=l[e];if(!s||!r)return;const g=new FileReader,m=i+o;let C=s.slice(i,m);g.onload=V=>{if(!V.target?.result)return;const B=`up_${e}_${k[e]}_${r}`,ee=V.target?.result,v=e%h,F=p[e%h],j=R(F,B,(G,Ee,Ue)=>{if(G==="NOTICE"){if(j(),k[e]<1){D();return}b[v]=-1,k[e]--,M(e);return}if(G==="EOSE"){if(j(),b[v]=-1,!t.isUploading)return;a("uploadedChunks",A=>A+1);const P=l.length,te=Math.ceil(100*t.uploadedChunks/t.chunkMap.length)-1;if(a("progress",()=>te),t.uploadedChunks<P&&t.chunkIndex<P-1){a("chunkIndex",A=>A+1);return}if(t.uploadedChunks===P){Y(F,s);return}}}),W=Q[t.fileSize];S?.style.setProperty("--progress-rate",`${W+W/4}ms`);let se=s.size;b[v]=e,ue(n.publicKey,B,r,ee,i,se,F,e)},g.readAsDataURL(C)},"uploadChunk"),Z=u(e=>{if(e.size>=d*t.uploadLimit){n.onRefuse&&n.onRefuse(`file_too_big_${t.uploadLimit}`),_(!0);return}let s=d,o="huge";e.size<d/2?(s=e.size,o="small"):e.size<d?(s=Math.ceil(d/4),o="medium"):e.size<12*d&&(s=Math.ceil(d/2),o="large");let r=0,l=[];for(;r<e.size&&!(r>=e.size);)l.push(r),r+=s;a(()=>({isUploading:!0,file:e,id:ce(),progress:0,offset:0,chunkSize:s,chunkMap:l,chunkIndex:0,fileSize:o})),w=`up_comp_${t.id}`,k=Array(l.length).fill(H),q=Math.min(h,l.length-2),O=Date.now();for(let i=0;i<q;i++)setTimeout(()=>{a("chunkIndex",()=>i)},0)},"uploadFile");return f(x,{get when(){return t.id},get children(){return f(E,{get value(){return t.progress},get class(){return c.uploadProgress},get children(){return[f(x,{get when(){return!n.hideLabel},get children(){const e=U();return K(e,f(E.Label,{get class(){return c.progressLabel},get children(){return t.file?.name||""}})),I(()=>T(e,c.progressLabelContainer)),e}}),(()=>{const e=U();return K(e,f(E.Track,{get class(){return c.progressTrack},get children(){return f(E.Fill,{ref(s){const o=S;typeof o=="function"?o(s):S=s},get class(){return`${c.progressFill} ${c[t.fileSize]}`}})}}),null),K(e,f(me,{onClick:()=>{_(),n.onCancel&&n.onCancel()},get disabled(){return t.progress>100},get children(){return f(x,{get when(){return t.progress<100},get fallback(){return(()=>{const s=U();return I(()=>T(s,c.iconCheck)),s})()},get children(){const s=U();return I(()=>T(s,c.iconClose)),s}})}}),null),I(()=>T(e,c.progressTrackContainer)),e})()]}})}})},"Uploader");export{ve as U};
//# sourceMappingURL=Uploader-f6bcb09a.js.map
