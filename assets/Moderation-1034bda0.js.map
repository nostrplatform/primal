{"version":3,"file":"Moderation-1034bda0.js","sources":["../../src/pages/Settings/Moderation.tsx"],"sourcesContent":["import { useIntl } from '@cookbook/solid-intl';\nimport { A } from '@solidjs/router';\nimport { Component, createEffect, createSignal, For, Show } from 'solid-js';\nimport { createStore } from 'solid-js/store';\nimport { APP_ID } from '../../App';\nimport Avatar from '../../components/Avatar/Avatar';\nimport Checkbox from '../../components/Checkbox/Checkbox';\nimport HelpTip from '../../components/HelpTip/HelpTip';\nimport PageCaption from '../../components/PageCaption/PageCaption';\nimport PageTitle from '../../components/PageTitle/PageTitle';\nimport VerificationCheck from '../../components/VerificationCheck/VerificationCheck';\nimport { contentScope, Kind, specialAlgos, trendingScope } from '../../constants';\nimport { useAccountContext } from '../../contexts/AccountContext';\nimport { useAppContext } from '../../contexts/AppContext';\nimport { useSearchContext } from '../../contexts/SearchContext';\nimport { useSettingsContext } from '../../contexts/SettingsContext';\nimport { hexToNpub, npubToHex } from '../../lib/keys';\nimport { getUserProfiles } from '../../lib/profile';\nimport { subsTo } from '../../sockets';\nimport { convertToUser, nip05Verification, userName } from '../../stores/profile';\nimport { settings as t, actions as tActions, placeholders as tPlaceholders } from '../../translations';\nimport { NostrUserContent, PrimalUser } from '../../types/primal';\n\nimport styles from './Settings.module.scss';\n\nconst Moderation: Component = () => {\n  const intl = useIntl();\n\n  const account = useAccountContext();\n  const settings = useSettingsContext();\n  const search = useSearchContext();\n  const app = useAppContext();\n\n  let searchFilteredAccount: HTMLInputElement | undefined;\n  let allowlistInput: HTMLInputElement | undefined;\n\n  const [isSearching, setIsSearching] = createSignal(false);\n\n  const onSearchFilteredAccount = () => {\n    const value = searchFilteredAccount?.value || '';\n\n    if (value.startsWith('npub') || value.startsWith('nprofile')) {\n      setIsSearching(true);\n      search?.actions.findFilteredUserByNpub(value);\n      return;\n    }\n\n    setIsSearching(false);\n  };\n\n  const onAddToAllowlist = () => {\n    const value = allowlistInput?.value || '';\n\n    if (value.startsWith('npub') || value.startsWith('nprofile')) {\n      account?.actions.addToAllowlist(npubToHex(value));\n    }\n  };\n\n  const onRemoveFromAllowlist = (pubkey: string) => {\n    account?.actions.removeFromAllowlist(pubkey);\n  };\n\n  const pubkey = () => account?.publicKey;\n\n  const mutelists = () => {\n    return account?.mutelists.filter(m => m.pubkey && m.pubkey !== pubkey());\n  };\n\n  const algorithms = () => settings?.contentModeration.filter(x => x.name !== 'my').map(x => ({\n    name: x.name,\n    content: x.scopes.includes(contentScope),\n    trending: x.scopes.includes(trendingScope),\n  }));\n\n  const my = () => account?.mutelists.find(x => x.pubkey === pubkey());\n\n  const [users, setUsers] = createStore<Record<string, PrimalUser>>({});\n\n  const reasons = () => search?.filteringReasons || [];\n\n  createEffect(() => {\n    const userMutelists = account?.mutelists || [];\n\n    const rand = Math.floor(Math.random()*10_000);\n\n    if (userMutelists.length > 0) {\n      const subId = `user_mutelist_${rand}_${APP_ID}`\n      const unsub = subsTo(subId, {\n        onEvent: (_, content) => {\n          if (content?.kind === Kind.Metadata) {\n            const user = content as NostrUserContent;\n\n            const u = convertToUser(user, content.pubkey);\n            setUsers(() => ({ [u.pubkey]: { ...u } }));\n          }\n        },\n        onEose: () => {\n          unsub();\n        }\n      });\n\n      getUserProfiles(userMutelists.map(x => x.pubkey || ''), subId)\n    }\n  });\n\n  createEffect(() => {\n    const allowList = account?.allowlist || [];\n    const rand = Math.floor(Math.random()*10_000);\n\n    if (allowList.length > 0) {\n      const subId = `user_allowlist_${rand}_${APP_ID}`;\n\n      const unsub = subsTo(subId, {\n        onEvent: (_, content) => {\n          if (!content) return;\n\n          if (content.kind === Kind.Metadata) {\n            const user = content as NostrUserContent;\n\n            const u = convertToUser(user, content.pubkey);\n            setUsers(() => ({ [u.pubkey]: { ...u } }));\n          }\n\n        },\n        onEose: () => {\n          unsub();\n        },\n      });\n\n      getUserProfiles(allowList || [], subId)\n    }\n  });\n\n  createEffect(() => {\n    const reasons = search?.filteringReasons.filter(r => !specialAlgos.includes(r)) || [];\n    const rand = Math.floor(Math.random()*10_000);\n\n    if (reasons.length > 0) {\n      const subId = `user_reasons_${rand}_${APP_ID}`\n      const unsub = subsTo(subId, {\n        onEvent: (_, content) => {\n          if (!content) return;\n\n          if (content.kind === Kind.Metadata) {\n            const user = content as NostrUserContent;\n\n            const u = convertToUser(user, content.pubkey);\n            setUsers(() => ({ [u.pubkey]: { ...u } }));\n            return;\n          }\n        },\n        onEose: () => {\n          unsub();\n        },\n      });\n\n      getUserProfiles(reasons, subId)\n    }\n  });\n\n  return (\n    <div>\n      <PageTitle title={`${intl.formatMessage(t.moderation.title)} ${intl.formatMessage(t.title)}`} />\n\n      <PageCaption>\n        <A href='/settings' >{intl.formatMessage(t.index.title)}</A>:&nbsp;\n        <div>{intl.formatMessage(t.moderation.title)}</div>\n      </PageCaption>\n\n      <div class={styles.settingsContent}>\n        <div class={styles.settingsCaption}>\n          <Checkbox\n            id='applyFiltering'\n            label=\"\"\n            onChange={() => {settings?.actions.setApplyContentModeration(!settings.applyContentModeration)}}\n            checked={settings?.applyContentModeration}\n          />\n          <span>{intl.formatMessage(t.moderation.applyFiltering)}</span>\n          <HelpTip zIndex={1_000}>\n            <span>\n              {intl.formatMessage(t.moderation.description)}\n            </span>\n          </HelpTip>\n        </div>\n\n        <div class={styles.moderationDescription}>\n          {intl.formatMessage(t.moderation.shortDescription)}\n        </div>\n      </div>\n\n      <div class={styles.filterListTable}>\n        <Show when={!settings?.applyContentModeration}>\n          <div class={styles.veil}></div>\n        </Show>\n\n        <div class={styles.filterListHeader}>\n          <div>\n          {intl.formatMessage(t.moderation.table.mutelists)}\n          </div>\n          <div>\n            {intl.formatMessage(t.moderation.table.content)}\n            <HelpTip>\n              <span>{intl.formatMessage(t.moderation.table.contentHelp)}</span>\n            </HelpTip>\n          </div>\n          <div>\n            {intl.formatMessage(t.moderation.table.trending)}\n            <HelpTip>\n              <span>{intl.formatMessage(t.moderation.table.trendingHelp)}</span>\n            </HelpTip>\n          </div>\n        </div>\n\n        <div>\n          <div class={styles.filterListItem}>\n            <div class={styles.filterListName} title={my()?.pubkey}>\n              <A href='/p' class={styles.avatar}>\n                <Avatar\n                  user={account?.activeUser}\n                  size='xs'\n                />\n              </A>\n              <A href={'/settings/muted'}>\n                {intl.formatMessage(t.moderation.algos.my)}\n              </A>\n            </div>\n            <div class={styles.filterListCheck}>\n              <Checkbox\n                id={`${my()?.pubkey}_content`}\n                onChange={() => account?.actions.updateFilterList(my()?.pubkey, !my()?.content, my()?.trending)}\n                checked={my()?.content}\n                disabled={true}\n              />\n            </div>\n            <div class={styles.filterListCheck}>\n              <Checkbox\n                id={`${my()?.pubkey}_trending`}\n                onChange={() => account?.actions.updateFilterList(my()?.pubkey, my()?.content, !my()?.trending)}\n                checked={my()?.trending}\n                disabled={true}\n              />\n            </div>\n          </div>\n\n          <For each={mutelists()}>\n            {mutelist => (\n              <div class={styles.filterListItem}>\n                <div class={styles.filterListName} title={mutelist.pubkey}>\n                  <A href={app?.actions.profileLink(mutelist.pubkey) || ''} class={styles.avatar}>\n                    <Avatar\n                      user={users[mutelist.pubkey || '']}\n                      size='xs'\n                    />\n                  </A>\n                  <A href={`/mutelist/${users[mutelist.pubkey || '']?.npub}`}>\n                    {intl.formatMessage(t.moderation.moderationItem, { name: userName(users[mutelist.pubkey || '']) })}\n                  </A>\n                </div>\n                <div class={styles.filterListCheck}>\n                  <Checkbox\n                    id={`${mutelist.pubkey}_content`}\n                    onChange={() => account?.actions.updateFilterList(mutelist.pubkey, !mutelist.content, mutelist.trending)}\n                    checked={mutelist.content}\n                  />\n                </div>\n                <div class={styles.filterListCheck}>\n                  <Checkbox\n                    id={`${mutelist.pubkey}_trending`}\n                    onChange={() => account?.actions.updateFilterList(mutelist.pubkey, mutelist.content, !mutelist.trending)}\n                    checked={mutelist.trending}\n                  />\n                </div>\n              </div>\n            )}\n          </For>\n        </div>\n\n        <div class={`${styles.filterListHeader} ${styles.secondFilter}`}>\n          <div>\n            {intl.formatMessage(t.moderation.table.algos)}\n          </div>\n          <div>\n            {intl.formatMessage(t.moderation.table.content)}\n            <HelpTip>\n              <span>{intl.formatMessage(t.moderation.table.contentHelp)}</span>\n            </HelpTip>\n          </div>\n          <div>\n            {intl.formatMessage(t.moderation.table.trending)}\n            <HelpTip>\n              <span>{intl.formatMessage(t.moderation.table.trendingHelp)}</span>\n            </HelpTip>\n          </div>\n        </div>\n\n        <div>\n          <For each={algorithms()}>\n            {algo => (\n              <div class={styles.filterListItem}>\n                <div class={styles.filterListName} title={algo.name}>\n                  <div class={styles.algoLogo}></div>\n                  <A href={`/mutelist/${algo.name}`}>\n                    {\n                      // @ts-ignore\n                      intl.formatMessage(t.moderation.algos[algo.name])\n                    }\n                  </A>\n                </div>\n                <div class={styles.filterListCheck}>\n                  <Checkbox\n                    id={`${algo.name}_content`}\n                    onChange={() => settings?.actions.modifyContentModeration(algo.name, !algo.content, algo.trending)}\n                    checked={algo.content}\n                  />\n                </div>\n                <div class={styles.filterListCheck}>\n                  <Checkbox\n                    id={`${algo.name}_trending`}\n                    onChange={() => settings?.actions.modifyContentModeration(algo.name, algo.content, !algo.trending)}\n                    checked={algo.trending}\n                  />\n                </div>\n              </div>\n            )}\n          </For>\n        </div>\n      </div>\n\n      <div class={styles.settingsContentBorderless}>\n        <div class={styles.settingsCaption}>\n          {intl.formatMessage(t.moderation.searchFilteredAccount)}\n        </div>\n\n        <div class={styles.moderationDescription}>\n          {intl.formatMessage(t.moderation.searchForFiltered)}\n        </div>\n\n        <div class={styles.searchFilteredAccount}>\n          <div\n            class={styles.npubInput}\n          >\n            <input\n              ref={searchFilteredAccount}\n              type=\"text\"\n              placeholder={intl.formatMessage(tPlaceholders.searchByNpub)}\n              class={styles.noIcon}\n              onChange={() => onSearchFilteredAccount()}\n            />\n            <button onClick={() => onSearchFilteredAccount()}>\n              <div class={styles.searchIcon}></div>\n            </button>\n          </div>\n        </div>\n\n        <Show when={isSearching()}>\n          <Show when={reasons().length > 0}>\n            <div class={styles.fiterSearchCaption}>\n              This npub is included in:\n            </div>\n          </Show>\n          <div class={styles.filterListTable}>\n            <For each={reasons()}\n              fallback={\n                <div class={styles.fiterSearchCaption}>\n                  This npub is not included in any of your filter lists.\n                </div>\n              }\n            >\n              {reason => (\n                <Show\n                  when={specialAlgos.includes(reason)}\n                  fallback={(\n                    <div class={styles.filterListItem}>\n                      <div class={styles.filterListName} title={reason}>\n                        <A href={app?.actions.profileLink(reason) || ''} class={styles.avatar}>\n                          <Avatar\n                            user={users[reason || '']}\n                            size='xs'\n                          />\n                        </A>\n                        <span>\n                          <Show when={reason !== account?.publicKey} fallback={intl.formatMessage(t.moderation.algos.my)}>\n                            {intl.formatMessage(t.moderation.moderationItem, { name: userName(users[reason || '']) })}\n                          </Show>\n                        </span>\n                      </div>\n                    </div>\n                  )}\n                >\n                  <div class={styles.filterListItem}>\n                    <div class={styles.filterListName} title={reason}>\n                      <div class={styles.algoLogo}></div>\n                      {\n                        // @ts-ignore\n                        intl.formatMessage(t.moderation.algos[reason])\n                      }\n                    </div>\n                  </div>\n                </Show>\n              )}\n            </For>\n          </div>\n        </Show>\n\n        <div class={styles.settingsCaption}>\n          {intl.formatMessage(t.moderation.allowList)}\n        </div>\n\n        <div class={styles.moderationDescription}>\n          {intl.formatMessage(t.moderation.allowListsDescription)}\n        </div>\n\n        <div class={styles.searchFilteredAccount}>\n          <div\n            class={styles.npubInput}\n          >\n            <input\n              ref={allowlistInput}\n              type=\"text\"\n              placeholder={intl.formatMessage(tPlaceholders.addNpub)}\n              class={styles.noIcon}\n              onChange={() => onAddToAllowlist()}\n            />\n            <button onClick={() => onAddToAllowlist()}>\n              <div class={styles.addIconBig}></div>\n            </button>\n          </div>\n        </div>\n\n        <div>\n          <For each={account?.allowlist}>\n            {pubkey => (\n              <button class={styles.allowlistItem} onClick={() => onRemoveFromAllowlist(pubkey)}>\n                <div class={styles.allowlistEntry}>\n                  <div class={styles.allowlistInfo} title={hexToNpub(pubkey)}>\n                    <div class={styles.avatar}>\n                      <Avatar\n                        user={users[pubkey || '']}\n                        size='xs'\n                      />\n                    </div>\n                    <div class={styles.allowlistUserInfo}>\n                      <div class={styles.firstLine}>\n                        <span>\n                          {userName(users[pubkey || ''])}\n                        </span>\n\n                        <VerificationCheck user={users[pubkey || '']} />\n\n                        <Show\n                          when={users[pubkey || '']?.nip05}\n                        >\n                          <span\n                            class={styles.verification}\n                            title={users[pubkey || '']?.nip05}\n                          >\n                            {nip05Verification(users[pubkey || ''])}\n                          </span>\n                        </Show>\n                      </div>\n                      <div class={styles.npub}>\n                        {hexToNpub(pubkey)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class={styles.remove}>\n                  <div class={styles.closeIcon}></div> {intl.formatMessage(tActions.removeRelay)}\n                </div>\n              </button>\n            )}\n          </For>\n        </div>\n      </div>\n\n    </div>);\n}\n\nexport default Moderation;\n"],"names":["Moderation","intl","useIntl","account","useAccountContext","settings","useSettingsContext","search","useSearchContext","app","useAppContext","searchFilteredAccount","allowlistInput","isSearching","setIsSearching","createSignal","onSearchFilteredAccount","value","startsWith","actions","findFilteredUserByNpub","onAddToAllowlist","addToAllowlist","npubToHex","onRemoveFromAllowlist","pubkey","removeFromAllowlist","publicKey","mutelists","filter","m","algorithms","contentModeration","x","name","map","content","scopes","includes","contentScope","trending","trendingScope","my","find","users","setUsers","createStore","reasons","filteringReasons","createEffect","userMutelists","rand","Math","floor","random","length","subId","APP_ID","unsub","subsTo","onEvent","_","kind","Kind","Metadata","u","convertToUser","onEose","getUserProfiles","allowList","allowlist","r","specialAlgos","_el$","_tmpl$4","_el$3","firstChild","_el$4","_el$5","_el$7","nextSibling","_el$8","_el$10","_el$11","_el$12","_el$14","_el$16","_el$17","_el$18","_el$19","_el$20","_el$21","_el$22","_el$23","_el$25","_el$27","_el$28","_el$29","_el$30","_el$31","_el$32","_el$33","_el$34","_el$35","_el$38","_el$39","_el$40","_el$41","_el$42","_el$43","_el$44","_el$45","_$insert","_$createComponent","PageTitle","title","formatMessage","t","moderation","PageCaption","children","A","href","index","_el$2","_tmpl$","Checkbox","id","label","onChange","setApplyContentModeration","applyContentModeration","checked","applyFiltering","HelpTip","zIndex","_el$6","_tmpl$2","description","shortDescription","Show","when","_el$9","_$effect","_$className","styles","veil","table","_el$13","contentHelp","_el$15","trendingHelp","avatar","Avatar","user","activeUser","size","algos","updateFilterList","disabled","For","each","mutelist","_el$46","_tmpl$5","_el$47","_el$48","_el$49","profileLink","npub","moderationItem","userName","_p$","_v$27","filterListItem","_v$28","filterListName","_v$29","_v$30","filterListCheck","_v$31","_$setAttribute","undefined","_el$24","_el$26","algo","_el$50","_tmpl$6","_el$51","_el$52","_el$53","_el$54","modifyContentModeration","_v$32","_v$33","_v$34","_v$35","algoLogo","_v$36","_v$37","searchForFiltered","addEventListener","_ref$","_$use","$$click","_el$36","_tmpl$3","fiterSearchCaption","_el$37","fallback","_el$55","_tmpl$7","reason","_el$59","_tmpl$9","_el$60","_el$61","_v$41","_v$42","_el$56","_tmpl$8","_el$57","_el$58","_v$38","_v$39","_v$40","filterListTable","allowListsDescription","_ref$2","_el$62","_tmpl$10","_el$63","_el$64","_el$65","_el$66","_el$67","_el$68","_el$70","_el$71","_el$72","VerificationCheck","nip05","_el$69","nip05Verification","_v$43","verification","_v$44","hexToNpub","tActions","removeRelay","_v$45","allowlistItem","_v$46","allowlistEntry","_v$47","allowlistInfo","_v$48","_v$49","_v$50","allowlistUserInfo","_v$51","firstLine","_v$52","_v$53","remove","_v$54","closeIcon","_v$","settingsContent","_v$2","settingsCaption","_v$3","moderationDescription","_v$4","_v$5","filterListHeader","_v$6","_v$7","_v$8","_v$9","_v$10","_v$11","secondFilter","_v$12","settingsContentBorderless","_v$13","_v$14","_v$15","_v$16","npubInput","_v$17","tPlaceholders","searchByNpub","_v$18","noIcon","_v$19","searchIcon","_v$20","_v$21","_v$22","_v$23","_v$24","addNpub","_v$25","_v$26","addIconBig","_$delegateEvents"],"mappings":"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"}