{"version":3,"file":"DirectMessages-5dc1cc22.js","sources":["../../src/components/DirectMessages/DirectMessageContact.tsx","../../src/components/DirectMessages/DirectMessageParsedContent.tsx","../../src/components/Cashu/Cashu.tsx","../../src/components/DirectMessages/DirectMessageContent.tsx","../../src/components/DirectMessages/DirectMessageConversation.tsx","../../src/components/DirectMessages/DirectMessagesComposer.tsx","../../src/pages/DirectMessages.tsx"],"sourcesContent":["import { Component, createEffect, Show } from 'solid-js';\nimport { hookForDev } from '../../lib/devTools';\n\nimport styles from './DirectMessages.module.scss';\nimport Avatar from '../Avatar/Avatar';\nimport { nip05Verification, userName } from '../../stores/profile';\nimport { DMContact } from '../../megaFeeds';\nimport { date } from '../../lib/dates';\n\nconst DirectMessageContact: Component<{\n  id?: string,\n  dmContact: DMContact,\n  isSelected?: boolean,\n  onSelect?: (pubkey: string) => void,\n}> = (props) => {\n\n  const user = () => props.dmContact.user;\n  const contactInfo = () => props.dmContact.dmInfo;\n  const count = () => props.dmContact.dmInfo.cnt;\n\n  const now = () => Math.floor((new Date()).getTime() / 1000);\n\n  return (\n    <button\n      class={`${styles.directMessageContact} ${props.isSelected ? styles.selected : ''}`}\n      onClick={() => props.onSelect && props.onSelect(user().pubkey)}\n      data-user={user().pubkey}\n    >\n      <Avatar user={user()} size=\"md\" />\n      <div class={styles.senderInfo}>\n        <div class={styles.firstLine}>\n          <div class={styles.senderName}>\n            {userName(user())}\n          </div>\n          <Show when={contactInfo().latest_at > 0}>\n            <div class={styles.dotSeparator}></div>\n            <div class={styles.lastMessageTime}>\n              {date(contactInfo().latest_at || 0,'narrow', now()).label}\n            </div>\n          </Show>\n        </div>\n        <div class={styles.secondLine}>\n          {nip05Verification(user())}\n        </div>\n      </div>\n      <Show when={count() > 0}>\n        <div class={styles.senderBubble}>\n          {count()}\n        </div>\n      </Show>\n    </button>\n  )\n}\n\nexport default hookForDev(DirectMessageContact);\n","import { Component, createSignal, For, JSXElement, Match, onMount, Show, Switch } from 'solid-js';\nimport { hookForDev } from '../../lib/devTools';\n\nimport styles from './DirectMessages.module.scss';\nimport { nip19 } from '../../lib/nTools';\nimport Avatar from '../Avatar/Avatar';\nimport { nip05Verification, truncateNpub, userName } from '../../stores/profile';\nimport { DMContact } from '../../megaFeeds';\nimport { date } from '../../lib/dates';\nimport { DirectMessage, PrimalArticle } from '../../types/primal';\nimport { useDMContext } from '../../contexts/DMContext';\nimport { useAccountContext } from '../../contexts/AccountContext';\nimport { A } from '@solidjs/router';\nimport { useAppContext } from '../../contexts/AppContext';\nimport { decodeIdentifier, hexToNpub } from '../../lib/keys';\nimport { isDev, msgHasCashu, msgHasInvoice } from '../../utils';\nimport { hashtagCharsRegex, Kind, linebreakRegex, lnUnifiedRegex, specialCharsRegex, urlExtractRegex } from '../../constants';\nimport { createStore } from 'solid-js/store';\nimport { NoteContent } from '../ParsedNote/ParsedNote';\nimport { isInterpunction, isUrl, isImage, isMp4Video, isOggVideo, isWebmVideo, isYouTube, isSpotify, isTwitch, isMixCloud, isSoundCloud, isAppleMusic, isWavelake, getLinkPreview, isNoteMention, isUserMention, isAddrMention, isTagMention, isHashtag, isCustomEmoji, isUnitifedLnAddress, isLnbc } from '../../lib/notes';\nimport { generatePrivateKey } from '../../lib/nTools';\nimport { useMediaContext } from '../../contexts/MediaContext';\nimport NoteImage from '../NoteImage/NoteImage';\nimport { getMediaUrl as getMediaUrlDefault } from \"../../lib/media\";\nimport LinkPreview from '../LinkPreview/LinkPreview';\nimport ArticleCompactPreview from '../ArticlePreview/ArticleCompactPreview';\nimport EmbeddedNote from '../EmbeddedNote/EmbeddedNote';\nimport { logError } from '../../lib/logger';\nimport MentionedUserLink from '../Note/MentionedUserLink/MentionedUserLink';\nimport Lnbc from '../Lnbc/Lnbc';\n\n\nconst groupGridLimit = 7;\n\nconst DirectMessageParsedContent: Component<{\n  id?: string,\n  content: string,\n  ignoreMedia?: boolean,\n  noLinks?: string,\n  noPreviews?: boolean,\n}> = (props) => {\n  const account = useAccountContext();\n  const app = useAppContext();\n  const media = useMediaContext();\n  const dms = useDMContext();\n\n  // const [tokens, setTokens] = createStore<string[]>([]);\n  const [content, setContent] = createStore<NoteContent[]>([]);\n\n  let lastSignificantContent = 'text';\n  let isAfterEmbed = false;\n  let totalLinks = 0;\n\n  onMount(() => {\n    generateContent();\n  });\n\n  const noteWidth = () => 514;\n\n  const updateContent = (contentArray: NoteContent[], type: string, token: string, meta?: Record<string, any>) => {\n    const len = contentArray.length;\n    const index = contentArray.length -1\n\n    if (len > 0 && contentArray[len -1].type === type) {\n\n      setContent(index, 'tokens' , (els) => [...els, token]);\n\n      meta && setContent(index, 'meta' , () => ({ ...meta }));\n\n      return;\n    }\n\n    setContent(len, () => ({ type, tokens: [token], meta }));\n  }\n\n  const generateContent = () => {\n\n    const tokens = parseContent();\n\n    for (let i=0; i<tokens.length; i++) {\n      const token = tokens[i];\n\n      parseToken(token);\n    }\n\n    // Check if the last media is the last meaningfull content in the note\n    // And if so, make it the actual last content\n    // @ts-ignore\n    const lastMediaIndex = content.findLastIndex(c => c.type !== 'text');\n\n    const lastContent = content[content.length - 1];\n\n    if (lastMediaIndex === content.length - 2 && lastContent.type === 'text' && lastContent.tokens.every(t => [' ', ''].includes(t))) {\n      setContent((cont) => cont.slice(0, cont.length - 1));\n    }\n  };\n\n  const parseContent = () => {\n    const content = props.content.replace(linebreakRegex, ' __LB__ ').replace(/\\s+/g, ' __SP__ ');\n\n    const tks = content.split(/[\\s]+/);\n\n    return tks;\n  }\n\n  const parseToken = (token: string) => {\n    if (token === '__LB__') {\n      if (isAfterEmbed) {\n        return;\n      }\n\n      updateContent(content, 'linebreak', token);\n      lastSignificantContent = 'LB';\n      return;\n    }\n\n    if (token === '__SP__') {\n      if (!['image', 'video', 'LB'].includes(lastSignificantContent)) {\n        updateContent(content, 'text', ' ');\n      }\n      return;\n    }\n\n    isAfterEmbed = false;\n\n    if (isInterpunction(token)) {\n      lastSignificantContent = 'text';\n      updateContent(content, 'text', token);\n      return;\n    }\n\n    if (isUrl(token)) {\n      const index = token.indexOf('http');\n\n      if (index > 0) {\n        const prefix = token.slice(0, index);\n\n        const matched = (token.match(urlExtractRegex) || [])[0];\n\n        if (matched) {\n          const suffix = token.substring(matched.length + index, token.length);\n\n          parseToken(prefix);\n          parseToken(matched);\n          parseToken(suffix);\n          return;\n        } else {\n          parseToken(prefix);\n          parseToken(token.slice(index));\n          return;\n        }\n      }\n\n      if (!props.ignoreMedia) {\n        if (isImage(token)) {\n          removeLinebreaks('image');\n          isAfterEmbed = true;\n          lastSignificantContent = 'image';\n          updateContent(content, 'image', token);\n          return;\n        }\n\n        if (isMp4Video(token)) {\n          removeLinebreaks('video');\n          isAfterEmbed = true;\n          lastSignificantContent = 'video';\n          updateContent(content, 'video', token, { videoType: 'video/mp4'});\n          return;\n        }\n\n        if (isOggVideo(token)) {\n          removeLinebreaks('video');\n          isAfterEmbed = true;\n          lastSignificantContent = 'video';\n          updateContent(content, 'video', token, { videoType: 'video/ogg'});\n          return;\n        }\n\n        if (isWebmVideo(token)) {\n          removeLinebreaks('video');\n          isAfterEmbed = true;\n          lastSignificantContent = 'video';\n          updateContent(content, 'video', token, { videoType: 'video/webm'});\n          return;\n        }\n\n        if (isYouTube(token)) {\n          removeLinebreaks('youtube');\n          isAfterEmbed = true;\n          lastSignificantContent = 'youtube';\n          updateContent(content, 'youtube', token);\n          return;\n        }\n\n        if (isSpotify(token)) {\n          removeLinebreaks('spotify');\n          isAfterEmbed = true;\n          lastSignificantContent = 'spotify';\n          updateContent(content, 'spotify', token);\n          return;\n        }\n\n        if (isTwitch(token)) {\n          removeLinebreaks('twitch');\n          isAfterEmbed = true;\n          lastSignificantContent = 'twitch';\n          updateContent(content, 'twitch', token);\n          return;\n        }\n\n        if (isMixCloud(token)) {\n          removeLinebreaks('mixcloud');\n          isAfterEmbed = true;\n          lastSignificantContent = 'mixcloud';\n          updateContent(content, 'mixcloud', token);\n          return;\n        }\n\n        if (isSoundCloud(token)) {\n          removeLinebreaks('soundcloud');\n          isAfterEmbed = true;\n          lastSignificantContent = 'soundcloud';\n          updateContent(content, 'soundcloud', token);\n          return;\n        }\n\n        if (isAppleMusic(token)) {\n          removeLinebreaks('applemusic');\n          isAfterEmbed = true;\n          lastSignificantContent = 'applemusic';\n          updateContent(content, 'applemusic', token);\n          return;\n        }\n\n        if (isWavelake(token)) {\n          removeLinebreaks('wavelake');\n          isAfterEmbed = true;\n          lastSignificantContent = 'wavelake';\n          updateContent(content, 'wavelake', token);\n          return;\n        }\n      }\n\n      if (props.noLinks === 'text') {\n        lastSignificantContent = 'text';\n        updateContent(content, 'text', token);\n        return;\n      }\n\n      const preview = getLinkPreview(token);\n\n      const hasMinimalPreviewData = !props.noPreviews &&\n        preview &&\n        preview.url &&\n        ((!!preview.description && preview.description.length > 0) ||\n          !preview.images?.some((x:any) => x === '') ||\n          !!preview.title\n        );\n\n      if (hasMinimalPreviewData) {\n        removeLinebreaks('link');\n        updateContent(content, 'link', token, { preview });\n      } else {\n        updateContent(content, 'link', token);\n      }\n\n      lastSignificantContent = 'link';\n      isAfterEmbed = false;\n      totalLinks++;\n      return;\n    }\n\n    if (isNoteMention(token)) {\n      removeLinebreaks('notemention');\n      lastSignificantContent = 'notemention';\n      isAfterEmbed = true;\n      updateContent(content, 'notemention', token);\n      return;\n    }\n\n    if (isUserMention(token)) {\n      lastSignificantContent = 'usermention';\n      updateContent(content, 'usermention', token);\n      return;\n    }\n\n    if (isAddrMention(token)) {\n      lastSignificantContent = 'comunity';\n      updateContent(content, 'comunity', token);\n      return;\n    }\n\n    if (isTagMention(token)) {\n      lastSignificantContent = 'tagmention';\n      updateContent(content, 'tagmention', token);\n      return;\n    }\n\n    if (isHashtag(token)) {\n      lastSignificantContent = 'hashtag';\n      updateContent(content, 'hashtag', token);\n      return;\n    }\n\n    if (isCustomEmoji(token)) {\n      lastSignificantContent = 'emoji';\n      updateContent(content, 'emoji', token);\n      return;\n    }\n\n    if (isUnitifedLnAddress(token)) {\n      lastSignificantContent = 'lnbc';\n\n      const match = token.match(lnUnifiedRegex);\n\n      let lnbcToken = match?.find(m => m.startsWith('lnbc'));\n\n      if (lnbcToken) {\n        removeLinebreaks('lnbc');\n        updateContent(content, 'lnbc', lnbcToken);\n      }\n      else {\n        updateContent(content, 'text', token);\n      }\n\n      return;\n    }\n\n    if (isLnbc(token)) {\n      lastSignificantContent = 'lnbc';\n\n      removeLinebreaks('lnbc');\n      updateContent(content, 'lnbc', token);\n      return;\n    }\n\n    lastSignificantContent = 'text';\n    updateContent(content, 'text', token);\n    return;\n  };\n\n\n  const removeLinebreaks = (type: string) => {\n    if (lastSignificantContent === 'LB') {\n      const lastIndex = content.length - 1;\n      const lastGroup = content[lastIndex];\n\n      setContent(lastIndex, () => ({\n        type: lastGroup.type,\n        tokens: [],\n        meta: {\n          ...lastGroup.meta,\n          removedBy: type,\n          removedTokens: [...lastGroup.tokens],\n        },\n      }));\n    }\n  };\n\n  const renderLinebreak = (item: NoteContent) => {\n\n    let tokens = item.meta?.removedBy === 'link' && totalLinks > 1 ?\n      (item.meta?.removedTokens || []) :\n      item.tokens;\n\n    // Allow max consecutive linebreak\n    const len = Math.min(2, tokens.length);\n\n    const lineBreaks = Array(len).fill(<br/>)\n\n    return <For each={lineBreaks}>{_ => <br/>}</For>\n  };\n\n  const renderText = (item: NoteContent) => {\n    let tokens = [];\n\n    for (let i=0;i<item.tokens.length;i++) {\n      const token = item.tokens[i];\n      tokens.push(token)\n    }\n\n    const text = tokens.join(' ').replaceAll('&lt;', '<').replaceAll('&gt;', '>');\n\n    return <>{text}</>;\n  };\n\n  const renderImage = (item: NoteContent, index?: number) => {\n\n    const groupCount = item.tokens.length;\n    const imageGroup = generatePrivateKey();\n\n    // Remove bottom margin if media is the last thing in the note\n    const lastClass = index === content.length-1 ?\n      'noBottomMargin' : '';\n\n    if (groupCount === 1) {\n\n      const token = item.tokens[0];\n      let image = media?.actions.getMedia(token, 'o');\n      const url = image?.media_url || getMediaUrlDefault(token) || token;\n\n      let imageThumb =\n        media?.actions.getMedia(token, 'm') ||\n        media?.actions.getMedia(token, 'o') ||\n        token;\n\n      return <NoteImage\n        class={`noteimage ${lastClass}`}\n        src={url}\n        isDev={isDev()}\n        media={image}\n        mediaThumb={imageThumb}\n        width={514}\n        imageGroup={`${imageGroup}`}\n      />\n    }\n\n    const gridClass = groupCount < groupGridLimit ? `grid-${groupCount}` : 'grid-large';\n\n    return <div class={`imageGrid ${gridClass}`}>\n      <For each={item.tokens}>\n        {(token, index) => {\n\n          let image = media?.actions.getMedia(token, 'o');\n          const url = image?.media_url || getMediaUrlDefault(token) || token;\n\n          let imageThumb =\n            media?.actions.getMedia(token, 'm') ||\n            media?.actions.getMedia(token, 'o') ||\n            token;\n\n          return <NoteImage\n            class={`noteimage_gallery cell_${index()+1}`}\n            src={url}\n            isDev={isDev()}\n            media={image}\n            width={514}\n            mediaThumb={imageThumb}\n            imageGroup={`${imageGroup}`}\n            plainBorder={true}\n            forceHeight={500}\n          />\n        }}\n      </For>\n    </div>\n  }\n\n  const renderVideo = (item: NoteContent, index?: number) => {\n    // Remove bottom margin if media is the last thing in the note\n    const lastClass = index === content.length-1 ?\n      'noBottomMargin' : '';\n\n    return <For each={item.tokens}>{\n      (token) => {\n\n        let mVideo = media?.actions.getMedia(token, 'o');\n\n        let h: number | undefined = undefined;\n        let w: number | undefined = undefined;\n\n        if (mVideo) {\n          const margins = 20;\n          const ratio = mVideo.w / mVideo.h;\n          h = ((noteWidth() - 2*margins) / ratio);\n          w = h > 680 ? 680 * ratio : noteWidth() - 2*margins;\n          h = h > 680 ? 680 : h;\n        }\n\n        let klass = mVideo ? 'w-cen' : 'w-max';\n\n        if (isDev() && !mVideo) {\n          klass += ' redBorder';\n        }\n\n        klass += ' embeddedContent';\n        klass += ` ${lastClass}`;\n\n        const video = <video\n          class={klass}\n          width={w}\n          height={h}\n          controls\n          muted={true}\n          loop={true}\n          playsinline={true}\n        >\n          <source src={token} type={item.meta?.videoType} />\n        </video>;\n\n        media?.actions.addVideo(video as HTMLVideoElement);\n\n        return video;\n      }\n    }</For>;\n  }\n\n  const renderYouTube = (item: NoteContent, index?: number) => {\n    // Remove bottom margin if media is the last thing in the note\n    const lastClass = index === content.length-1 ?\n      'noBottomMargin' : '';\n\n    return <For each={item.tokens}>\n      {(token) => {\n        const youtubeId = isYouTube(token) && RegExp.$1;\n\n        return <iframe\n          class={`w-max embeddedContent ${lastClass}`}\n          src={`https://www.youtube.com/embed/${youtubeId}`}\n          title=\"YouTube video player\"\n          // @ts-ignore no property\n          key={youtubeId}\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n          allowFullScreen\n        ></iframe>;\n      }}\n    </For>\n  };\n\n  const renderSpotify = (item: NoteContent, index?: number) => {\n    // Remove bottom margin if media is the last thing in the note\n    const lastClass = index === content.length-1 ?\n      'noBottomMargin' : '';\n\n    return <For each={item.tokens}>\n      {(token) => {\n\n        const convertedUrl = token.replace(/\\/(track|album|playlist|episode)\\/([a-zA-Z0-9]+)/, \"/embed/$1/$2\");\n\n        return <iframe\n          class={`embeddedContent ${lastClass}`}\n          style=\"borderRadius: 12\"\n          src={convertedUrl}\n          width=\"100%\"\n          height=\"352\"\n          // @ts-ignore no property\n          frameBorder=\"0\"\n          allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n          loading=\"lazy\"\n        ></iframe>;\n      }}\n    </For>\n  };\n\n  const renderTwitch = (item: NoteContent, index?: number) => {\n    // Remove bottom margin if media is the last thing in the note\n    const lastClass = index === content.length-1 ?\n      'noBottomMargin' : '';\n\n    return <For each={item.tokens}>\n      {(token) => {\n\n        const channel = token.split(\"/\").slice(-1);\n\n        const args = `?channel=${channel}&parent=${window.location.hostname}&muted=true`;\n\n        return <iframe\n          class={`embeddedContent ${lastClass}`}\n          src={`https://player.twitch.tv/${args}`}\n          // @ts-ignore no property\n          className=\"w-max\"\n          allowFullScreen\n        ></iframe>;\n      }}\n    </For>\n  };\n\n  const renderMixCloud = (item: NoteContent, index?: number) => {\n    // Remove bottom margin if media is the last thing in the note\n    const lastClass = index === content.length-1 ?\n      'noBottomMargin' : '';\n\n    return <For each={item.tokens}>\n      {(token) => {\n\n        const feedPath = (isMixCloud(token) && RegExp.$1) + \"%2F\" + (isMixCloud(token) && RegExp.$2);\n\n        return <div class={`embeddedContent ${lastClass}`}>\n          <iframe\n            title=\"SoundCloud player\"\n            width=\"100%\"\n            height=\"120\"\n            // @ts-ignore no property\n            frameBorder=\"0\"\n            src={`https://www.mixcloud.com/widget/iframe/?hide_cover=1&feed=%2F${feedPath}%2F`}\n          ></iframe>\n        </div>;\n      }}\n    </For>\n  };\n\n  const renderSoundCloud = (item: NoteContent, index?: number) => {\n    // Remove bottom margin if media is the last thing in the note\n    const lastClass = index === content.length-1 ?\n      'noBottomMargin' : '';\n\n    return <For each={item.tokens}>\n      {(token) => {\n\n        return <iframe\n          class={`embeddedContent ${lastClass}`}\n          width=\"100%\"\n          height=\"166\"\n          // @ts-ignore no property\n          scrolling=\"no\"\n          allow=\"autoplay\"\n          src={`https://w.soundcloud.com/player/?url=${token}`}\n        ></iframe>;\n      }}\n    </For>\n  };\n\n  const renderAppleMusic = (item: NoteContent, index?: number) => {\n    // Remove bottom margin if media is the last thing in the note\n    const lastClass = index === content.length-1 ?\n      'noBottomMargin' : '';\n\n    return <For each={item.tokens}>\n      {(token) => {\n\n        const convertedUrl = token.replace(\"music.apple.com\", \"embed.music.apple.com\");\n        const isSongLink = /\\?i=\\d+$/.test(convertedUrl);\n\n        return <iframe\n          class={`embeddedContent ${lastClass}`}\n          allow=\"autoplay *; encrypted-media *; fullscreen *; clipboard-write\"\n          // @ts-ignore no property\n          frameBorder=\"0\"\n          height={`${isSongLink ? 175 : 450}`}\n          style=\"width: 100%; maxWidth: 660; overflow: hidden; background: transparent;\"\n          sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation\"\n          src={convertedUrl}\n        ></iframe>;\n      }}\n    </For>\n  };\n\n  const renderWavelake = (item: NoteContent, index?: number) => {\n    // Remove bottom margin if media is the last thing in the note\n    const lastClass = index === content.length-1 ?\n      'noBottomMargin' : '';\n\n    return <For each={item.tokens}>\n      {(token) => {\n\n        const convertedUrl = token.replace(/(?:player\\.|www\\.)?wavlake\\.com/, \"embed.wavlake.com\");\n\n        return <iframe\n          class={`embeddedContent ${lastClass}`}\n          style=\"borderRadius: 12\"\n          src={convertedUrl}\n          width=\"100%\"\n          height=\"380\"\n          // @ts-ignore no property\n          frameBorder=\"0\"\n          loading=\"lazy\"\n        ></iframe>;\n      }}\n    </For>\n  };\n\n  const renderLinks = (item: NoteContent, index?: number) => {\n    return <For each={item.tokens}>\n      {(token) => {\n\n        if (item.meta && item.meta.preview && totalLinks < 2) {\n          return (\n            <LinkPreview\n              preview={item.meta.preview}\n              isLast={index === content.length-1}\n            />\n          );\n        }\n\n        return (\n          <span data-url={token}>\n            <a link href={token} target=\"_blank\" >{token}</a>\n          </span>\n        );\n      }}\n    </For>\n  };\n\n  const renderComunityMention = (item: NoteContent, index?: number) => {\n\n    return <For each={item.tokens}>\n      {(token) => {\n\n        let [_, id] = token.split(':');\n\n        if (!id) {\n          return <>{token}</>;\n        }\n\n        let end = '';\n\n        let match = specialCharsRegex.exec(id);\n\n        if (match) {\n          const i = match.index;\n          end = id.slice(i);\n          id = id.slice(0, i);\n        }\n\n        const unknownMention = (nid: string) => {\n          return <A href={`/e/${nid}`}>{token}</A>\n        }\n\n        const decoded = decodeIdentifier(id);\n        const reEncoded = nip19.naddrEncode({\n          // @ts-ignore\n          kind: decoded.data.kind,\n          // @ts-ignore\n          pubkey: decoded.data.pubkey,\n          // @ts-ignore\n          identifier: decoded.data.identifier || '',\n        });\n        const mentionedArticles = dms?.referecedReads;\n\n        if (decoded.type !== 'naddr' || !mentionedArticles) {\n          return unknownMention(reEncoded);\n        }\n\n        const mention = mentionedArticles[reEncoded];\n\n        if (!mention) {\n          return unknownMention(id);\n        }\n\n        return renderLongFormMention(mention, index);\n\n      }}\n    </For>\n  }\n\n  const renderLongFormMention = (mention: PrimalArticle | undefined, index?: number) => {\n\n    if(!mention) return <></>;\n\n    return (\n      <div class={styles.articlePreview}>\n        <ArticleCompactPreview\n          article={mention}\n          hideFooter={true}\n          hideContext={true}\n        />\n      </div>);\n  };\n\n  const renderNoteMention = (item: NoteContent, index?: number) => {\n\n    return <For each={item.tokens}>\n      {(token) => {\n\n        let [_, id] = token.split(':');\n\n\n        if (!id) {\n          return <>{token}</>;\n        }\n\n        let end = '';\n\n        let match = specialCharsRegex.exec(id);\n\n        if (match) {\n          const i = match.index;\n          end = id.slice(i);\n          id = id.slice(0, i);\n        }\n\n        let link = <span>{token}</span>;\n\n        try {\n          const eventId = nip19.decode(id).data as string | nip19.EventPointer;\n          let kind = typeof eventId === 'string' ? Kind.Text : eventId.kind;\n          const hex = typeof eventId === 'string' ? eventId : eventId.id;\n          const noteId = nip19.noteEncode(hex);\n\n          const path = `/e/${noteId}`;\n\n          if (props.noLinks === 'links') {\n            return <span class='linkish'>{token}</span>;\n          }\n\n          const mentionedNotes = { ...(dms?.referecedNotes || {}) };\n\n          const mentionedArticles = { ...(dms?.referecedReads || {}) }\n\n          const mentionedHighlights: Record<string, any> = {}\n\n          const mentionedUsers = { ...(dms?.referecedUsers || {}) }\n\n          if (kind === undefined) {\n            let f: any = mentionedNotes && mentionedNotes[hex];\n            if (!f) {\n              const reEncoded = nip19.naddrEncode({\n                // @ts-ignore\n                kind: eventId.kind,\n                // @ts-ignore\n                pubkey: eventId.pubkey,\n                // @ts-ignore\n                identifier: eventId.identifier || '',\n              });\n              f = mentionedArticles && mentionedArticles[reEncoded];\n            }\n            if (!f) {\n              f = mentionedHighlights && mentionedHighlights[hex];\n            }\n            kind = f?.post.kind || f?.msg?.kind || f.event.kind || Kind.Text;\n          }\n\n          if (typeof kind !== 'number') return link;\n\n          if ( [Kind.Text].includes(kind)) {\n            if (!props.noLinks) {\n              const ment = mentionedNotes && mentionedNotes[hex];\n\n              link = <A href={path}>{token}</A>;\n\n              if (ment) {\n                if ([Kind.LongForm, Kind.LongFormShell].includes(ment.post.kind)) {\n                  // @ts-ignore\n                  link = renderLongFormMention(ment, index)\n                }\n                else {\n                  link = <div>\n                    <EmbeddedNote\n                      note={ment}\n                      mentionedUsers={mentionedUsers || {}}\n                      isLast={index === content.length-1}\n                      // alternativeBackground={props.altEmbeds}\n                      // footerSize={props.footerSize}\n                      hideFooter={true}\n                      // embedLevel={props.embedLevel}\n                      // rootNote={rn}\n                    />\n                  </div>;\n                }\n              }\n            }\n          }\n\n          if ([Kind.LongForm, Kind.LongFormShell].includes(kind)) {\n\n            if (!props.noLinks) {\n              const reEncoded = nip19.naddrEncode({\n                // @ts-ignore\n                kind: eventId.kind,\n                // @ts-ignore\n                pubkey: eventId.pubkey,\n                // @ts-ignore\n                identifier: eventId.identifier || '',\n              });\n              const ment = mentionedArticles && mentionedArticles[reEncoded];\n\n              link = <A href={path}>{token}</A>;\n\n              if (ment) {\n                // @ts-ignore\n                link = renderLongFormMention(ment, index);\n              }\n            }\n          }\n\n          if (kind === Kind.Highlight) {\n            const ment = mentionedHighlights && mentionedHighlights[hex];\n\n            link = <div class={styles.mentionedHighlight}>\n              {ment?.event?.content}\n            </div>;\n          }\n\n        } catch (e) {\n          logError('ERROR rendering note mention', e);\n          link = <span class={styles.error}>{token}</span>;\n        }\n\n        return link;}}\n    </For>\n  };\n\n  const renderUserMention = (item: NoteContent) => {\n    return <For each={item.tokens}>\n      {(token) => {\n        let [nostr, id] = token.split(':');\n\n        if (!id) {\n          return <>{token}</>;\n        }\n\n        let prefix = '';\n\n        if (nostr !== 'nostr') {\n          prefix = nostr.split('nostr')[0] || '';\n        }\n\n        let end = '';\n\n        let match = specialCharsRegex.exec(id);\n\n        if (match) {\n          const i = match.index;\n          end = id.slice(i);\n          id = id.slice(0, i);\n        }\n\n        const mentionedUsers = { ...(dms?.referecedUsers || {})}\n\n        try {\n          const profileId = nip19.decode(id).data as string | nip19.ProfilePointer;\n\n          const hex = typeof profileId === 'string' ? profileId : profileId.pubkey;\n          const npub = hexToNpub(hex);\n\n          const path = app?.actions.profileLink(npub) || '';\n\n          let user = mentionedUsers && mentionedUsers[hex];\n\n          const label = user ? userName(user) : truncateNpub(npub);\n\n          let link = <span>{prefix}@{label}{end}</span>;\n\n          if (props.noLinks === 'links') {\n            link = <>{prefix}<span class='linkish'>@{label}</span>{end}</>;\n          }\n\n          if (!props.noLinks) {\n            link = !user ?\n              <>{prefix}<A href={path}>@{label}</A>{end}</> :\n              <>{prefix}{MentionedUserLink({ user })}{end}</>;\n          }\n          return link;\n        } catch (e) {\n          return <>{prefix}<span class={styles.error}>{token}</span></>;\n        }\n      }}\n    </For>\n  };\n\n  // const renderTagMention = (item: NoteContent, index?: number) => {\n  //   return <For each={item.tokens}>\n  //     {(token) => {\n\n  //       let t = `${token}`;\n\n  //       let end = t[t.length - 1];\n\n  //       if ([',', '?', ';', '!'].some(x => end === x)) {\n  //         t = t.slice(0, -1);\n  //       } else {\n  //         end = '';\n  //       }\n\n  //       let r = parseInt(t.slice(2, t.length - 1));\n\n  //       const tag = props.note.msg.tags[r];\n\n  //       if (tag === undefined || tag.length === 0) return;\n\n  //       const mentionedNotes = { ...(dms?.referecedNotes || {}) };\n\n  //       const mentionedArticles = { ...(dms?.referecedReads || {}) };\n\n  //       const mentionedHighlights: Record<string, any> = {}\n\n  //       const mentionedUsers = { ...(dms?.referecedUsers || {}) };\n\n  //       if (\n  //         tag[0] === 'e' &&\n  //         mentionedNotes &&\n  //         mentionedNotes[tag[1]]\n  //       ) {\n  //         const hex = tag[1];\n  //         const noteId = `nostr:${nip19.noteEncode(hex)}`;\n  //         const path = `/e/${nip19.noteEncode(hex)}`;\n\n  //         let embeded = <span>{noteId}{end}</span>;\n\n  //         if (props.noLinks === 'links') {\n  //           embeded = <><span class='linkish'>@{noteId}</span>{end}</>;\n  //         }\n\n  //         if (!props.noLinks) {\n  //           const ment = mentionedNotes[hex];\n\n  //           embeded = <><A href={path}>{noteId}</A>{end}</>;\n\n  //           if (ment) {\n\n  //             embeded = <div>\n  //               <EmbeddedNote\n  //                 note={ment}\n  //                 mentionedUsers={mentionedUsers}\n  //                 hideFooter={true}\n  //                 embedLevel={0}\n  //               />\n  //               {end}\n  //             </div>;\n  //           }\n  //         }\n\n  //         return <span class=\"whole\"> {embeded}</span>;\n  //       }\n\n  //       if (\n  //         tag[0] === 'a' &&\n  //         mentionedArticles &&\n  //         mentionedArticles[tag[1]]\n  //       ) {\n\n  //         const [kind, pubkey, identifier] = tag[1].split(':');\n  //         const naddr = nip19.naddrEncode({ kind, pubkey, identifier });\n  //         const noteId = `nostr:${naddr}`;\n  //         const path = `/e/${naddr}`;\n\n  //         let embeded = <span>{noteId}{end}</span>;\n\n  //         if (props.noLinks === 'links') {\n  //           embeded = <><span class='linkish'>{noteId}</span>{end}</>;\n  //         }\n\n  //         if (!props.noLinks) {\n  //           const ment = mentionedArticles[naddr];\n\n  //           embeded = <><A href={path}>{noteId}</A>{end}</>;\n\n  //           if (ment) {\n  //             setWordsDisplayed(w => w + shortMentionInWords - 1);\n\n  //             embeded = <div>\n  //               {renderLongFormMention(ment, index)}\n  //               {end}\n  //             </div>;\n  //           }\n  //         }\n\n  //         return <span class=\"whole\"> {embeded}</span>;\n  //       }\n\n  //       if (tag[0] === 'p' && mentionedUsers && mentionedUsers[tag[1]]) {\n  //         const user = mentionedUsers[tag[1]];\n\n  //         const path = app?.actions.profileLink(user.npub) || '';\n\n  //         const label = userName(user);\n\n  //         let link = <span>@{label}{end}</span>;\n\n  //         if (props.noLinks === 'links') {\n  //           link = <><span class='linkish'>@{label}</span>{end}</>;\n  //         }\n\n  //         if (!props.noLinks) {\n  //           link = user ?\n  //             <><A href={path}>@{label}</A>{end}</> :\n  //             <>{MentionedUserLink({ user })}{end}</>;\n  //         }\n  //         return <span> {link}</span>;\n  //       }\n  //     }}\n  //   </For>\n  // };\n\n  const renderHashtag = (item: NoteContent) => {\n    return <For each={item.tokens}>\n      {(token) => {\n        let [_, term] = token.split('#');\n        let end = '';\n\n        let match = hashtagCharsRegex.exec(term);\n\n        if (match) {\n          const i = match.index;\n          end = term.slice(i);\n          term = term.slice(0, i);\n        }\n\n        const embeded = props.noLinks === 'text' ?\n          <span>#{term}</span> :\n          <A href={`/search/%23${term}`}>#{term}</A>;\n\n        return <span class=\"whole\"> {embeded}{end}</span>;\n      }}\n    </For>\n  };\n\n  const renderEmoji = (item: NoteContent) => {\n    return <For each={item.tokens}>\n      {(token) => {\n        return <>{token}</>;\n        // const emoji = token.split(':')[1];\n\n        // const tag = props.note.msg.tags.find(t => t[0] === 'emoji' && t[1] === emoji);\n\n        // if (tag === undefined || tag.length === 0) return <>{token}</>;\n\n        // const image = tag[2];\n\n        // return image ?\n        //   <span><img height={15} width={15} src={image} alt={`emoji: ${emoji}`} /></span> :\n        //   <>{token}</>;\n      }}\n    </For>\n  };\n\n  const renderLnbc = (item: NoteContent) => {\n    return <For each={item.tokens}>\n      {(token) => {\n        return <Lnbc lnbc={token} />\n      }}\n    </For>\n  }\n\n  const renderContent = (item: NoteContent, index: number) => {\n    const renderers: Record<string, (item: NoteContent, index?: number) => JSXElement> = {\n      linebreak: renderLinebreak,\n      text: renderText,\n      image: renderImage,\n      video: renderVideo,\n      youtube: renderYouTube,\n      spotify: renderSpotify,\n      twitch: renderTwitch,\n      mixcloud: renderMixCloud,\n      soundcloud: renderSoundCloud,\n      applemusic: renderAppleMusic,\n      wavelake: renderWavelake,\n      link: renderLinks,\n      notemention: renderNoteMention,\n      usermention: renderUserMention,\n      comunity: renderComunityMention,\n      // tagmention: renderTagMention,\n      hashtag: renderHashtag,\n      emoji: renderEmoji,\n      lnbc: renderLnbc,\n    }\n\n    return renderers[item.type] ?\n      renderers[item.type](item, index) :\n      <></>;\n  };\n\n\n  // const renderContent = (item: NoteContent, index: number) => {\n  //   return <>\n  //     <For each={item.tokens}>\n  //       {token => <>{token}</>}\n  //     </For>\n  //   </>\n  // }\n\n  return (\n    <div class={styles.parsedMessage}>\n      <For each={content}>\n        {(item, index) => renderContent(item, index())}\n      </For>\n    </div>\n  )\n}\n\nexport default hookForDev(DirectMessageParsedContent);\n","import { Component, createEffect, createSignal, Match, onMount, Show, Switch } from 'solid-js';\nimport { hookForDev } from '../../lib/devTools';\n\nimport styles from './Cashu.module.scss';\nimport { createStore } from 'solid-js/store';\nimport ButtonPrimary from '../Buttons/ButtonPrimary';\nimport ButtonGhost from '../Buttons/ButtonGhost';\nimport { useAppContext } from '../../contexts/AppContext';\nimport Loader from '../Loader/Loader';\nimport { logError } from '../../lib/logger';\nimport { useIntl } from '@cookbook/solid-intl';\nimport { cashuInvoice } from '../../translations';\nimport { getDecodedToken, Token, TokenEntry } from \"@cashu/cashu-ts\";\nimport { useAccountContext } from '../../contexts/AccountContext';\n\n\nconst Cashu: Component< { id?: string, token: string, alternative?: boolean, noBack?: boolean } > = (props) => {\n\n  const account = useAccountContext();\n  const app = useAppContext();\n  const intl = useIntl();\n\n  const [invoice, setInvoice] = createStore<Token>({ token: [] });\n  const [cashuSpendable, setCashuSpendable] = createSignal<boolean>(false);\n\n  const [invoiceCopied, setInvoiceCopied] = createSignal(false);\n\n  const [paymentInProgress, setPaymentInProgress] = createSignal(false);\n\n  const checkMints = async (entries: TokenEntry[]) => {\n    let statuses: boolean[] = [];\n\n    for (const entry of entries) {\n      const mint = app?.actions.getCashuMint(entry.mint);\n      if (!mint) continue;\n\n      const spent = await mint.check({ proofs: entry.proofs.map((p) => ({ secret: p.secret })) });\n\n      const data = spent.spendable.map(s => s);\n\n      statuses = [ ...statuses, ...data];\n    }\n\n    setCashuSpendable(() => !statuses.includes(false));\n  }\n\n  createEffect(() => {\n    if (invoice.token.length === 0) return;\n\n    checkMints(invoice.token);\n  });\n\n  createEffect(() => {\n    try {\n      const dec: Token = getDecodedToken(props.token);\n      setInvoice(() => ({ ...dec }));\n    } catch (e) {\n      logError('Failed to decode cashu token: ', e);\n    }\n  });\n\n  createEffect(() => {\n    if (invoiceCopied()) {\n      setTimeout(() => {\n        setInvoiceCopied(() => false);\n      }, 1_000);\n    }\n  })\n\n  const amount = () =>\n    `${invoice.token[0]?.proofs.reduce((acc, v) => acc + v.amount, 0) || 0} sats`;\n\n  const description = () => invoice.memo || '';\n\n  const confirmPayment = () => app?.actions.openConfirmModal({\n    title: intl.formatMessage(cashuInvoice.confirm.title),\n    description: intl.formatMessage(cashuInvoice.confirm.description, { amount: amount() }),\n    confirmLabel: intl.formatMessage(cashuInvoice.confirm.confirmLabel),\n    abortLabel: intl.formatMessage(cashuInvoice.confirm.abortLabel),\n    onAbort: app.actions.closeConfirmModal,\n    onConfirm: () => {\n      app.actions.closeConfirmModal();\n      redeemCashu();\n    },\n  });\n\n  const redeemCashu = () => {\n    const lnurl = account?.activeUser?.lud16 ?? '';\n    const url = `https://redeem.cashu.me?token=${encodeURIComponent(props.token)}&lightning=${encodeURIComponent(\n      lnurl,\n    )}&autopay=yes`;\n\n    window.open(url, 'blank_');\n  };\n\n  const klass = () => {\n    let k = props.alternative ? styles.cashuAlter : styles.cashu;\n    if (props.noBack) {\n      k += ` ${styles.noBack}`\n    }\n\n    return k;\n  }\n\n  return (\n    <div id={props.id} class={klass()}>\n      <Show when={paymentInProgress()}>\n        <div class={styles.paymentOverlay}>\n          <Loader />\n        </div>\n      </Show>\n      <div class={styles.header}>\n        <div class={styles.title}>\n          <div class={styles.cashuIcon}></div>\n          <div>{intl.formatMessage(cashuInvoice.title)}</div>\n        </div>\n        <div class={styles.headerActions}>\n          <Show when={cashuSpendable()}>\n            <ButtonGhost\n              onClick={(e: MouseEvent) => {\n                e.preventDefault();\n                app?.actions.openCashuModal(props.token, () => {\n                  app.actions.closeCashuModal();\n                  confirmPayment();\n                });\n              }}\n              shrink={true}\n            >\n              <div class={styles.qrIcon}></div>\n            </ButtonGhost>\n          </Show>\n\n          <Show\n            when={!invoiceCopied()}\n            fallback={<div class={styles.copyDone}><div class={styles.checkIcon}></div></div>}\n          >\n            <ButtonGhost\n              onClick={(e: MouseEvent) => {\n                e.preventDefault()\n                navigator.clipboard.writeText(props.token);\n                setInvoiceCopied(() => true);\n              }}\n              shrink={true}\n            >\n              <div class={styles.copyIcon}></div>\n            </ButtonGhost>\n          </Show>\n        </div>\n      </div>\n      <div class={styles.body}>\n        <div class={styles.description}>{description()}</div>\n        <div class={styles.amount}>{amount()}</div>\n      </div>\n\n      <div class={styles.footer}>\n        <div class={styles.mint}>\n          <Show when={invoice.token[0]}>\n            {intl.formatMessage(cashuInvoice.mint, { url: new URL(invoice.token[0]?.mint).hostname })}\n          </Show>\n        </div>\n        <Show\n          when={cashuSpendable()}\n          fallback={(\n            <div class={styles.spent}>\n              {intl.formatMessage(cashuInvoice.spent)}\n            </div>\n          )}\n        >\n          <div class={styles.payAction}>\n            <ButtonPrimary onClick={(e: MouseEvent) => {\n              e.preventDefault();\n              confirmPayment();\n            }}>\n              {intl.formatMessage(cashuInvoice.redeem)}\n            </ButtonPrimary>\n          </div>\n        </Show>\n      </div>\n    </div>\n  );\n}\n\nexport default hookForDev(Cashu);\n","import { Component, createEffect, createSignal, For, Match, Show, Switch } from 'solid-js';\nimport { hookForDev } from '../../lib/devTools';\n\nimport styles from './DirectMessages.module.scss';\nimport Avatar from '../Avatar/Avatar';\nimport { nip05Verification, userName } from '../../stores/profile';\nimport { DMContact } from '../../megaFeeds';\nimport { date } from '../../lib/dates';\nimport { DirectMessage } from '../../types/primal';\nimport { useDMContext } from '../../contexts/DMContext';\nimport { useAccountContext } from '../../contexts/AccountContext';\nimport { A } from '@solidjs/router';\nimport { useAppContext } from '../../contexts/AppContext';\nimport { hexToNpub } from '../../lib/keys';\nimport { msgHasCashu, msgHasInvoice, now } from '../../utils';\nimport DirectMessageParsedContent from './DirectMessageParsedContent';\nimport { linebreakRegex } from '../../constants';\nimport Lnbc from '../Lnbc/Lnbc';\nimport Cashu from '../Cashu/Cashu';\n\nconst recentTime = 900;\n\nconst DirectMessageConversation: Component<{\n  id?: string,\n  previousMessage: DirectMessage | undefined,\n  nextMessage: DirectMessage | undefined,\n  contact: DMContact,\n  message: DirectMessage,\n}> = (props) => {\n  const account = useAccountContext();\n  const app = useAppContext();\n  const dms = useDMContext();\n\n  const isFromPreviusSender = () => props.message.sender === props.previousMessage?.sender;\n  const isLastRecent = () => props.message.created_at - (props.nextMessage?.created_at || 0) > recentTime;\n\n  const isRecent = () => (props.previousMessage?.created_at || 0) - props.message.created_at < recentTime;\n  const isNextFromDifferentSender = () => props.message.sender !== props.nextMessage?.sender;\n\n  const isMe = () => props.message.sender === account?.publicKey;\n\n  const getThreadStatus = () => {\n    if (isFromPreviusSender() && isRecent()) return 'old';\n\n    return 'new';\n  }\n\n  const renderMessage = () => {\n    const msg = props.message;\n\n    if (!msgHasInvoice(msg.content) && !msgHasCashu(msg.content)) {\n      return (\n        <div\n          class={`${styles.message} ${messageClass( )}`}\n          data-event-id={msg.id}\n          title={date(msg.created_at || 0).date.toLocaleString()}\n        >\n          <DirectMessageParsedContent\n            content={msg.content}\n          />\n        </div>\n      );\n    };\n\n    let sections: string[] = [];\n\n    let content = msg.content.replace(linebreakRegex, ' __LB__ ').replace(/\\s+/g, ' __SP__ ');\n\n    let tokens: string[] = content.split(/[\\s]+/);\n\n    let sectionIndex = 0;\n\n    tokens.forEach((t) => {\n      if (t.startsWith('lnbc') || t.startsWith('cashuA')) {\n        if (sections[sectionIndex]) sectionIndex++;\n\n        sections[sectionIndex] = t;\n\n        sectionIndex++;\n      }\n      else {\n        let c = t;\n        const prev = sections[sectionIndex] || '';\n\n        if (t === '__SP__') {\n          c = prev.length === 0 ? '' : ' ';\n        }\n\n        if (t === '__LB__') {\n          c = prev.length === 0 ? '' : '\\r';\n        }\n\n        sections[sectionIndex] = prev + c;\n      }\n    });\n\n    return (\n      <For each={sections.reverse()}>\n        {section => (\n          <Switch fallback={\n            <div\n              class={`${styles.message} ${messageClass()}`}\n              data-event-id={msg.id}\n              title={date(msg.created_at || 0).date.toLocaleString()}\n            >\n              <DirectMessageParsedContent\n                content={section}\n              />\n            </div>\n          }>\n            <Match when={section.startsWith('lnbc')}>\n              <div\n                class={`${styles.messageLn} ${messageClass()}`}\n                data-event-id={msg.id}\n                title={date(msg.created_at || 0).date.toLocaleString()}\n              >\n                <Lnbc lnbc={section} noBack={true} alternative={isMe()} />\n              </div>\n            </Match>\n            <Match when={section.startsWith('cashuA')}>\n              <div\n                class={`${styles.messageLn} ${messageClass()}`}\n                data-event-id={msg.id}\n                title={date(msg.created_at || 0).date.toLocaleString()}\n              >\n                <Cashu token={section} noBack={true} alternative={isMe()} />\n              </div>\n            </Match>\n          </Switch>\n        )}\n      </For>\n    );\n  };\n\n  const messageClass = () => {\n\n    let klass = `${getThreadStatus() === 'old' ? styles.oldThread : styles.newThread}`;\n\n    if (isLastRecent() || isNextFromDifferentSender()) {\n      klass += ` ${styles.lastInThread}`;\n    }\n\n    return klass;\n  }\n\n  return (\n      <Show\n        when={!isMe()}\n        fallback={\n          <div class={styles.myThread}>\n            <Show when={isLastRecent() || isNextFromDifferentSender()}>\n              <A\n                href={app?.actions.profileLink(hexToNpub(props.message.sender)) || ''}\n                class={styles.avatar}\n              >\n                <Avatar user={account?.activeUser} size=\"xxs\" />\n              </A>\n            </Show>\n\n            <div class={styles.threadMessages}>\n              {renderMessage()}\n            </div>\n\n            <Show when={getThreadStatus() === 'new'}>\n              <div class={styles.threadTime}>\n                {date(props.message.created_at, 'long', now()).label}\n              </div>\n            </Show>\n          </div>\n        }\n      >\n        <div class={styles.theirThread}>\n          <Show when={isLastRecent() || isNextFromDifferentSender()}>\n            <A\n              href={app?.actions.profileLink(hexToNpub(props.message.sender)) || ''}\n              class={styles.avatar}\n            >\n              <Avatar user={props.contact.user} size=\"xxs\" />\n            </A>\n          </Show>\n\n            <div class={styles.threadMessages}>\n              {renderMessage()}\n            </div>\n\n          <Show when={getThreadStatus() === 'new'}>\n            <div class={styles.threadTime}>\n            {date(props.message.created_at, 'long', now()).label}\n            </div>\n          </Show>\n          </div>\n      </Show>\n  )\n}\n\nexport default hookForDev(DirectMessageConversation);\n","import { Component, createSignal, For, Show } from 'solid-js';\nimport { hookForDev } from '../../lib/devTools';\n\nimport styles from './DirectMessages.module.scss';\nimport Avatar from '../Avatar/Avatar';\nimport { nip05Verification, userName } from '../../stores/profile';\nimport { DMContact } from '../../megaFeeds';\nimport { date } from '../../lib/dates';\nimport { DirectMessage } from '../../types/primal';\nimport { useDMContext } from '../../contexts/DMContext';\nimport { useAccountContext } from '../../contexts/AccountContext';\nimport DirectMessageContent from './DirectMessageContent';\nimport Paginator from '../Paginator/Paginator';\nimport { TextField } from '@kobalte/core/text-field';\nimport DirectMessagesComposer from './DirectMessagesComposer';\n\nconst DirectMessageConversation: Component<{\n  id?: string,\n  contact: DMContact,\n  messages: DirectMessage[],\n}> = (props) => {\n  const account = useAccountContext();\n  const dms = useDMContext();\n\n  let conversationHolder: HTMLDivElement | undefined;\n\n  return (\n    <div class={styles.conversation}>\n      <Show when={!dms?.isFetchingMessages}>\n        <div class={styles.messages} ref={conversationHolder}>\n          <For each={props.messages}>\n            {(message, index) => (\n              <DirectMessageContent\n                previousMessage={props.messages[index()-1]}\n                nextMessage={props.messages[index()+1]}\n                contact={props.contact}\n                message={message}\n              />\n            )}\n          </For>\n          <Paginator\n            loadNextPage={dms?.actions.getConversationNextPage}\n            isSmall={true}\n          />\n        </div>\n      </Show>\n    </div>\n  )\n}\n\nexport default hookForDev(DirectMessageConversation);\n","import { Component, createEffect, createSignal, For, onCleanup, onMount, Show } from 'solid-js';\nimport { hookForDev } from '../../lib/devTools';\n\nimport styles from './DirectMessages.module.scss';\nimport Avatar from '../Avatar/Avatar';\nimport { nip05Verification, userName } from '../../stores/profile';\nimport { DMContact } from '../../megaFeeds';\nimport { date } from '../../lib/dates';\nimport { TextField } from '@kobalte/core/text-field';\nimport { useSearchContext } from '../../contexts/SearchContext';\nimport { editMentionRegex, emojiSearchLimit } from '../../constants';\nimport { createStore } from 'solid-js/store';\nimport { getCaretCoordinates } from '../../lib/textArea';\nimport { debounce, isVisibleInContainer, uuidv4 } from '../../utils';\nimport emojiSearch from '@jukben/emoji-search';\nimport { DirectMessage, PrimalUser } from '../../types/primal';\nimport { useAccountContext } from '../../contexts/AccountContext';\nimport { useProfileContext } from '../../contexts/ProfileContext';\nimport SearchOption from '../Search/SearchOption';\nimport {\n  placeholders,\n  messages as tMessages,\n  actions as tActions,\n  search as tSearch,\n} from '../../translations';\nimport { useIntl } from '@cookbook/solid-intl';\nimport { useDMContext } from '../../contexts/DMContext';\n\ntype AutoSizedTextArea = HTMLTextAreaElement & { _baseScrollHeight: number };\n\ntype EmojiOption = {\n  keywords: string[],\n  name: string,\n};\n\nconst DirectMessageComposer: Component<{\n  id?: string,\n  pubkey: string | undefined,\n  messageCount: number,\n}> = (props) => {\n\n  const account = useAccountContext();\n  const profile = useProfileContext();\n  const intl = useIntl();\n  const dms = useDMContext();\n\n  const [message, setMessage] = createSignal('');\n  const [inputFocused, setInputFocused] = createSignal(false);\n\n  const instanceId = uuidv4();\n\n  let newMessageInput: HTMLTextAreaElement | undefined;\n  let newMessageInputBorder: HTMLDivElement | undefined;\n  let newMessageWrapper: HTMLDivElement | undefined;\n  let emojiOptions: HTMLDivElement | undefined;\n\n  const [highlightedEmoji, setHighlightedEmoji] = createSignal<number>(0);\n  const [isEmojiInput, setEmojiInput] = createSignal(false);\n  const [emojiQuery, setEmojiQuery] = createSignal('');\n  const [emojiResults, setEmojiResults] = createStore<EmojiOption[]>([]);\n  let emojiCursorPosition = { top: 0, left: 0, height: 0 };\n\n  const sendMessage = async () => {\n    if (!props.pubkey ||\n      !newMessageInput ||\n      !newMessageInputBorder ||\n      !newMessageWrapper) {\n      return;\n    }\n\n    const text = message().trim();\n\n    if (text.length === 0) {\n      return;\n    }\n    setMessage('');\n\n    const content = prepareMessageForSending(text);\n\n    const msg = {\n      id: `N_M_${props.messageCount}`,\n      sender: account?.publicKey || '',\n      content,\n      created_at: Math.floor((new Date()).getTime() / 1000),\n    };\n\n    const success = await dms?.actions.sendMessage(props.pubkey, msg);\n\n    if (success) {\n      newMessageInput.value = '';\n      newMessageInput.style.height = '40px';\n      newMessageInputBorder.style.height = '40px';\n      newMessageWrapper.style.height = '80px';\n\n      // setTimeout(() => {\n      //   const element = document.querySelector(`[data-user=\"${props.pubkey}\"]`);\n\n      //   if (element && sendersListElement && !isVisibleInContainer(element, sendersListElement)) {\n      //     element.scrollIntoView();\n      //   }\n      // }, 100);\n    }\n  }\n\n  const sendButtonClass = () => {\n    return inputFocused() && message().trim().length > 0 ? styles.primaryButton : styles.secondaryButton;\n  };\n\n  const onInput = () => {\n    newMessageInput && setMessage(newMessageInput.value);\n  }\n\n  const getScrollHeight = (elm: AutoSizedTextArea) => {\n    var savedValue = elm.value\n    elm.value = ''\n    elm._baseScrollHeight = elm.scrollHeight\n    elm.value = savedValue\n  }\n\n  const onExpandableTextareaInput = () => {\n    const maxHeight = 800;\n\n    const input = newMessageInput as AutoSizedTextArea;\n\n    if(!input || input.nodeName !== 'TEXTAREA') {\n      return;\n    }\n\n    const minRows = parseInt(input.getAttribute('data-min-rows') || '0');\n\n    !input._baseScrollHeight && getScrollHeight(input);\n\n\n    if (input.scrollHeight >= (maxHeight / 3)) {\n      return;\n    }\n\n    input.rows = minRows;\n    const rows = input.value === '' ? 0 : Math.ceil((input.scrollHeight - input._baseScrollHeight) / 20);\n\n    input.rows = minRows + rows;\n    input.style.height = `${40 + (20 * rows)}px`;\n\n    if (newMessageWrapper) {\n      newMessageWrapper.style.height = `${80 + (20 * rows)}px`;\n    }\n\n    if (newMessageInputBorder) {\n      newMessageInputBorder.style.height = `${40 + (20 * rows)}px`;\n    }\n\n    // debounce(() => {\n      setMessage(input.value)\n    // }, 300);\n\n  }\n\n  const onKeyDown = (e: KeyboardEvent) => {\n    if (!newMessageInput || !newMessageWrapper) {\n      return false;\n    }\n\n    const mentionSeparators = ['Enter', 'Space', 'Comma', 'Tab'];\n\n    if (!isMentioning() && !isEmojiInput() && e.code === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      debounce(() => {\n        sendMessage();\n      }, 300);\n\n      return false;\n    }\n\n    if (!isMentioning() && !isEmojiInput() && e.key === ':') {\n\n      // Ignore if `:` is a part of a word\n      if (newMessageInput.selectionStart > 0 && ![' ', '\\r\\n', '\\r', '\\n'].includes(newMessageInput.value[newMessageInput.selectionStart-1])) {\n        return false;\n      }\n\n      emojiCursorPosition = getCaretCoordinates(newMessageInput, newMessageInput.selectionStart);\n      setEmojiInput(true);\n      return false;\n    }\n\n    if (isEmojiInput()) {\n\n      if (e.code === 'ArrowDown') {\n        e.preventDefault();\n        setHighlightedEmoji(i => {\n          if (emojiResults.length === 0) {\n            return 0;\n          }\n\n          return i < emojiResults.length - 7 ? i + 6 : 0;\n        });\n\n        const emojiHolder = document.getElementById(`${instanceId}-${highlightedEmoji()}`);\n\n        if (emojiHolder && emojiOptions && !isVisibleInContainer(emojiHolder, emojiOptions)) {\n          emojiHolder.scrollIntoView({ block: 'end', behavior: 'smooth' });\n        }\n\n        return false;\n      }\n\n      if (e.code === 'ArrowUp') {\n        e.preventDefault();\n        setHighlightedEmoji(i => {\n          if (emojiResults.length === 0) {\n            return 0;\n          }\n\n          return i >= 6 ? i - 6 : emojiResults.length - 1;\n        });\n\n        const emojiHolder = document.getElementById(`${instanceId}-${highlightedEmoji()}`);\n\n        if (emojiHolder && emojiOptions && !isVisibleInContainer(emojiHolder, emojiOptions)) {\n          emojiHolder.scrollIntoView({ block: 'start', behavior: 'smooth' });\n        }\n\n        return false;\n      }\n\n      if (e.code === 'ArrowRight') {\n        e.preventDefault();\n        setHighlightedEmoji(i => {\n          if (emojiResults.length === 0) {\n            return 0;\n          }\n\n          return i < emojiResults.length - 1 ? i + 1 : 0;\n        });\n\n        const emojiHolder = document.getElementById(`${instanceId}-${highlightedEmoji()}`);\n\n        if (emojiHolder && emojiOptions && !isVisibleInContainer(emojiHolder, emojiOptions)) {\n          emojiHolder.scrollIntoView({ block: 'end', behavior: 'smooth' });\n        }\n\n        return false;\n      }\n\n      if (e.code === 'ArrowLeft') {\n        e.preventDefault();\n        setHighlightedEmoji(i => {\n          if (emojiResults.length === 0) {\n            return 0;\n          }\n\n          return i > 0 ? i - 1 : emojiResults.length - 1;\n        });\n\n        const emojiHolder = document.getElementById(`${instanceId}-${highlightedEmoji()}`);\n\n        if (emojiHolder && emojiOptions && !isVisibleInContainer(emojiHolder, emojiOptions)) {\n          emojiHolder.scrollIntoView({ block: 'start', behavior: 'smooth' });\n        }\n\n        return false;\n      }\n\n      if (e.code === 'Semicolon') {\n      }\n\n      if (mentionSeparators.includes(e.code) || e.code === 'Semicolon') {\n        if (emojiQuery().trim().length === 0) {\n          setEmojiInput(false);\n          return false;\n        }\n        e.preventDefault();\n        emojiResults.length === 0 && setEmojiResults(() => emojiSearch(emojiQuery()));\n        selectEmoji(emojiResults[highlightedEmoji()]);\n        setHighlightedEmoji(0);\n        return false;\n      }\n\n      const cursor = newMessageInput.selectionStart;\n      const lastEmojiTrigger = newMessageInput.value.slice(0, cursor).lastIndexOf(':');\n\n      if (e.code === 'Backspace') {\n        setEmojiQuery(emojiQuery().slice(0, -1));\n\n        if (lastEmojiTrigger < 0 || cursor - lastEmojiTrigger <= 1) {\n          setEmojiInput(false);\n          return false;\n        }\n\n        return false;\n      }\n\n      if (!['Shift', 'Control', 'Meta'].includes(e.key)) {\n        setEmojiQuery(q => q + e.key);\n        return false;\n      }\n\n      return false;\n    }\n\n    if (!isMentioning() && e.key === '@') {\n      mentionCursorPosition = getCaretCoordinates(newMessageInput, newMessageInput.selectionStart);\n\n      // Ignore if `@` is a part of a word\n      if (newMessageInput.selectionStart > 0 && ![' ', '\\r\\n', '\\r', '\\n'].includes(newMessageInput.value[newMessageInput.selectionStart-1])) {\n        return false;\n      }\n\n      setPreQuery('');\n      setQuery('');\n      setMentioning(true);\n      return false;\n    }\n\n    if (!isMentioning() && e.code === 'Backspace' && newMessageInput) {\n      let cursor = newMessageInput.selectionStart;\n      const textSoFar = newMessageInput.value.slice(0, cursor);\n      const lastWord = textSoFar.split(/[\\s,;\\n\\r]/).pop();\n\n      if (lastWord?.startsWith('@`')) {\n        const index = textSoFar.lastIndexOf(lastWord);\n\n        const newText = textSoFar.slice(0, index) + newMessageInput.value.slice(cursor);\n\n        setMessage(newText);\n        newMessageInput.value = newText;\n\n        newMessageInput.selectionEnd = index;\n      }\n    }\n\n    if (isMentioning()) {\n\n      if (e.code === 'ArrowDown') {\n        e.preventDefault();\n        setHighlightedUser(i => {\n          if (!search?.users || search.users.length === 0) {\n            return 0;\n          }\n\n          return i < search.users.length - 1 ? i + 1 : 0;\n        });\n        return false;\n      }\n\n      if (e.code === 'ArrowUp') {\n        e.preventDefault();\n        setHighlightedUser(i => {\n          if (!search?.users || search.users.length === 0) {\n            return 0;\n          }\n\n          return i > 0 ? i - 1 : search.users.length - 1;\n        });\n        return false;\n      }\n\n      if (mentionSeparators.includes(e.code)) {\n        if (preQuery().trim().length === 0) {\n          setMentioning(false);\n          return false;\n        }\n        e.preventDefault();\n        search?.users && selectUser(search.users[highlightedUser()])\n        setMentioning(false);\n        return false;\n      }\n\n      const cursor = newMessageInput.selectionStart;\n      const lastMentionTrigger = newMessageInput.value.slice(0, cursor).lastIndexOf('@');\n\n      if (e.code === 'Backspace') {\n        setPreQuery(preQuery().slice(0, -1));\n\n        if (lastMentionTrigger < 0 || cursor - lastMentionTrigger <= 1) {\n          setMentioning(false);\n          return false;\n        }\n      } else if (!['Shift', 'Control', 'Meta'].includes(e.key)) {\n        setPreQuery(q => q + e.key);\n        return false\n      }\n\n      return false;\n    }\n\n    return true;\n  };\n\n  onMount(() => {\n    newMessageWrapper?.addEventListener('input', () => onExpandableTextareaInput());\n    newMessageInput && newMessageInput.addEventListener('keydown', onKeyDown);\n  });\n\n  onCleanup(() => {\n    newMessageWrapper?.removeEventListener('input', () => onExpandableTextareaInput());\n    newMessageInput && newMessageInput.removeEventListener('keydown', onKeyDown);\n  });\n\n  // MENTIONING\n\n  const search = useSearchContext();\n\n  const [isMentioning, setMentioning] = createSignal(false);\n  const [preQuery, setPreQuery] = createSignal('');\n  const [query, setQuery] = createSignal('');\n\n  const [highlightedUser, setHighlightedUser] = createSignal<number>(0);\n  let mentionCursorPosition = { top: 0, left: 0, height: 0 };\n\n  let mentionOptions: HTMLDivElement | undefined;\n\n  const prepareMessageForSending = (text: string) => {\n\n    return text.replace(editMentionRegex, (url) => {\n\n      const [_, name] = url.split('\\`');\n      const user = userRefs[name];\n\n      // @ts-ignore\n      return ` nostr:${user.npub}`;\n    })\n  }\n\n  createEffect(() => {\n    const preQ = preQuery();\n\n    debounce(() => {\n      setQuery(() => preQ)\n    }, 500);\n  })\n\n  createEffect(() => {\n    if (query().length === 0) {\n      search?.actions.getRecomendedUsers();\n      return;\n    }\n\n    search?.actions.findUsers(query());\n  });\n\n  createEffect(() => {\n    if (isMentioning()) {\n\n      mentionPositionOptions();\n\n      if (search?.users && search.users.length > 0) {\n        setHighlightedUser(0);\n      }\n    }\n  });\n\n\n  const mentionPositionOptions = () => {\n    if (!newMessageInput || !mentionOptions || !newMessageWrapper) {\n      return;\n    }\n\n    const taRect = newMessageInput.getBoundingClientRect();\n\n    let newBottom = taRect.height - mentionCursorPosition.top + 32;\n    let newLeft = mentionCursorPosition.left;\n\n    if (newLeft + mentionOptions.getBoundingClientRect().width > 628) {\n      newLeft = 628 - mentionOptions.getBoundingClientRect().width;\n    }\n\n    mentionOptions.style.bottom = `${newBottom}px`;\n    mentionOptions.style.left = `${newLeft}px`;\n  };\n\n  const selectEmoji = (emoji: EmojiOption) => {\n    if (!newMessageInput || !emoji) {\n      setEmojiInput(false);\n      setEmojiQuery('');\n      setEmojiResults(() => []);\n      return;\n    }\n\n    const msg = message();\n\n    // Get cursor position to determine insertion point\n    let cursor = newMessageInput.selectionStart;\n\n    // Get index of the token and insert emoji character\n    const index = msg.slice(0, cursor).lastIndexOf(':');\n    const value = msg.slice(0, index) + emoji.name + msg.slice(cursor);\n\n    // Reset query, update message and text area value\n    setMessage(value);\n    newMessageInput.value = message();\n\n    // Calculate new cursor position\n    newMessageInput.selectionEnd = index + 1;\n    newMessageInput.focus();\n\n    setEmojiInput(false);\n    setEmojiQuery('');\n    setEmojiResults(() => []);\n\n    // Dispatch input event to recalculate UI position\n    // const e = new Event('input', { bubbles: true, cancelable: true});\n    // newMessageInput.dispatchEvent(e);\n  };\n\n\n  const [userRefs, setUserRefs] = createStore<Record<string, PrimalUser>>({});\n\n\n  const selectUser = (user: PrimalUser | undefined) => {\n    if (!newMessageInput || !user) {\n      return;\n    }\n\n    setMentioning(false);\n\n    const name = userName(user);\n\n    setUserRefs((refs) => ({\n      ...refs,\n      [name]: user,\n    }));\n\n    const msg = message();\n\n    // Get cursor position to determine insertion point\n    let cursor = newMessageInput.selectionStart;\n\n    // Get index of the token and inster user's handle\n    const index = msg.slice(0, cursor).lastIndexOf('@');\n    const value = msg.slice(0, index) + `@\\`${name}\\`` + msg.slice(cursor);\n\n    // Reset query, update message and text area value\n    setQuery('');\n    setMessage(value);\n    newMessageInput.value = message();\n\n    newMessageInput.focus();\n\n    // Calculate new cursor position\n    cursor = value.slice(0, cursor).lastIndexOf('@') + name.length + 3;\n    newMessageInput.selectionEnd = cursor;\n\n\n    // Dispatch input event to recalculate UI position\n    const e = new Event('input', { bubbles: true, cancelable: true});\n    newMessageInput.dispatchEvent(e);\n  };\n\n  const msgHasInvoice = (msg: DirectMessage) => {\n    const r =/(\\s+|\\r\\n|\\r|\\n|^)lnbc[a-zA-Z0-9]+/;\n    const test = r.test(msg.content);\n\n    return test\n  };\n\n  const msgHasCashu = (msg: DirectMessage) => {\n    const r =/(\\s+|\\r\\n|\\r|\\n|^)cashuA[a-zA-Z0-9]+/;\n    const test = r.test(msg.content);\n\n    return test\n  };\n\n  createEffect(() => {\n    if (emojiQuery().length > emojiSearchLimit) {\n      setEmojiResults(() => emojiSearch(emojiQuery()));\n    }\n  });\n\n  createEffect(() => {\n    if (isEmojiInput()) {\n      emojiPositionOptions();\n\n      if (emojiResults.length > 0) {\n        setHighlightedEmoji(0);\n      }\n    }\n  });\n\n  const emojiPositionOptions = () => {\n    if (!newMessageInput || !emojiOptions || !newMessageWrapper) {\n      return;\n    }\n\n    const taRect = newMessageInput.getBoundingClientRect();\n\n    let newBottom = taRect.height - emojiCursorPosition.top + 32;\n    let newLeft = emojiCursorPosition.left;\n\n    emojiOptions.style.bottom = `${newBottom}px`;\n    emojiOptions.style.left = `${newLeft}px`;\n  };\n\n  return (\n    <div class={styles.newMessage} ref={newMessageWrapper} >\n      <div class={styles.textAreaBorder} ref={newMessageInputBorder}>\n        <textarea\n          ref={newMessageInput}\n          data-min-rows={2}\n          onFocus={() => setInputFocused(true)}\n          onBlur={() => setInputFocused(false)}\n          onInput={onInput}\n        ></textarea>\n      </div>\n      <button\n        class={sendButtonClass()}\n        onClick={sendMessage}\n      >\n        <div class={styles.iconSend}></div>\n      </button>\n\n      <Show when={isMentioning()}>\n        <div\n          id=\"mention-auto\"\n          class={styles.searchSuggestions}\n          ref={mentionOptions}\n        >\n          <For each={search?.users}>\n            {(user, index) => (\n              <SearchOption\n                title={userName(user)}\n                description={user.nip05}\n                icon={<Avatar user={user} size=\"xs\" />}\n                statNumber={profile?.profileHistory.stats[user.pubkey]?.followers_count || search?.scores[user.pubkey]}\n                statLabel={intl.formatMessage(tSearch.followers)}\n                onClick={() => selectUser(user)}\n                highlighted={highlightedUser() === index()}\n              />\n            )}\n          </For>\n        </div>\n      </Show>\n\n      <Show when={isEmojiInput() && emojiQuery().length > emojiSearchLimit}>\n        <div\n          class={styles.emojiSuggestions}\n          ref={emojiOptions}\n        >\n          <For each={emojiResults}>\n            {(emoji, index) => (\n              <button\n              id={`${instanceId}-${index()}`}\n              class={`${styles.emojiOption} ${highlightedEmoji() === index() ? styles.highlight : ''}`}\n              onClick={() => selectEmoji(emoji)}\n              >\n                {emoji.name}\n              </button>\n            )}\n          </For>\n        </div>\n      </Show>\n    </div>\n  )\n}\n\nexport default hookForDev(DirectMessageComposer);\n","import { useBeforeLeave, useNavigate, useParams } from \"@solidjs/router\";\nimport { Component, createEffect, For, on, onMount, Show } from \"solid-js\";\nimport { createStore } from \"solid-js/store\";\nimport { DMContact, fetchDMContacts } from \"../megaFeeds\";\nimport { APP_ID } from \"../App\";\nimport { useAccountContext } from \"../contexts/AccountContext\";\nimport { userName } from \"../stores/profile\";\nimport { useDMContext } from \"../contexts/DMContext\";\nimport DirectMessageContact from \"../components/DirectMessages/DirectMessageContact\";\n\nimport styles from './DirectMessages.module.scss';\nimport { Tabs } from \"@kobalte/core/tabs\";\n\nimport { placeholders, messages as tMessages } from \"../translations\";\nimport PageTitle from \"../components/PageTitle/PageTitle\";\nimport { useIntl } from \"@cookbook/solid-intl\";\nimport PageCaption from \"../components/PageCaption/PageCaption\";\nimport { loadLastDMConversations, loadLastDMRelation } from \"../lib/localStore\";\nimport { PrimalUser, UserRelation } from \"../types/primal\";\nimport Wormhole from \"../components/Wormhole/Wormhole\";\nimport Search from \"../components/Search/Search\";\nimport DirectMessageConversation from \"../components/DirectMessages/DirectMessageConversation\";\nimport { TextField } from \"@kobalte/core/text-field\";\nimport DirectMessagesComposer from \"../components/DirectMessages/DirectMessagesComposer\";\nimport { Pagination } from \"@kobalte/core/*\";\nimport Paginator from \"../components/Paginator/Paginator\";\nimport { hexToNpub, npubToHex } from \"../lib/keys\";\nimport { logError } from \"../lib/logger\";\n\nconst DirectMessages: Component = () => {\n\n  const params = useParams();\n  const account = useAccountContext();\n  const dms = useDMContext();\n  const intl = useIntl();\n  const navigate = useNavigate();\n\n  const contacts = (relation: UserRelation) => {\n    if (!dms) return [];\n\n    return dms.dmContacts[relation] || [];\n  }\n\n  let firstTime = true;\n\n  const changeRelation = async (relation: string) => {\n    if (!dms || !['any', 'follows', 'other'].includes(relation)) return;\n    if (\n      relation === dms.lastConversationRelation &&\n      dms?.dmContacts[relation as UserRelation].length > 0\n    ) return;\n\n    dms.actions.setDmRelation2(relation as UserRelation);\n\n    let list = dms?.dmContacts[relation as UserRelation];\n\n    if (list.length > 0) {\n      const first = toNpub(list[0].pubkey);\n\n      if (first.length === 0) return;\n\n      navigate(`/dms/${first}`);\n      return;\n    }\n\n    await dms.actions.getContacts(relation as UserRelation);\n\n    list = dms?.dmContacts[relation as UserRelation];\n\n    const first = list.find(c => c.pubkey === dms.lastConversationContact?.pubkey)?.pubkey || toNpub(list[0].pubkey);\n\n    if (first.length === 0) return;\n\n    navigate(`/dms/${first}`);\n    // if (!isContactInTheList(dms.lastConversationContact?.pubkey, dms.lastConversationRelation)) {\n    //   const first = dms?.dmContacts[relation as UserRelation][0].pubkey;\n\n    //   first && dms.actions.selectContact(first)\n    // }\n  }\n\n  const isFollowing = (pubkey: string) => {\n    if (!account?.following) return false;\n\n    return account.following.includes(pubkey);\n  }\n\n  const updateRelationOfContact = async (pubkey: string) => {\n    if (!dms || !account || !account.following) return;\n\n    if (isFollowing(pubkey)) {\n      return await changeRelation('follows');\n    }\n\n    if (!isFollowing(pubkey)) {\n      return await changeRelation('other');\n    }\n  };\n\n  const setupContact = async (contact: string) => {\n    await dms?.actions.selectContact(contact);\n    await updateRelationOfContact(contact);\n  }\n\n  const toNpub = (pubkey: string) => {\n    let npub = pubkey;\n\n    if (!npub.startsWith('npub')) {\n      try {\n        npub = hexToNpub(npub);\n      } catch (e) {\n        logError('Failed to decode npub: ', e);\n        return '';\n      }\n    }\n\n    return npub;\n  }\n\n  const selectContact = (pubkey: string) => {\n    const npub = toNpub(pubkey);\n\n    if (npub.length === 0) return;\n\n    navigate(`/dms/${npub}`);\n  }\n\n  const setupPageState = async (contact: string) => {\n    const pubkey = account?.publicKey;\n\n    if (!pubkey || !account.isKeyLookupDone) return;\n\n    if (!contact) {\n      const lastContact = dms?.lastConversationContact?.pubkey;\n\n      if (lastContact) {\n        await updateRelationOfContact(lastContact);\n        selectContact(lastContact);\n        return;\n      }\n\n      changeRelation(dms?.lastConversationRelation || 'follows')\n      return;\n    }\n\n    setupContact(contact);\n  }\n\n  const markAllAsRead = () => {\n    dms?.actions.resetAllMessages();\n  };\n\n  const isSelected = (pubkey: string) => {\n    const npub = toNpub(pubkey);\n\n    return [pubkey, npub].includes(params.contact);\n  }\n\n  createEffect(on(() => [account?.isKeyLookupDone, params.contact], (next) => {\n    const [ isDone, contact ] = next;\n\n    if (isDone) {\n      let pubkey = (contact || '') as string;\n\n      if (pubkey.startsWith('npub')) {\n        pubkey = npubToHex(pubkey);\n      }\n\n      setupPageState(pubkey);\n    }\n  }));\n\n  createEffect(on(() => dms?.dmCount, (v, p) => {\n    if (!v || v === p) return;\n\n    const count = v;\n\n    if (count > 0) {\n      dms?.actions.refreshContacts(dms.lastConversationRelation);\n    }\n  }, { defer: true }));\n\n  return (\n    <div class={styles.dmLayout}>\n      <PageTitle title={intl.formatMessage(tMessages.title)} />\n\n      <div class={styles.dmHeader}>\n        <PageCaption title={intl.formatMessage(tMessages.title)} />\n      </div>\n\n      <Wormhole\n        to=\"search_section\"\n      >\n        <Search\n          placeholder={\n            intl.formatMessage(placeholders.findUser)\n          }\n          onInputConfirm={() => {}}\n          noLinks={true}\n          hideDefault={true}\n          onUserSelect={(user: PrimalUser) => navigate(`/dms/${user.pubkey}`)}\n        />\n      </Wormhole>\n\n      <div class={styles.dmContent}>\n        <div class={styles.dmSidebar}>\n          <Tabs\n            value={dms?.lastConversationRelation}\n            onChange={changeRelation}\n          >\n            <div class={styles.dmControls}>\n              <div>\n                <Tabs.List class={styles.dmContactsTabs}>\n                  <Tabs.Trigger\n                    class={styles.dmContactTab}\n                    value={'follows'}\n                  >\n                    {intl.formatMessage(tMessages.follows)}\n                  </Tabs.Trigger>\n                  <Tabs.Trigger\n                    class={styles.dmContactTab}\n                    value={'other'}\n                  >\n                    {intl.formatMessage(tMessages.other)}\n                  </Tabs.Trigger>\n\n                  <Tabs.Indicator class={styles.dmContactsTabIndicator} />\n                </Tabs.List>\n              </div>\n              <button\n                class={styles.markAsRead}\n                disabled={dms?.dmCount === 0}\n                onClick={markAllAsRead}\n              >\n                {intl.formatMessage(tMessages.markAsRead)}\n              </button>\n            </div>\n\n            <div class={styles.dmContactsList}>\n              <For each={['follows', 'other']}>\n                {relation => (\n                  <Tabs.Content class={styles.dmContactsTabContent} value={relation}>\n                    <For each={contacts(relation as UserRelation)}>\n                      {contact => (\n                        <DirectMessageContact\n                          dmContact={contact}\n                          onSelect={selectContact}\n                          isSelected={isSelected(contact.pubkey)}\n                        />\n                      )}\n                    </For>\n                    <Paginator\n                      isSmall={true}\n                      loadNextPage={() => dms?.actions.getContactsNextPage(relation as UserRelation)}\n                    />\n                  </Tabs.Content>\n                )}\n              </For>\n            </div>\n          </Tabs>\n        </div>\n\n        <div class={styles.dmConversation}>\n          <DirectMessagesComposer\n            pubkey={dms?.lastConversationContact?.pubkey}\n            messageCount={dms?.messages.length}\n          />\n          <DirectMessageConversation\n            contact={dms?.lastConversationContact}\n            messages={dms?.messages}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DirectMessages;\n"],"names":["DirectMessageContact","props","user","dmContact","contactInfo","dmInfo","count","cnt","now","Math","floor","Date","getTime","_el$","_tmpl$2","_el$2","firstChild","_el$3","_el$4","_el$7","nextSibling","$$click","onSelect","pubkey","_$insert","_$createComponent","Avatar","size","userName","Show","when","latest_at","children","_el$5","_tmpl$","_$effect","_$className","styles","dotSeparator","_el$6","date","label","lastMessageTime","nip05Verification","_el$8","senderBubble","_p$","_v$","directMessageContact","isSelected","selected","_v$2","_v$3","senderInfo","_v$4","firstLine","_v$5","senderName","_v$6","secondLine","_$setAttribute","undefined","DirectMessageContact$1","hookForDev","_$delegateEvents","groupGridLimit","DirectMessageParsedContent","useAccountContext","app","useAppContext","media","useMediaContext","dms","useDMContext","content","setContent","createStore","lastSignificantContent","isAfterEmbed","totalLinks","onMount","generateContent","noteWidth","updateContent","contentArray","type","token","meta","len","length","index","els","tokens","parseContent","i","parseToken","lastMediaIndex","findLastIndex","c","lastContent","every","t","includes","cont","slice","replace","linebreakRegex","split","isInterpunction","isUrl","indexOf","prefix","matched","match","urlExtractRegex","suffix","substring","ignoreMedia","isImage","removeLinebreaks","isMp4Video","videoType","isOggVideo","isWebmVideo","isYouTube","isSpotify","isTwitch","isMixCloud","isSoundCloud","isAppleMusic","isWavelake","noLinks","preview","getLinkPreview","noPreviews","url","description","images","some","x","title","isNoteMention","isUserMention","isAddrMention","isTagMention","isHashtag","isCustomEmoji","isUnitifedLnAddress","lnbcToken","lnUnifiedRegex","find","m","startsWith","isLnbc","lastIndex","lastGroup","removedBy","removedTokens","renderLinebreak","item","min","lineBreaks","Array","fill","For","each","_","renderText","push","join","replaceAll","renderImage","groupCount","imageGroup","generatePrivateKey","lastClass","image","actions","getMedia","media_url","getMediaUrlDefault","imageThumb","NoteImage","src","isDev","mediaThumb","width","gridClass","plainBorder","forceHeight","renderVideo","mVideo","h","w","ratio","margins","klass","video","_tmpl$3","muted","loop","playsInline","addVideo","renderYouTube","youtubeId","RegExp","$1","_tmpl$4","renderSpotify","convertedUrl","_tmpl$5","renderTwitch","args","window","location","hostname","_tmpl$6","renderMixCloud","feedPath","$2","_el$9","_tmpl$7","_el$10","renderSoundCloud","_el$11","_tmpl$8","renderAppleMusic","isSongLink","test","_el$12","_tmpl$9","renderWavelake","_el$13","_tmpl$10","renderLinks","LinkPreview","isLast","_el$14","_tmpl$11","_el$15","renderComunityMention","id","specialCharsRegex","exec","unknownMention","nid","A","href","decoded","decodeIdentifier","reEncoded","nip19","naddrEncode","kind","data","identifier","mentionedArticles","referecedReads","mention","renderLongFormMention","_el$16","ArticleCompactPreview","article","hideFooter","hideContext","articlePreview","renderNoteMention","link","_el$17","_tmpl$12","eventId","decode","Kind","Text","hex","path","noteEncode","_el$18","_tmpl$13","mentionedNotes","referecedNotes","mentionedHighlights","mentionedUsers","referecedUsers","f","post","msg","event","ment","LongForm","LongFormShell","_el$19","EmbeddedNote","note","Highlight","_el$20","mentionedHighlight","e","logError","_el$21","error","renderUserMention","nostr","end","profileId","npub","hexToNpub","profileLink","truncateNpub","_el$22","_tmpl$14","_el$23","_el$24","_tmpl$15","_el$25","_$memo","MentionedUserLink","_el$26","renderHashtag","term","hashtagCharsRegex","embeded","_el$27","_tmpl$16","_el$29","_tmpl$17","renderEmoji","renderLnbc","Lnbc","lnbc","renderContent","renderers","linebreak","text","youtube","spotify","twitch","mixcloud","soundcloud","applemusic","wavelake","notemention","usermention","comunity","hashtag","emoji","_el$31","parsedMessage","Cashu","account","intl","useIntl","invoice","setInvoice","cashuSpendable","setCashuSpendable","createSignal","invoiceCopied","setInvoiceCopied","paymentInProgress","setPaymentInProgress","checkMints","__name","entries","statuses","entry","mint","getCashuMint","check","proofs","map","p","secret","spendable","s","createEffect","dec","getDecodedToken","setTimeout","amount","reduce","acc","v","memo","confirmPayment","openConfirmModal","formatMessage","cashuInvoice","confirm","confirmLabel","abortLabel","onAbort","closeConfirmModal","onConfirm","redeemCashu","lnurl","activeUser","lud16","encodeURIComponent","open","k","alternative","cashuAlter","cashu","noBack","Loader","paymentOverlay","ButtonGhost","onClick","preventDefault","openCashuModal","closeCashuModal","shrink","qrIcon","fallback","_v$12","copyDone","_v$13","checkIcon","navigator","clipboard","writeText","copyIcon","URL","spent","ButtonPrimary","redeem","payAction","header","cashuIcon","headerActions","_v$7","body","_v$8","_v$9","_v$10","footer","_v$11","recentTime","DirectMessageConversation","isFromPreviusSender","message","sender","previousMessage","isLastRecent","created_at","nextMessage","isRecent","isNextFromDifferentSender","isMe","publicKey","getThreadStatus","renderMessage","msgHasInvoice","msgHasCashu","messageClass","toLocaleString","sections","sectionIndex","forEach","prev","reverse","section","Switch","Match","messageLn","oldThread","newThread","lastInThread","avatar","threadTime","_v$15","myThread","_v$16","threadMessages","contact","theirThread","_v$14","conversationHolder","isFetchingMessages","_ref$","_$use","messages","DirectMessageContent","Paginator","loadNextPage","getConversationNextPage","isSmall","conversation","DirectMessageComposer","profile","useProfileContext","setMessage","inputFocused","setInputFocused","instanceId","uuidv4","newMessageInput","newMessageInputBorder","newMessageWrapper","emojiOptions","highlightedEmoji","setHighlightedEmoji","isEmojiInput","setEmojiInput","emojiQuery","setEmojiQuery","emojiResults","setEmojiResults","emojiCursorPosition","top","left","height","sendMessage","trim","prepareMessageForSending","messageCount","value","style","sendButtonClass","primaryButton","secondaryButton","onInput","getScrollHeight","elm","savedValue","_baseScrollHeight","scrollHeight","onExpandableTextareaInput","input","nodeName","minRows","parseInt","getAttribute","maxHeight","rows","ceil","onKeyDown","mentionSeparators","isMentioning","code","shiftKey","debounce","key","selectionStart","getCaretCoordinates","emojiHolder","document","getElementById","isVisibleInContainer","scrollIntoView","block","behavior","emojiSearch","selectEmoji","cursor","lastEmojiTrigger","lastIndexOf","q","mentionCursorPosition","setPreQuery","setQuery","setMentioning","textSoFar","lastWord","pop","newText","selectionEnd","setHighlightedUser","search","users","preQuery","selectUser","highlightedUser","lastMentionTrigger","addEventListener","onCleanup","removeEventListener","useSearchContext","query","mentionOptions","editMentionRegex","name","userRefs","preQ","getRecomendedUsers","findUsers","mentionPositionOptions","newBottom","getBoundingClientRect","newLeft","bottom","focus","setUserRefs","refs","Event","bubbles","cancelable","dispatchEvent","emojiSearchLimit","emojiPositionOptions","_ref$2","$$input","_ref$3","_ref$4","SearchOption","nip05","icon","statNumber","profileHistory","stats","followers_count","scores","statLabel","tSearch","followers","highlighted","searchSuggestions","_ref$5","emojiOption","highlight","emojiSuggestions","newMessage","textAreaBorder","iconSend","DirectMessagesComposer","DirectMessages","params","useParams","navigate","useNavigate","contacts","relation","dmContacts","changeRelation","lastConversationRelation","setDmRelation2","list","first","toNpub","getContacts","lastConversationContact","isFollowing","following","updateRelationOfContact","setupContact","selectContact","setupPageState","isKeyLookupDone","lastContact","markAllAsRead","resetAllMessages","on","next","isDone","npubToHex","dmCount","refreshContacts","defer","PageTitle","tMessages","PageCaption","Wormhole","to","Search","placeholder","placeholders","findUser","onInputConfirm","hideDefault","onUserSelect","Tabs","onChange","List","dmContactsTabs","Trigger","dmContactTab","follows","other","Indicator","dmContactsTabIndicator","markAsRead","dmControls","disabled","Content","dmContactsTabContent","getContactsNextPage","dmContactsList","dmLayout","dmHeader","dmContent","dmSidebar","dmConversation"],"mappings":"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"}